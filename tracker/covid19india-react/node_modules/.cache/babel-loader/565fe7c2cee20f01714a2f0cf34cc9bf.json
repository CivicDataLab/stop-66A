{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Timeline.js\";\nimport { formatDate, getIndiaDateISO } from '../utils/commonFunctions';\nimport clamp from 'lodash/clamp';\nimport React, { useState } from 'react';\nimport { useSprings, useTransition, animated, config } from 'react-spring';\nimport { useMeasure, useKeyPressEvent } from 'react-use';\nimport { useDrag } from 'react-use-gesture';\n\nconst Timeline = ({\n  setIsTimelineMode,\n  setDate,\n  dates\n}) => {\n  const [timelineElement, {\n    width\n  }] = useMeasure();\n  const [index, setIndex] = useState(0);\n  const [springs, set] = useSprings(dates.length, i => ({\n    x: (index - i) * (480 / 3) + 480 / 2 - 35,\n    color: i === 0 ? '#6c757d' : '#6c757d99',\n    opacity: i < 2 ? 1 : 0\n  }), config.stiff);\n  const bind = useDrag(({\n    down,\n    delta: [xDelta],\n    direction: [xDir],\n    distance,\n    cancel\n  }) => {\n    const clampedIndex = getClampedIndex(xDir);\n\n    if (down && distance > 25) {\n      cancel(setIndex(clampedIndex));\n      setClampedDate(clampedIndex);\n    }\n\n    if (index === 0 && xDir < 0) {\n      hideTimeline();\n    }\n\n    setSprings({\n      clampedIndex: index,\n      xDir,\n      down,\n      xDelta\n    });\n  });\n\n  const getClampedIndex = direction => {\n    return clamp(index + (direction > 0 ? 1 : -1), 0, dates.length - 1);\n  };\n\n  const setSprings = ({\n    direction,\n    clampedIndex,\n    down,\n    xDelta\n  }) => {\n    set(i => {\n      if (i < clampedIndex - 1) {\n        return {\n          x: width,\n          color: '#6c757d99',\n          opacity: 0,\n          display: 'none'\n        };\n      } else if (i > clampedIndex + 1) {\n        return {\n          x: -40,\n          color: '#6c757d99',\n          opacity: 0,\n          display: 'none'\n        };\n      }\n\n      let x = 0;\n\n      if (xDelta) {\n        x = (clampedIndex - i) * (width / 3) + width / 2 - 35 + (down ? xDelta : 0);\n      } else {\n        x = (clampedIndex - i) * (width / 3) + width / 3 + 45;\n      }\n\n      if (i === clampedIndex) {\n        return {\n          x,\n          color: '#6c757d',\n          display: 'block'\n        };\n      }\n\n      return {\n        x,\n        color: '#6c757d99',\n        opacity: 1,\n        display: 'block'\n      };\n    });\n  };\n\n  const handleKeyPress = direction => {\n    if (index < dates.length) {\n      const clampedIndex = getClampedIndex(direction);\n      setSprings({\n        direction,\n        clampedIndex\n      });\n      setIndex(clampedIndex);\n      setClampedDate(clampedIndex);\n    }\n\n    if (index === 1 && direction === -1) {\n      hideTimeline();\n    }\n  };\n\n  useKeyPressEvent('ArrowLeft', () => {\n    handleKeyPress(1);\n  });\n  useKeyPressEvent('ArrowRight', () => {\n    handleKeyPress(-1);\n  });\n  useKeyPressEvent('Escape', () => {\n    setIsTimelineMode(false);\n    setDate('');\n  });\n\n  const hideTimeline = () => {\n    setTimeout(() => {\n      setIsTimelineMode(false);\n    }, 1000);\n  };\n\n  const getDate = index => {\n    if (dates[index] === getIndiaDateISO()) return 'Today';\n    return formatDate(dates[index], 'dd MMM');\n  };\n\n  const setClampedDate = clampedIndex => {\n    if (clampedIndex === 0) {\n      setDate('');\n    } else {\n      setDate(dates[clampedIndex]);\n    }\n  };\n\n  const timeline = {\n    '2020-03-25': 'Beginning of Lockdown Phase 1',\n    '2020-04-14': 'End of Lockdown Phase 1',\n    '2020-04-15': 'Beginning of Lockdown Phase 2',\n    '2020-05-03': 'End of Lockdown Phase 2',\n    '2020-05-04': 'Beginning of Lockdown Phase 3',\n    '2020-05-17': 'End of Lockdown Phase 3',\n    '2020-05-18': 'Beginning of Lockdown Phase 4',\n    '2020-05-31': 'End of Lockdown Phase 4',\n    '2020-06-01': 'Beginning of Lockdown Phase 5'\n  };\n  const transition = useTransition(timeline.hasOwnProperty(dates[index]), null, {\n    from: {\n      transform: 'translate3d(0, 20px, 0)',\n      opacity: 0\n    },\n    enter: {\n      transform: 'translate3d(0, 0px, 0)',\n      opacity: 1\n    },\n    leave: {\n      transform: 'translate3d(0, 20px, 0)',\n      opacity: 0\n    }\n  });\n\n  const handleClick = clampedIndex => {\n    if (clampedIndex > index) {\n      handleKeyPress(+1);\n    } else {\n      handleKeyPress(-1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, transition.map(({\n    item,\n    key,\n    props\n  }) => item && /*#__PURE__*/React.createElement(animated.h5, {\n    className: \"highlight\",\n    key: key,\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, timeline[dates[index]])), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"Timeline\",\n    ref: timelineElement\n  }, bind(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), springs.filter(({\n    opacity\n  }, i) => i < dates.length && (i === index + 1 || i === index - 1 || i === index + 2 || i === index - 2 || i === index)).map(({\n    x,\n    color,\n    opacity,\n    display\n  }, i) => /*#__PURE__*/React.createElement(animated.div, {\n    className: \"day\",\n    key: i,\n    style: {\n      transform: x.interpolate(x => `translate3d(${x}px,0,0)`),\n      opacity,\n      display\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, index < 2 && /*#__PURE__*/React.createElement(animated.h5, {\n    style: {\n      color\n    },\n    onClick: () => {\n      handleClick(i);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, getDate(i)), index > 1 && index < dates.length && /*#__PURE__*/React.createElement(animated.h5, {\n    style: {\n      color\n    },\n    onClick: () => {\n      handleClick(index + i - 2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, getDate(index + i - 2))))));\n};\n\nexport default React.memo(Timeline);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Timeline.js"],"names":["formatDate","getIndiaDateISO","clamp","React","useState","useSprings","useTransition","animated","config","useMeasure","useKeyPressEvent","useDrag","Timeline","setIsTimelineMode","setDate","dates","timelineElement","width","index","setIndex","springs","set","length","i","x","color","opacity","stiff","bind","down","delta","xDelta","direction","xDir","distance","cancel","clampedIndex","getClampedIndex","setClampedDate","hideTimeline","setSprings","display","handleKeyPress","setTimeout","getDate","timeline","transition","hasOwnProperty","from","transform","enter","leave","handleClick","map","item","key","props","filter","interpolate","memo"],"mappings":"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","sourcesContent":["import {formatDate, getIndiaDateISO} from '../utils/commonFunctions';\n\nimport clamp from 'lodash/clamp';\nimport React, {useState} from 'react';\nimport {useSprings, useTransition, animated, config} from 'react-spring';\nimport {useMeasure, useKeyPressEvent} from 'react-use';\nimport {useDrag} from 'react-use-gesture';\n\nconst Timeline = ({setIsTimelineMode, setDate, dates}) => {\n  const [timelineElement, {width}] = useMeasure();\n  const [index, setIndex] = useState(0);\n\n  const [springs, set] = useSprings(\n    dates.length,\n    (i) => ({\n      x: (index - i) * (480 / 3) + 480 / 2 - 35,\n      color: i === 0 ? '#6c757d' : '#6c757d99',\n      opacity: i < 2 ? 1 : 0,\n    }),\n    config.stiff\n  );\n\n  const bind = useDrag(\n    ({down, delta: [xDelta], direction: [xDir], distance, cancel}) => {\n      const clampedIndex = getClampedIndex(xDir);\n      if (down && distance > 25) {\n        cancel(setIndex(clampedIndex));\n        setClampedDate(clampedIndex);\n      }\n\n      if (index === 0 && xDir < 0) {\n        hideTimeline();\n      }\n\n      setSprings({clampedIndex: index, xDir, down, xDelta});\n    }\n  );\n\n  const getClampedIndex = (direction) => {\n    return clamp(index + (direction > 0 ? 1 : -1), 0, dates.length - 1);\n  };\n\n  const setSprings = ({direction, clampedIndex, down, xDelta}) => {\n    set((i) => {\n      if (i < clampedIndex - 1) {\n        return {x: width, color: '#6c757d99', opacity: 0, display: 'none'};\n      } else if (i > clampedIndex + 1) {\n        return {x: -40, color: '#6c757d99', opacity: 0, display: 'none'};\n      }\n\n      let x = 0;\n      if (xDelta) {\n        x =\n          (clampedIndex - i) * (width / 3) +\n          width / 2 -\n          35 +\n          (down ? xDelta : 0);\n      } else {\n        x = (clampedIndex - i) * (width / 3) + width / 3 + 45;\n      }\n\n      if (i === clampedIndex) {\n        return {x, color: '#6c757d', display: 'block'};\n      }\n      return {x, color: '#6c757d99', opacity: 1, display: 'block'};\n    });\n  };\n\n  const handleKeyPress = (direction) => {\n    if (index < dates.length) {\n      const clampedIndex = getClampedIndex(direction);\n      setSprings({direction, clampedIndex});\n      setIndex(clampedIndex);\n      setClampedDate(clampedIndex);\n    }\n    if (index === 1 && direction === -1) {\n      hideTimeline();\n    }\n  };\n\n  useKeyPressEvent('ArrowLeft', () => {\n    handleKeyPress(1);\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    handleKeyPress(-1);\n  });\n\n  useKeyPressEvent('Escape', () => {\n    setIsTimelineMode(false);\n    setDate('');\n  });\n\n  const hideTimeline = () => {\n    setTimeout(() => {\n      setIsTimelineMode(false);\n    }, 1000);\n  };\n\n  const getDate = (index) => {\n    if (dates[index] === getIndiaDateISO()) return 'Today';\n    return formatDate(dates[index], 'dd MMM');\n  };\n\n  const setClampedDate = (clampedIndex) => {\n    if (clampedIndex === 0) {\n      setDate('');\n    } else {\n      setDate(dates[clampedIndex]);\n    }\n  };\n\n  const timeline = {\n    '2020-03-25': 'Beginning of Lockdown Phase 1',\n    '2020-04-14': 'End of Lockdown Phase 1',\n    '2020-04-15': 'Beginning of Lockdown Phase 2',\n    '2020-05-03': 'End of Lockdown Phase 2',\n    '2020-05-04': 'Beginning of Lockdown Phase 3',\n    '2020-05-17': 'End of Lockdown Phase 3',\n    '2020-05-18': 'Beginning of Lockdown Phase 4',\n    '2020-05-31': 'End of Lockdown Phase 4',\n    '2020-06-01': 'Beginning of Lockdown Phase 5',\n  };\n\n  const transition = useTransition(\n    timeline.hasOwnProperty(dates[index]),\n    null,\n    {\n      from: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\n      enter: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\n      leave: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\n    }\n  );\n\n  const handleClick = (clampedIndex) => {\n    if (clampedIndex > index) {\n      handleKeyPress(+1);\n    } else {\n      handleKeyPress(-1);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {transition.map(\n        ({item, key, props}) =>\n          item && (\n            <animated.h5 className=\"highlight\" key={key} style={props}>\n              {timeline[dates[index]]}\n            </animated.h5>\n          )\n      )}\n\n      <div className=\"Timeline\" ref={timelineElement} {...bind()}>\n        {springs\n          .filter(\n            ({opacity}, i) =>\n              i < dates.length &&\n              (i === index + 1 ||\n                i === index - 1 ||\n                i === index + 2 ||\n                i === index - 2 ||\n                i === index)\n          )\n          .map(({x, color, opacity, display}, i) => (\n            <animated.div\n              className=\"day\"\n              key={i}\n              style={{\n                transform: x.interpolate((x) => `translate3d(${x}px,0,0)`),\n                opacity,\n                display,\n              }}\n            >\n              {index < 2 && (\n                <animated.h5\n                  style={{color}}\n                  onClick={() => {\n                    handleClick(i);\n                  }}\n                >\n                  {getDate(i)}\n                </animated.h5>\n              )}\n              {index > 1 && index < dates.length && (\n                <animated.h5\n                  style={{color}}\n                  onClick={() => {\n                    handleClick(index + i - 2);\n                  }}\n                >\n                  {getDate(index + i - 2)}\n                </animated.h5>\n              )}\n            </animated.div>\n          ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Timeline);\n"]},"metadata":{},"sourceType":"module"}