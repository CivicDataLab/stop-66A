{"ast":null,"code":"import _toConsumableArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import TimeseriesLoader from'./loaders/Timeseries';import{TIMESERIES_CHART_TYPES,TIMESERIES_LOOKBACKS,STATE_NAMES}from'../constants';import useIsVisible from'../hooks/useIsVisible';import{getIndiaYesterdayISO,parseIndiaDate}from'../utils/commonFunctions';import{IssueOpenedIcon,PinIcon,ReplyIcon}from'@primer/octicons-v2-react';import classnames from'classnames';import{formatISO,sub}from'date-fns';import equal from'fast-deep-equal';import React,{useCallback,useMemo,useRef,lazy,Suspense}from'react';import{useTranslation}from'react-i18next';import{useLocalStorage,useSessionStorage}from'react-use';var Timeseries=lazy(function(){return import('./Timeseries');});function TimeseriesExplorer(_ref){var _this=this;var stateCode=_ref.stateCode,timeseries=_ref.timeseries,timelineDate=_ref.date,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,anchor=_ref.anchor,setAnchor=_ref.setAnchor,expandTable=_ref.expandTable;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useSessionStorage=useSessionStorage('timeseriesLookback',TIMESERIES_LOOKBACKS.MONTH),_useSessionStorage2=_slicedToArray(_useSessionStorage,2),lookback=_useSessionStorage2[0],setLookback=_useSessionStorage2[1];var _useLocalStorage=useLocalStorage('chartType','total'),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),chartType=_useLocalStorage2[0],setChartType=_useLocalStorage2[1];var _useLocalStorage3=useLocalStorage('isUniform',true),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),isUniform=_useLocalStorage4[0],setIsUniform=_useLocalStorage4[1];var _useLocalStorage5=useLocalStorage('isLog',false),_useLocalStorage6=_slicedToArray(_useLocalStorage5,2),isLog=_useLocalStorage6[0],setIsLog=_useLocalStorage6[1];var explorerElement=useRef();var isVisible=useIsVisible(explorerElement,{once:true});var selectedRegion=useMemo(function(){var _timeseries$regionHig;if(timeseries===null||timeseries===void 0?void 0:(_timeseries$regionHig=timeseries[regionHighlighted.stateCode])===null||_timeseries$regionHig===void 0?void 0:_timeseries$regionHig.districts){return{stateCode:regionHighlighted.stateCode,districtName:regionHighlighted.districtName};}else{return{stateCode:regionHighlighted.stateCode,districtName:null};}},[timeseries,regionHighlighted.stateCode,regionHighlighted.districtName]);var selectedTimeseries=useMemo(function(){if(selectedRegion.districtName){var _timeseries$selectedR,_timeseries$selectedR2,_timeseries$selectedR3;return timeseries===null||timeseries===void 0?void 0:(_timeseries$selectedR=timeseries[selectedRegion.stateCode])===null||_timeseries$selectedR===void 0?void 0:(_timeseries$selectedR2=_timeseries$selectedR.districts)===null||_timeseries$selectedR2===void 0?void 0:(_timeseries$selectedR3=_timeseries$selectedR2[selectedRegion.districtName])===null||_timeseries$selectedR3===void 0?void 0:_timeseries$selectedR3.dates;}else{var _timeseries$selectedR4;return timeseries===null||timeseries===void 0?void 0:(_timeseries$selectedR4=timeseries[selectedRegion.stateCode])===null||_timeseries$selectedR4===void 0?void 0:_timeseries$selectedR4.dates;}},[timeseries,selectedRegion.stateCode,selectedRegion.districtName]);var regions=useMemo(function(){var states=Object.keys(timeseries||{}).filter(function(code){return code!==stateCode;}).sort(function(code1,code2){return STATE_NAMES[code1].localeCompare(STATE_NAMES[code2]);}).map(function(code){return{stateCode:code,districtName:null};});var districts=Object.keys(timeseries||{}).reduce(function(acc1,code){var _timeseries$code;return[].concat(_toConsumableArray(acc1),_toConsumableArray(Object.keys((timeseries===null||timeseries===void 0?void 0:(_timeseries$code=timeseries[code])===null||_timeseries$code===void 0?void 0:_timeseries$code.districts)||{}).reduce(function(acc2,districtName){return[].concat(_toConsumableArray(acc2),[{stateCode:code,districtName:districtName}]);},[])));},[]);return[{stateCode:stateCode,districtName:null}].concat(_toConsumableArray(states),_toConsumableArray(districts));},[timeseries,stateCode]);var dropdownRegions=useMemo(function(){if(regions.find(function(region){return region.stateCode===regionHighlighted.stateCode&&region.districtName===regionHighlighted.districtName;}))return regions;return[].concat(_toConsumableArray(regions),[{stateCode:regionHighlighted.stateCode,districtName:regionHighlighted.districtName}]);},[regionHighlighted.stateCode,regionHighlighted.districtName,regions]);var dates=useMemo(function(){var cutOffDateUpper=timelineDate||getIndiaYesterdayISO();var pastDates=Object.keys(selectedTimeseries||{}).filter(function(date){return date<=cutOffDateUpper;});var lastDate=pastDates[pastDates.length-1];if(lookback===TIMESERIES_LOOKBACKS.BEGINNING){return pastDates;}var cutOffDateLower;if(lookback===TIMESERIES_LOOKBACKS.MONTH){cutOffDateLower=formatISO(sub(parseIndiaDate(lastDate),{months:1}),{representation:'date'});}else if(lookback===TIMESERIES_LOOKBACKS.THREE_MONTHS){cutOffDateLower=formatISO(sub(parseIndiaDate(lastDate),{months:3}),{representation:'date'});}return pastDates.filter(function(date){return date>=cutOffDateLower;});},[selectedTimeseries,timelineDate,lookback]);var handleChange=useCallback(function(_ref2){var target=_ref2.target;setRegionHighlighted(JSON.parse(target.value));},[setRegionHighlighted]);var resetDropdown=useCallback(function(){setRegionHighlighted({stateCode:stateCode,districtName:null});},[stateCode,setRegionHighlighted]);return/*#__PURE__*/React.createElement(\"div\",{className:classnames('TimeseriesExplorer fadeInUp',{stickied:anchor==='timeseries'},{expanded:expandTable}),style:{display:anchor==='mapexplorer'?'none':''},ref:explorerElement},/*#__PURE__*/React.createElement(\"div\",{className:\"timeseries-header\"},/*#__PURE__*/React.createElement(\"div\",{className:classnames('anchor',{stickied:anchor==='timeseries'}),onClick:setAnchor&&setAnchor.bind(this,anchor==='timeseries'?null:'timeseries')},/*#__PURE__*/React.createElement(PinIcon,null)),/*#__PURE__*/React.createElement(\"h1\",null,t('Spread Trends')),/*#__PURE__*/React.createElement(\"div\",{className:\"tabs\"},Object.entries(TIMESERIES_CHART_TYPES).map(function(_ref3,index){var _ref4=_slicedToArray(_ref3,2),ctype=_ref4[0],value=_ref4[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"tab \".concat(chartType===ctype?'focused':''),key:ctype,onClick:setChartType.bind(_this,ctype)},/*#__PURE__*/React.createElement(\"h4\",null,t(value)));})),/*#__PURE__*/React.createElement(\"div\",{className:\"scale-modes\"},/*#__PURE__*/React.createElement(\"label\",{className:\"main\"},t('Scale Modes')),/*#__PURE__*/React.createElement(\"div\",{className:\"timeseries-mode\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"timeseries-mode\"},t('Uniform')),/*#__PURE__*/React.createElement(\"input\",{id:\"timeseries-mode\",type:\"checkbox\",className:\"switch\",checked:isUniform,\"aria-label\":t('Checked by default to scale uniformly.'),onChange:setIsUniform.bind(this,!isUniform)})),/*#__PURE__*/React.createElement(\"div\",{className:\"timeseries-logmode \".concat(chartType!=='total'?'disabled':'')},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"timeseries-logmode\"},t('Logarithmic')),/*#__PURE__*/React.createElement(\"input\",{id:\"timeseries-logmode\",type:\"checkbox\",checked:chartType==='total'&&isLog,className:\"switch\",disabled:chartType!=='total',onChange:setIsLog.bind(this,!isLog)})))),dropdownRegions&&/*#__PURE__*/React.createElement(\"div\",{className:\"state-selection\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown\"},/*#__PURE__*/React.createElement(\"select\",{value:JSON.stringify(selectedRegion),onChange:handleChange},dropdownRegions.filter(function(region){return STATE_NAMES[region.stateCode]!==region.districtName;}).map(function(region){return/*#__PURE__*/React.createElement(\"option\",{value:JSON.stringify(region),key:\"\".concat(region.stateCode,\"-\").concat(region.districtName)},region.districtName?t(region.districtName):t(STATE_NAMES[region.stateCode]));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"reset-icon\",onClick:resetDropdown},/*#__PURE__*/React.createElement(ReplyIcon,null))),isVisible&&/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(TimeseriesLoader,null)},/*#__PURE__*/React.createElement(Timeseries,Object.assign({timeseries:selectedTimeseries,regionHighlighted:selectedRegion},{dates:dates,chartType:chartType,isUniform:isUniform,isLog:isLog}))),!isVisible&&/*#__PURE__*/React.createElement(\"div\",{style:{height:'50rem'}}),/*#__PURE__*/React.createElement(\"div\",{className:\"pills\"},Object.values(TIMESERIES_LOOKBACKS).map(function(option){return/*#__PURE__*/React.createElement(\"button\",{key:option,type:\"button\",className:classnames({selected:lookback===option}),onClick:function onClick(){return setLookback(option);}},t(option));})),/*#__PURE__*/React.createElement(\"div\",{className:\"alert\"},/*#__PURE__*/React.createElement(IssueOpenedIcon,{size:24}),/*#__PURE__*/React.createElement(\"div\",{className:\"alert-right\"},t('Tested chart is independent of uniform scaling'))));}var isEqual=function isEqual(prevProps,currProps){if(currProps.forceRender){return false;}else if(!currProps.timeseries&&prevProps.timeseries){return true;}else if(currProps.timeseries&&!prevProps.timeseries){return false;}else if(!equal(currProps.regionHighlighted.stateCode,prevProps.regionHighlighted.stateCode)){return false;}else if(!equal(currProps.regionHighlighted.districtName,prevProps.regionHighlighted.districtName)){return false;}else if(!equal(currProps.date,prevProps.date)){return false;}else if(!equal(currProps.anchor,prevProps.anchor)){return false;}else if(!equal(currProps.expandTable,prevProps.expandTable)){return false;}return true;};export default React.memo(TimeseriesExplorer,isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/TimeseriesExplorer.js"],"names":["TimeseriesLoader","TIMESERIES_CHART_TYPES","TIMESERIES_LOOKBACKS","STATE_NAMES","useIsVisible","getIndiaYesterdayISO","parseIndiaDate","IssueOpenedIcon","PinIcon","ReplyIcon","classnames","formatISO","sub","equal","React","useCallback","useMemo","useRef","lazy","Suspense","useTranslation","useLocalStorage","useSessionStorage","Timeseries","TimeseriesExplorer","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","t","MONTH","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","explorerElement","isVisible","once","selectedRegion","districts","districtName","selectedTimeseries","dates","regions","states","Object","keys","filter","code","sort","code1","code2","localeCompare","map","reduce","acc1","acc2","dropdownRegions","find","region","cutOffDateUpper","pastDates","lastDate","length","BEGINNING","cutOffDateLower","months","representation","THREE_MONTHS","handleChange","target","JSON","parse","value","resetDropdown","stickied","expanded","display","bind","entries","index","ctype","stringify","height","values","option","selected","isEqual","prevProps","currProps","forceRender","memo"],"mappings":"8VAAA,MAAOA,CAAAA,gBAAP,KAA6B,sBAA7B,CAEA,OACEC,sBADF,CAEEC,oBAFF,CAGEC,WAHF,KAIO,cAJP,CAKA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,OAAQC,oBAAR,CAA8BC,cAA9B,KAAmD,0BAAnD,CAEA,OAAQC,eAAR,CAAyBC,OAAzB,CAAkCC,SAAlC,KAAkD,2BAAlD,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,SAAR,CAAmBC,GAAnB,KAA6B,UAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,KAAP,EAAeC,WAAf,CAA4BC,OAA5B,CAAqCC,MAArC,CAA6CC,IAA7C,CAAmDC,QAAnD,KAAkE,OAAlE,CACA,OAAQC,cAAR,KAA6B,eAA7B,CACA,OAAQC,eAAR,CAAyBC,iBAAzB,KAAiD,WAAjD,CAEA,GAAMC,CAAAA,UAAU,CAAGL,IAAI,CAAC,iBAAM,QAAO,cAAP,CAAN,EAAD,CAAvB,CAEA,QAASM,CAAAA,kBAAT,MASG,mBARDC,CAAAA,SAQC,MARDA,SAQC,CAPDC,UAOC,MAPDA,UAOC,CANKC,YAML,MANDC,IAMC,CALDC,iBAKC,MALDA,iBAKC,CAJDC,oBAIC,MAJDA,oBAIC,CAHDC,MAGC,MAHDA,MAGC,CAFDC,SAEC,MAFDA,SAEC,CADDC,WACC,MADDA,WACC,qBACWb,cAAc,EADzB,CACMc,CADN,iBACMA,CADN,wBAE+BZ,iBAAiB,CAC/C,oBAD+C,CAE/CpB,oBAAoB,CAACiC,KAF0B,CAFhD,0DAEMC,QAFN,wBAEgBC,WAFhB,6CAMiChB,eAAe,CAAC,WAAD,CAAc,OAAd,CANhD,sDAMMiB,SANN,sBAMiBC,YANjB,4CAOiClB,eAAe,CAAC,WAAD,CAAc,IAAd,CAPhD,uDAOMmB,SAPN,sBAOiBC,YAPjB,4CAQyBpB,eAAe,CAAC,OAAD,CAAU,KAAV,CARxC,uDAQMqB,KARN,sBAQaC,QARb,sBASD,GAAMC,CAAAA,eAAe,CAAG3B,MAAM,EAA9B,CACA,GAAM4B,CAAAA,SAAS,CAAGzC,YAAY,CAACwC,eAAD,CAAkB,CAACE,IAAI,CAAE,IAAP,CAAlB,CAA9B,CAEA,GAAMC,CAAAA,cAAc,CAAG/B,OAAO,CAAC,UAAM,2BACnC,GAAIU,UAAJ,SAAIA,UAAJ,wCAAIA,UAAU,CAAGG,iBAAiB,CAACJ,SAArB,CAAd,gDAAI,sBAA2CuB,SAA/C,CAA0D,CACxD,MAAO,CACLvB,SAAS,CAAEI,iBAAiB,CAACJ,SADxB,CAELwB,YAAY,CAAEpB,iBAAiB,CAACoB,YAF3B,CAAP,CAID,CALD,IAKO,CACL,MAAO,CACLxB,SAAS,CAAEI,iBAAiB,CAACJ,SADxB,CAELwB,YAAY,CAAE,IAFT,CAAP,CAID,CACF,CAZ6B,CAY3B,CAACvB,UAAD,CAAaG,iBAAiB,CAACJ,SAA/B,CAA0CI,iBAAiB,CAACoB,YAA5D,CAZ2B,CAA9B,CAcA,GAAMC,CAAAA,kBAAkB,CAAGlC,OAAO,CAAC,UAAM,CACvC,GAAI+B,cAAc,CAACE,YAAnB,CAAiC,yEAC/B,MAAOvB,CAAAA,UAAP,SAAOA,UAAP,wCAAOA,UAAU,CAAGqB,cAAc,CAACtB,SAAlB,CAAjB,wEAAO,sBAAwCuB,SAA/C,yEAAO,uBACLD,cAAc,CAACE,YADV,CAAP,iDAAO,uBAEJE,KAFH,CAGD,CAJD,IAIO,4BACL,MAAOzB,CAAAA,UAAP,SAAOA,UAAP,yCAAOA,UAAU,CAAGqB,cAAc,CAACtB,SAAlB,CAAjB,iDAAO,uBAAwC0B,KAA/C,CACD,CACF,CARiC,CAQ/B,CAACzB,UAAD,CAAaqB,cAAc,CAACtB,SAA5B,CAAuCsB,cAAc,CAACE,YAAtD,CAR+B,CAAlC,CAUA,GAAMG,CAAAA,OAAO,CAAGpC,OAAO,CAAC,UAAM,CAC5B,GAAMqC,CAAAA,MAAM,CAAGC,MAAM,CAACC,IAAP,CAAY7B,UAAU,EAAI,EAA1B,EACZ8B,MADY,CACL,SAACC,IAAD,QAAUA,CAAAA,IAAI,GAAKhC,SAAnB,EADK,EAEZiC,IAFY,CAEP,SAACC,KAAD,CAAQC,KAAR,QACJzD,CAAAA,WAAW,CAACwD,KAAD,CAAX,CAAmBE,aAAnB,CAAiC1D,WAAW,CAACyD,KAAD,CAA5C,CADI,EAFO,EAKZE,GALY,CAKR,SAACL,IAAD,CAAU,CACb,MAAO,CACLhC,SAAS,CAAEgC,IADN,CAELR,YAAY,CAAE,IAFT,CAAP,CAID,CAVY,CAAf,CAWA,GAAMD,CAAAA,SAAS,CAAGM,MAAM,CAACC,IAAP,CAAY7B,UAAU,EAAI,EAA1B,EAA8BqC,MAA9B,CAAqC,SAACC,IAAD,CAAOP,IAAP,CAAgB,sBACrE,mCACKO,IADL,qBAEKV,MAAM,CAACC,IAAP,CAAY,CAAA7B,UAAU,OAAV,EAAAA,UAAU,SAAV,0BAAAA,UAAU,CAAG+B,IAAH,CAAV,4DAAoBT,SAApB,GAAiC,EAA7C,EAAiDe,MAAjD,CACD,SAACE,IAAD,CAAOhB,YAAP,CAAwB,CACtB,mCACKgB,IADL,GAEE,CACExC,SAAS,CAAEgC,IADb,CAEER,YAAY,CAAEA,YAFhB,CAFF,GAOD,CATA,CAUD,EAVC,CAFL,GAeD,CAhBiB,CAgBf,EAhBe,CAAlB,CAkBA,OACE,CACExB,SAAS,CAAEA,SADb,CAEEwB,YAAY,CAAE,IAFhB,CADF,4BAKKI,MALL,qBAMKL,SANL,GAQD,CAtCsB,CAsCpB,CAACtB,UAAD,CAAaD,SAAb,CAtCoB,CAAvB,CAwCA,GAAMyC,CAAAA,eAAe,CAAGlD,OAAO,CAAC,UAAM,CACpC,GACEoC,OAAO,CAACe,IAAR,CACE,SAACC,MAAD,QACEA,CAAAA,MAAM,CAAC3C,SAAP,GAAqBI,iBAAiB,CAACJ,SAAvC,EACA2C,MAAM,CAACnB,YAAP,GAAwBpB,iBAAiB,CAACoB,YAF5C,EADF,CADF,CAOE,MAAOG,CAAAA,OAAP,CACF,mCACKA,OADL,GAEE,CACE3B,SAAS,CAAEI,iBAAiB,CAACJ,SAD/B,CAEEwB,YAAY,CAAEpB,iBAAiB,CAACoB,YAFlC,CAFF,GAOD,CAhB8B,CAgB5B,CAACpB,iBAAiB,CAACJ,SAAnB,CAA8BI,iBAAiB,CAACoB,YAAhD,CAA8DG,OAA9D,CAhB4B,CAA/B,CAkBA,GAAMD,CAAAA,KAAK,CAAGnC,OAAO,CAAC,UAAM,CAC1B,GAAMqD,CAAAA,eAAe,CAAG1C,YAAY,EAAItB,oBAAoB,EAA5D,CACA,GAAMiE,CAAAA,SAAS,CAAGhB,MAAM,CAACC,IAAP,CAAYL,kBAAkB,EAAI,EAAlC,EAAsCM,MAAtC,CAChB,SAAC5B,IAAD,QAAUA,CAAAA,IAAI,EAAIyC,eAAlB,EADgB,CAAlB,CAIA,GAAME,CAAAA,QAAQ,CAAGD,SAAS,CAACA,SAAS,CAACE,MAAV,CAAmB,CAApB,CAA1B,CACA,GAAIpC,QAAQ,GAAKlC,oBAAoB,CAACuE,SAAtC,CAAiD,CAC/C,MAAOH,CAAAA,SAAP,CACD,CAED,GAAII,CAAAA,eAAJ,CACA,GAAItC,QAAQ,GAAKlC,oBAAoB,CAACiC,KAAtC,CAA6C,CAC3CuC,eAAe,CAAG/D,SAAS,CAACC,GAAG,CAACN,cAAc,CAACiE,QAAD,CAAf,CAA2B,CAACI,MAAM,CAAE,CAAT,CAA3B,CAAJ,CAA6C,CACtEC,cAAc,CAAE,MADsD,CAA7C,CAA3B,CAGD,CAJD,IAIO,IAAIxC,QAAQ,GAAKlC,oBAAoB,CAAC2E,YAAtC,CAAoD,CACzDH,eAAe,CAAG/D,SAAS,CAACC,GAAG,CAACN,cAAc,CAACiE,QAAD,CAAf,CAA2B,CAACI,MAAM,CAAE,CAAT,CAA3B,CAAJ,CAA6C,CACtEC,cAAc,CAAE,MADsD,CAA7C,CAA3B,CAGD,CACD,MAAON,CAAAA,SAAS,CAACd,MAAV,CAAiB,SAAC5B,IAAD,QAAUA,CAAAA,IAAI,EAAI8C,eAAlB,EAAjB,CAAP,CACD,CAtBoB,CAsBlB,CAACxB,kBAAD,CAAqBvB,YAArB,CAAmCS,QAAnC,CAtBkB,CAArB,CAwBA,GAAM0C,CAAAA,YAAY,CAAG/D,WAAW,CAC9B,eAAc,IAAZgE,CAAAA,MAAY,OAAZA,MAAY,CACZjD,oBAAoB,CAACkD,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,KAAlB,CAAD,CAApB,CACD,CAH6B,CAI9B,CAACpD,oBAAD,CAJ8B,CAAhC,CAOA,GAAMqD,CAAAA,aAAa,CAAGpE,WAAW,CAAC,UAAM,CACtCe,oBAAoB,CAAC,CACnBL,SAAS,CAAEA,SADQ,CAEnBwB,YAAY,CAAE,IAFK,CAAD,CAApB,CAID,CALgC,CAK9B,CAACxB,SAAD,CAAYK,oBAAZ,CAL8B,CAAjC,CAOA,mBACE,2BACE,SAAS,CAAEpB,UAAU,CACnB,6BADmB,CAEnB,CACE0E,QAAQ,CAAErD,MAAM,GAAK,YADvB,CAFmB,CAKnB,CAACsD,QAAQ,CAAEpD,WAAX,CALmB,CADvB,CAQE,KAAK,CAAE,CAACqD,OAAO,CAAEvD,MAAM,GAAK,aAAX,CAA2B,MAA3B,CAAoC,EAA9C,CART,CASE,GAAG,CAAEa,eATP,eAWE,2BAAK,SAAS,CAAC,mBAAf,eACE,2BACE,SAAS,CAAElC,UAAU,CAAC,QAAD,CAAW,CAC9B0E,QAAQ,CAAErD,MAAM,GAAK,YADS,CAAX,CADvB,CAIE,OAAO,CACLC,SAAS,EACTA,SAAS,CAACuD,IAAV,CAAe,IAAf,CAAqBxD,MAAM,GAAK,YAAX,CAA0B,IAA1B,CAAiC,YAAtD,CANJ,eASE,oBAAC,OAAD,MATF,CADF,cAaE,8BAAKG,CAAC,CAAC,eAAD,CAAN,CAbF,cAcE,2BAAK,SAAS,CAAC,MAAf,EACGoB,MAAM,CAACkC,OAAP,CAAevF,sBAAf,EAAuC6D,GAAvC,CACC,eAAiB2B,KAAjB,oCAAEC,KAAF,UAASR,KAAT,6BACE,2BACE,SAAS,eAAS5C,SAAS,GAAKoD,KAAd,CAAsB,SAAtB,CAAkC,EAA3C,CADX,CAEE,GAAG,CAAEA,KAFP,CAGE,OAAO,CAAEnD,YAAY,CAACgD,IAAb,CAAkB,KAAlB,CAAwBG,KAAxB,CAHX,eAKE,8BAAKxD,CAAC,CAACgD,KAAD,CAAN,CALF,CADF,EADD,CADH,CAdF,cA4BE,2BAAK,SAAS,CAAC,aAAf,eACE,6BAAO,SAAS,CAAC,MAAjB,EAAyBhD,CAAC,CAAC,aAAD,CAA1B,CADF,cAEE,2BAAK,SAAS,CAAC,iBAAf,eACE,6BAAO,OAAO,CAAC,iBAAf,EAAkCA,CAAC,CAAC,SAAD,CAAnC,CADF,cAEE,6BACE,EAAE,CAAC,iBADL,CAEE,IAAI,CAAC,UAFP,CAGE,SAAS,CAAC,QAHZ,CAIE,OAAO,CAAEM,SAJX,CAKE,aAAYN,CAAC,CAAC,wCAAD,CALf,CAME,QAAQ,CAAEO,YAAY,CAAC8C,IAAb,CAAkB,IAAlB,CAAwB,CAAC/C,SAAzB,CANZ,EAFF,CAFF,cAaE,2BACE,SAAS,8BACPF,SAAS,GAAK,OAAd,CAAwB,UAAxB,CAAqC,EAD9B,CADX,eAKE,6BAAO,OAAO,CAAC,oBAAf,EAAqCJ,CAAC,CAAC,aAAD,CAAtC,CALF,cAME,6BACE,EAAE,CAAC,oBADL,CAEE,IAAI,CAAC,UAFP,CAGE,OAAO,CAAEI,SAAS,GAAK,OAAd,EAAyBI,KAHpC,CAIE,SAAS,CAAC,QAJZ,CAKE,QAAQ,CAAEJ,SAAS,GAAK,OAL1B,CAME,QAAQ,CAAEK,QAAQ,CAAC4C,IAAT,CAAc,IAAd,CAAoB,CAAC7C,KAArB,CANZ,EANF,CAbF,CA5BF,CAXF,CAsEGwB,eAAe,eACd,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,UAAf,eACE,8BACE,KAAK,CAAEc,IAAI,CAACW,SAAL,CAAe5C,cAAf,CADT,CAEE,QAAQ,CAAE+B,YAFZ,EAIGZ,eAAe,CACbV,MADF,CAEG,SAACY,MAAD,QACEjE,CAAAA,WAAW,CAACiE,MAAM,CAAC3C,SAAR,CAAX,GAAkC2C,MAAM,CAACnB,YAD3C,EAFH,EAKEa,GALF,CAKM,SAACM,MAAD,CAAY,CACf,mBACE,8BACE,KAAK,CAAEY,IAAI,CAACW,SAAL,CAAevB,MAAf,CADT,CAEE,GAAG,WAAKA,MAAM,CAAC3C,SAAZ,aAAyB2C,MAAM,CAACnB,YAAhC,CAFL,EAIGmB,MAAM,CAACnB,YAAP,CACGf,CAAC,CAACkC,MAAM,CAACnB,YAAR,CADJ,CAEGf,CAAC,CAAC/B,WAAW,CAACiE,MAAM,CAAC3C,SAAR,CAAZ,CANP,CADF,CAUD,CAhBF,CAJH,CADF,CADF,cAyBE,2BAAK,SAAS,CAAC,YAAf,CAA4B,OAAO,CAAE0D,aAArC,eACE,oBAAC,SAAD,MADF,CAzBF,CAvEJ,CAsGGtC,SAAS,eACR,oBAAC,QAAD,EAAU,QAAQ,cAAE,oBAAC,gBAAD,MAApB,eACE,oBAAC,UAAD,gBACE,UAAU,CAAEK,kBADd,CAEE,iBAAiB,CAAEH,cAFrB,EAGM,CAACI,KAAK,CAALA,KAAD,CAAQb,SAAS,CAATA,SAAR,CAAmBE,SAAS,CAATA,SAAnB,CAA8BE,KAAK,CAALA,KAA9B,CAHN,EADF,CAvGJ,CAgHG,CAACG,SAAD,eAAc,2BAAK,KAAK,CAAE,CAAC+C,MAAM,CAAE,OAAT,CAAZ,EAhHjB,cAkHE,2BAAK,SAAS,CAAC,OAAf,EACGtC,MAAM,CAACuC,MAAP,CAAc3F,oBAAd,EAAoC4D,GAApC,CAAwC,SAACgC,MAAD,qBACvC,8BACE,GAAG,CAAEA,MADP,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAEpF,UAAU,CAAC,CAACqF,QAAQ,CAAE3D,QAAQ,GAAK0D,MAAxB,CAAD,CAHvB,CAIE,OAAO,CAAE,yBAAMzD,CAAAA,WAAW,CAACyD,MAAD,CAAjB,EAJX,EAMG5D,CAAC,CAAC4D,MAAD,CANJ,CADuC,EAAxC,CADH,CAlHF,cA+HE,2BAAK,SAAS,CAAC,OAAf,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAE,EAAvB,EADF,cAEE,2BAAK,SAAS,CAAC,aAAf,EACG5D,CAAC,CAAC,gDAAD,CADJ,CAFF,CA/HF,CADF,CAwID,CAED,GAAM8D,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACxC,GAAIA,SAAS,CAACC,WAAd,CAA2B,CACzB,MAAO,MAAP,CACD,CAFD,IAEO,IAAI,CAACD,SAAS,CAACxE,UAAX,EAAyBuE,SAAS,CAACvE,UAAvC,CAAmD,CACxD,MAAO,KAAP,CACD,CAFM,IAEA,IAAIwE,SAAS,CAACxE,UAAV,EAAwB,CAACuE,SAAS,CAACvE,UAAvC,CAAmD,CACxD,MAAO,MAAP,CACD,CAFM,IAEA,IACL,CAACb,KAAK,CACJqF,SAAS,CAACrE,iBAAV,CAA4BJ,SADxB,CAEJwE,SAAS,CAACpE,iBAAV,CAA4BJ,SAFxB,CADD,CAKL,CACA,MAAO,MAAP,CACD,CAPM,IAOA,IACL,CAACZ,KAAK,CACJqF,SAAS,CAACrE,iBAAV,CAA4BoB,YADxB,CAEJgD,SAAS,CAACpE,iBAAV,CAA4BoB,YAFxB,CADD,CAKL,CACA,MAAO,MAAP,CACD,CAPM,IAOA,IAAI,CAACpC,KAAK,CAACqF,SAAS,CAACtE,IAAX,CAAiBqE,SAAS,CAACrE,IAA3B,CAAV,CAA4C,CACjD,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAACf,KAAK,CAACqF,SAAS,CAACnE,MAAX,CAAmBkE,SAAS,CAAClE,MAA7B,CAAV,CAAgD,CACrD,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAAClB,KAAK,CAACqF,SAAS,CAACjE,WAAX,CAAwBgE,SAAS,CAAChE,WAAlC,CAAV,CAA0D,CAC/D,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CA7BD,CA+BA,cAAenB,CAAAA,KAAK,CAACsF,IAAN,CAAW5E,kBAAX,CAA+BwE,OAA/B,CAAf","sourcesContent":["import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACKS,\n  STATE_NAMES,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonFunctions';\n\nimport {IssueOpenedIcon, PinIcon, ReplyIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useCallback, useMemo, useRef, lazy, Suspense} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useSessionStorage} from 'react-use';\n\nconst Timeseries = lazy(() => import('./Timeseries'));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useSessionStorage(\n    'timeseriesLookback',\n    TIMESERIES_LOOKBACKS.MONTH\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', true);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      .sort((code1, code2) =>\n        STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(() => {\n    const cutOffDateUpper = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(selectedTimeseries || {}).filter(\n      (date) => date <= cutOffDateUpper\n    );\n\n    const lastDate = pastDates[pastDates.length - 1];\n    if (lookback === TIMESERIES_LOOKBACKS.BEGINNING) {\n      return pastDates;\n    }\n\n    let cutOffDateLower;\n    if (lookback === TIMESERIES_LOOKBACKS.MONTH) {\n      cutOffDateLower = formatISO(sub(parseIndiaDate(lastDate), {months: 1}), {\n        representation: 'date',\n      });\n    } else if (lookback === TIMESERIES_LOOKBACKS.THREE_MONTHS) {\n      cutOffDateLower = formatISO(sub(parseIndiaDate(lastDate), {months: 3}), {\n        representation: 'date',\n      });\n    }\n    return pastDates.filter((date) => date >= cutOffDateLower);\n  }, [selectedTimeseries, timelineDate, lookback]);\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t('Scale Modes')}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              className=\"switch\"\n              checked={isUniform}\n              aria-label={t('Checked by default to scale uniformly.')}\n              onChange={setIsUniform.bind(this, !isUniform)}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              chartType !== 'total' ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={chartType === 'total' && isLog}\n              className=\"switch\"\n              disabled={chartType !== 'total'}\n              onChange={setIsLog.bind(this, !isLog)}\n            />\n          </div>\n        </div>\n      </div>\n\n      {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            {...{dates, chartType, isUniform, isLog}}\n          />\n        </Suspense>\n      )}\n\n      {!isVisible && <div style={{height: '50rem'}} />}\n\n      <div className=\"pills\">\n        {Object.values(TIMESERIES_LOOKBACKS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: lookback === option})}\n            onClick={() => setLookback(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"alert\">\n        <IssueOpenedIcon size={24} />\n        <div className=\"alert-right\">\n          {t('Tested chart is independent of uniform scaling')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeseriesExplorer, isEqual);\n"]},"metadata":{},"sourceType":"module"}