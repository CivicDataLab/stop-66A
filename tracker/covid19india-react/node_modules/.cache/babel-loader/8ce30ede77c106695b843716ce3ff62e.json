{"ast":null,"code":"import Cell from'./Cell';import Tooltip from'./Tooltip';import{TABLE_STATISTICS,TABLE_STATISTICS_EXPANDED}from'../constants';import{InfoIcon}from'@primer/octicons-v2-react';import classnames from'classnames';import equal from'fast-deep-equal';import produce from'immer';import React,{useCallback}from'react';import{useTranslation}from'react-i18next';function DistrictRow(_ref){var _data$meta;var stateCode=_ref.stateCode,districtName=_ref.districtName,data=_ref.data,isPerMillion=_ref.isPerMillion,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,expandTable=_ref.expandTable,lastUpdatedTT=_ref.lastUpdatedTT;var _useTranslation=useTranslation(),t=_useTranslation.t;var highlightDistrict=useCallback(function(){if(regionHighlighted.districtName!==districtName){setRegionHighlighted(produce(regionHighlighted,function(draftRegionHighlighted){draftRegionHighlighted.stateCode=stateCode;draftRegionHighlighted.districtName=districtName;}));}},[regionHighlighted,districtName,setRegionHighlighted,stateCode]);var tableStatistics=expandTable?TABLE_STATISTICS_EXPANDED:TABLE_STATISTICS;return/*#__PURE__*/React.createElement(\"div\",{className:classnames('row','district',{'is-highlighted':(regionHighlighted===null||regionHighlighted===void 0?void 0:regionHighlighted.districtName)===districtName}),onMouseEnter:highlightDistrict},/*#__PURE__*/React.createElement(\"div\",{className:\"cell\"},/*#__PURE__*/React.createElement(\"div\",{className:\"state-name\"},t(districtName)),(data===null||data===void 0?void 0:(_data$meta=data.meta)===null||_data$meta===void 0?void 0:_data$meta.notes)&&/*#__PURE__*/React.createElement(Tooltip,{data:data.meta.notes},/*#__PURE__*/React.createElement(InfoIcon,{size:16}))),tableStatistics.map(function(statistic){return/*#__PURE__*/React.createElement(Cell,Object.assign({key:statistic},{statistic:statistic,data:data,isPerMillion:isPerMillion,lastUpdatedTT:lastUpdatedTT}));}));}var isDistrictRowEqual=function isDistrictRowEqual(prevProps,currProps){var _prevProps$data,_currProps$data,_prevProps$data2,_currProps$data2,_prevProps$data3,_currProps$data3;if(!equal((_prevProps$data=prevProps.data)===null||_prevProps$data===void 0?void 0:_prevProps$data.total,(_currProps$data=currProps.data)===null||_currProps$data===void 0?void 0:_currProps$data.total)){return false;}else if(!equal((_prevProps$data2=prevProps.data)===null||_prevProps$data2===void 0?void 0:_prevProps$data2.delta,(_currProps$data2=currProps.data)===null||_currProps$data2===void 0?void 0:_currProps$data2.delta)){return false;}else if(!equal((_prevProps$data3=prevProps.data)===null||_prevProps$data3===void 0?void 0:_prevProps$data3['last_updated'],(_currProps$data3=currProps.data)===null||_currProps$data3===void 0?void 0:_currProps$data3['last_updated'])){return false;}else if(!equal(prevProps.isPerMillion,currProps.isPerMillion)){return false;}else if(!equal(prevProps.regionHighlighted.districtName,currProps.regionHighlighted.districtName)&&(equal(prevProps.regionHighlighted.districtName,prevProps.districtName)||equal(currProps.regionHighlighted.districtName,currProps.districtName))){return false;}else if(!equal(prevProps.expandTable,currProps.expandTable)){return false;}return true;};export default React.memo(DistrictRow,isDistrictRowEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/DistrictRow.js"],"names":["Cell","Tooltip","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","InfoIcon","classnames","equal","produce","React","useCallback","useTranslation","DistrictRow","stateCode","districtName","data","isPerMillion","regionHighlighted","setRegionHighlighted","expandTable","lastUpdatedTT","t","highlightDistrict","draftRegionHighlighted","tableStatistics","meta","notes","map","statistic","isDistrictRowEqual","prevProps","currProps","total","delta","memo"],"mappings":"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","sourcesContent":["import Cell from './Cell';\nimport Tooltip from './Tooltip';\n\nimport {TABLE_STATISTICS, TABLE_STATISTICS_EXPANDED} from '../constants';\n\nimport {InfoIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction DistrictRow({\n  stateCode,\n  districtName,\n  data,\n  isPerMillion,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  lastUpdatedTT,\n}) {\n  const {t} = useTranslation();\n\n  const highlightDistrict = useCallback(() => {\n    if (regionHighlighted.districtName !== districtName) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = districtName;\n        })\n      );\n    }\n  }, [regionHighlighted, districtName, setRegionHighlighted, stateCode]);\n\n  const tableStatistics = expandTable\n    ? TABLE_STATISTICS_EXPANDED\n    : TABLE_STATISTICS;\n\n  return (\n    <div\n      className={classnames('row', 'district', {\n        'is-highlighted': regionHighlighted?.districtName === districtName,\n      })}\n      onMouseEnter={highlightDistrict}\n    >\n      <div className=\"cell\">\n        <div className=\"state-name\">{t(districtName)}</div>\n        {data?.meta?.notes && (\n          <Tooltip {...{data: data.meta.notes}}>\n            <InfoIcon size={16} />\n          </Tooltip>\n        )}\n      </div>\n\n      {tableStatistics.map((statistic) => (\n        <Cell\n          key={statistic}\n          {...{statistic, data, isPerMillion, lastUpdatedTT}}\n        />\n      ))}\n    </div>\n  );\n}\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    !equal(prevProps.data?.['last_updated'], currProps.data?.['last_updated'])\n  ) {\n    return false;\n  } else if (!equal(prevProps.isPerMillion, currProps.isPerMillion)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n    (equal(prevProps.regionHighlighted.districtName, prevProps.districtName) ||\n      equal(currProps.regionHighlighted.districtName, currProps.districtName))\n  ) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(DistrictRow, isDistrictRowEqual);\n"]},"metadata":{},"sourceType":"module"}