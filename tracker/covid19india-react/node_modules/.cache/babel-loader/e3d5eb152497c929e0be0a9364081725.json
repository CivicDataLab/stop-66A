{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/ActionsPanel.js\";\nimport { parse, format } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport React, { useMemo, useCallback, lazy, Suspense } from 'react';\nimport * as Icon from 'react-feather';\nimport { useSpring, animated } from 'react-spring';\nconst Timeline = lazy(() => import('./Timeline'));\n\nconst ActionsPanel = ({\n  lastViewedLog,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates\n}) => {\n  const Bell = useMemo(() => /*#__PURE__*/React.createElement(Icon.Bell, {\n    onClick: () => {\n      setShowUpdates(!showUpdates);\n      setNewUpdate(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), [setNewUpdate, setShowUpdates, showUpdates]);\n  const BellOff = useMemo(() => /*#__PURE__*/React.createElement(Icon.BellOff, {\n    onClick: () => {\n      setShowUpdates(!showUpdates);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), [setShowUpdates, showUpdates]);\n  const TimelineIcon = useMemo(() => /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"-.2 -.2 17 17\",\n    width: \"16\",\n    height: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 01.75.75v2.992l2.028.812a.75.75 0 01-.557 1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 0 017.75 4z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), []);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: isTimelineMode ? 1 : 0,\n    transform: `perspective(600px) rotateX(${isTimelineMode ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n  const trail = useMemo(() => {\n    const styles = [];\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const getTimeFromMilliseconds = lastViewedLog => {\n    return format(utcToZonedTime(parse(lastViewedLog, 'T', new Date()), 'Asia/Kolkata'), 'dd MMM, p');\n  };\n\n  const handleClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"actions\",\n    style: {\n      opacity: opacity.interpolate(o => 1 - o),\n      transform,\n      pointerEvents: isTimelineMode ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fadeInUp\",\n    style: trail[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, `${getTimeFromMilliseconds(lastViewedLog)} IST`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bell-icon fadeInUp\",\n    style: trail[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, !showUpdates ? Bell : BellOff, newUpdate && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline-icon fadeInUp\",\n    onClick: handleClick,\n    style: trail[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, TimelineIcon)), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"actions timeline\",\n    style: {\n      opacity,\n      transform: transform.interpolate(t => `${t} rotateX(180deg)`),\n      pointerEvents: !isTimelineMode ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, isTimelineMode && /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Timeline, Object.assign({\n    setIsTimelineMode,\n    setDate,\n    dates\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ActionsPanel;","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/ActionsPanel.js"],"names":["parse","format","utcToZonedTime","React","useMemo","useCallback","lazy","Suspense","Icon","useSpring","animated","Timeline","ActionsPanel","lastViewedLog","newUpdate","isTimelineMode","setIsTimelineMode","showUpdates","setDate","dates","setNewUpdate","setShowUpdates","Bell","BellOff","TimelineIcon","transform","opacity","config","mass","tension","friction","trail","styles","map","element","index","push","animationDelay","getTimeFromMilliseconds","Date","handleClick","interpolate","o","pointerEvents","t"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,MAAf,QAA4B,UAA5B;AACA,SAAQC,cAAR,QAA6B,aAA7B;AACA,OAAOC,KAAP,IAAeC,OAAf,EAAwBC,WAAxB,EAAqCC,IAArC,EAA2CC,QAA3C,QAA0D,OAA1D;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,cAAlC;AAEA,MAAMC,QAAQ,GAAGL,IAAI,CAAC,MAAM,OAAO,YAAP,CAAP,CAArB;;AAEA,MAAMM,YAAY,GAAG,CAAC;AACpBC,EAAAA,aADoB;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,cAHoB;AAIpBC,EAAAA,iBAJoB;AAKpBC,EAAAA,WALoB;AAMpBC,EAAAA,OANoB;AAOpBC,EAAAA,KAPoB;AAQpBC,EAAAA,YARoB;AASpBC,EAAAA;AAToB,CAAD,KAUf;AACJ,QAAMC,IAAI,GAAGlB,OAAO,CAClB,mBACE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,OAAO,EAAE,MAAM;AACbiB,MAAAA,cAAc,CAAC,CAACJ,WAAF,CAAd;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFgB,EASlB,CAACA,YAAD,EAAeC,cAAf,EAA+BJ,WAA/B,CATkB,CAApB;AAYA,QAAMM,OAAO,GAAGnB,OAAO,CACrB,mBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,OAAO,EAAE,MAAM;AACbiB,MAAAA,cAAc,CAAC,CAACJ,WAAF,CAAd;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFmB,EAQrB,CAACI,cAAD,EAAiBJ,WAAjB,CARqB,CAAvB;AAWA,QAAMO,YAAY,GAAGpB,OAAO,CAC1B,mBACE;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,EAAC,eAFV;AAGE,IAAA,KAAK,EAAC,IAHR;AAIE,IAAA,MAAM,EAAC,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AACE,IAAA,QAAQ,EAAC,SADX;AAEE,IAAA,CAAC,EAAC,qSAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFwB,EAoB1B,EApB0B,CAA5B;AAuBA,QAAM;AAACqB,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAuBjB,SAAS,CAAC;AACrCiB,IAAAA,OAAO,EAAEX,cAAc,GAAG,CAAH,GAAO,CADO;AAErCU,IAAAA,SAAS,EAAG,8BAA6BV,cAAc,GAAG,GAAH,GAAS,CAAE,MAF7B;AAGrCY,IAAAA,MAAM,EAAE;AAACC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,OAAO,EAAE,GAAnB;AAAwBC,MAAAA,QAAQ,EAAE;AAAlC;AAH6B,GAAD,CAAtC;AAMA,QAAMC,KAAK,GAAG3B,OAAO,CAAC,MAAM;AAC1B,UAAM4B,MAAM,GAAG,EAAf;AAEA,KAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChCH,MAAAA,MAAM,CAACI,IAAP,CAAY;AACVC,QAAAA,cAAc,EAAG,GAAE,MAAMF,KAAK,GAAG,GAAI;AAD3B,OAAZ;AAGA,aAAO,IAAP;AACD,KALD;AAMA,WAAOH,MAAP;AACD,GAVoB,EAUlB,EAVkB,CAArB;;AAYA,QAAMM,uBAAuB,GAAIzB,aAAD,IAAmB;AACjD,WAAOZ,MAAM,CACXC,cAAc,CAACF,KAAK,CAACa,aAAD,EAAgB,GAAhB,EAAqB,IAAI0B,IAAJ,EAArB,CAAN,EAAwC,cAAxC,CADH,EAEX,WAFW,CAAb;AAID,GALD;;AAOA,QAAMC,WAAW,GAAGnC,WAAW,CAAC,MAAM;AACpCW,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,QAAIC,WAAJ,EAAiBI,cAAc,CAAC,CAACJ,WAAF,CAAd;AAClB,GAH8B,EAG5B,CAACD,iBAAD,EAAoBK,cAApB,EAAoCJ,WAApC,CAH4B,CAA/B;AAKA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,KAAK,EAAE;AACLS,MAAAA,OAAO,EAAEA,OAAO,CAACe,WAAR,CAAqBC,CAAD,IAAO,IAAIA,CAA/B,CADJ;AAELjB,MAAAA,SAFK;AAGLkB,MAAAA,aAAa,EAAE5B,cAAc,GAAG,MAAH,GAAY;AAHpC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAyB,IAAA,KAAK,EAAEgB,KAAK,CAAC,CAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4C,GAAEO,uBAAuB,CACnEzB,aADmE,CAEnE,MAFF,CARF,eAYE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAEkB,KAAK,CAAC,CAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACd,WAAD,GAAeK,IAAf,GAAsBC,OADzB,EAEGT,SAAS,iBAAI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhB,CAZF,eAiBE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,OAAO,EAAE0B,WAFX;AAGE,IAAA,KAAK,EAAET,KAAK,CAAC,CAAD,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGP,YALH,CAjBF,CADF,eA2BE,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AACLE,MAAAA,OADK;AAELD,MAAAA,SAAS,EAAEA,SAAS,CAACgB,WAAV,CAAuBG,CAAD,IAAQ,GAAEA,CAAE,kBAAlC,CAFN;AAGLD,MAAAA,aAAa,EAAE,CAAC5B,cAAD,GAAkB,MAAlB,GAA2B;AAHrC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGA,cAAc,iBACb,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,gBAAc;AAACC,IAAAA,iBAAD;AAAoBE,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CATJ,CA3BF,CADF;AA4CD,CAnID;;AAqIA,eAAeP,YAAf","sourcesContent":["import {parse, format} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport React, {useMemo, useCallback, lazy, Suspense} from 'react';\nimport * as Icon from 'react-feather';\nimport {useSpring, animated} from 'react-spring';\n\nconst Timeline = lazy(() => import('./Timeline'));\n\nconst ActionsPanel = ({\n  lastViewedLog,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const Bell = useMemo(\n    () => (\n      <Icon.Bell\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n          setNewUpdate(false);\n        }}\n      />\n    ),\n    [setNewUpdate, setShowUpdates, showUpdates]\n  );\n\n  const BellOff = useMemo(\n    () => (\n      <Icon.BellOff\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n        }}\n      />\n    ),\n    [setShowUpdates, showUpdates]\n  );\n\n  const TimelineIcon = useMemo(\n    () => (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"-.2 -.2 17 17\"\n        width=\"16\"\n        height=\"16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0\n          .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715\n          4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154\n          8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0\n          01.75.75v2.992l2.028.812a.75.75 0 01-.557\n          1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75\n          0 017.75 4z\"\n        ></path>\n      </svg>\n    ),\n    []\n  );\n\n  const {transform, opacity} = useSpring({\n    opacity: isTimelineMode ? 1 : 0,\n    transform: `perspective(600px) rotateX(${isTimelineMode ? 180 : 0}deg)`,\n    config: {mass: 5, tension: 500, friction: 80},\n  });\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const getTimeFromMilliseconds = (lastViewedLog) => {\n    return format(\n      utcToZonedTime(parse(lastViewedLog, 'T', new Date()), 'Asia/Kolkata'),\n      'dd MMM, p'\n    );\n  };\n\n  const handleClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n\n  return (\n    <React.Fragment>\n      <animated.div\n        className=\"actions\"\n        style={{\n          opacity: opacity.interpolate((o) => 1 - o),\n          transform,\n          pointerEvents: isTimelineMode ? 'none' : '',\n        }}\n      >\n        <h5 className=\"fadeInUp\" style={trail[0]}>{`${getTimeFromMilliseconds(\n          lastViewedLog\n        )} IST`}</h5>\n\n        <div className=\"bell-icon fadeInUp\" style={trail[1]}>\n          {!showUpdates ? Bell : BellOff}\n          {newUpdate && <div className=\"indicator\"></div>}\n        </div>\n\n        <div\n          className=\"timeline-icon fadeInUp\"\n          onClick={handleClick}\n          style={trail[2]}\n        >\n          {TimelineIcon}\n        </div>\n      </animated.div>\n\n      <animated.div\n        className=\"actions timeline\"\n        style={{\n          opacity,\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\n          pointerEvents: !isTimelineMode ? 'none' : '',\n        }}\n      >\n        {isTimelineMode && (\n          <Suspense fallback={<div />}>\n            <Timeline {...{setIsTimelineMode, setDate, dates}} />\n          </Suspense>\n        )}\n      </animated.div>\n    </React.Fragment>\n  );\n};\n\nexport default ActionsPanel;\n"]},"metadata":{},"sourceType":"module"}