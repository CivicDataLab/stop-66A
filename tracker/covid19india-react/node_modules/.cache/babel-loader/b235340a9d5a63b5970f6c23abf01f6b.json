{"ast":null,"code":"import _toConsumableArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import MapLegend from'./MapLegend';import{D3_TRANSITION_DURATION,MAP_META,MAP_TYPES,MAP_VIEWS,MAP_VIZS,STATE_CODES,STATE_NAMES,STATISTIC_CONFIGS,UNKNOWN_DISTRICT_KEY}from'../constants';import{formatNumber,getStatistic,toTitleCase}from'../utils/commonFunctions';import{AlertIcon}from'@primer/octicons-v2-react';import classnames from'classnames';import{max}from'd3-array';import{json}from'd3-fetch';import{geoIdentity,geoPath}from'd3-geo';import{scaleSqrt,scaleSequential}from'd3-scale';// eslint-disable-next-line\n// import worker from 'workerize-loader!../workers/mapVisualizer';\nimport{interpolateReds,interpolateBlues,interpolateGreens,interpolateGreys,interpolatePurples,interpolateOranges}from'd3-scale-chromatic';import{select,event}from'd3-selection';import{transition}from'd3-transition';import React,{useCallback,useEffect,useMemo,useRef}from'react';import{useTranslation}from'react-i18next';import{useHistory}from'react-router-dom';import useSWR from'swr';import*as topojson from'topojson';var width=432,height=488;var colorInterpolator=function colorInterpolator(statistic){switch(statistic){case'confirmed':return function(t){return interpolateReds(t*0.85);};case'active':return function(t){return interpolateBlues(t*0.85);};case'recovered':return function(t){return interpolateGreens(t*0.85);};case'deceased':return function(t){return interpolateGreys(t*0.85);};case'tested':return function(t){return interpolatePurples(t*0.85);};default:return function(t){return interpolateOranges(t*0.85);};}};var getTotalStatistic=function getTotalStatistic(data,statistic){return getStatistic(data,'total',statistic);};function MapVisualizer(_ref){var _this=this,_data$mapCode,_data$mapCode$distric;var mapCode=_ref.mapCode,mapView=_ref.mapView,mapViz=_ref.mapViz,data=_ref.data,changeMap=_ref.changeMap,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,statistic=_ref.statistic,isCountryLoaded=_ref.isCountryLoaded;var _useTranslation=useTranslation(),t=_useTranslation.t;var svgRef=useRef(null);var mapMeta=MAP_META[mapCode];var history=useHistory();var _useSWR=useSWR(mapMeta.geoDataFile,/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return json(file);case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),{suspense:false,revalidateOnFocus:false}),geoData=_useSWR.data;var statisticMax=useMemo(function(){var stateCodes=Object.keys(data).filter(function(stateCode){return stateCode!=='TT'&&Object.keys(MAP_META).includes(stateCode);});return mapView===MAP_VIEWS.STATES?max(stateCodes,function(stateCode){return getTotalStatistic(data[stateCode],statistic);}):max(stateCodes,function(stateCode){var _data$stateCode;return((_data$stateCode=data[stateCode])===null||_data$stateCode===void 0?void 0:_data$stateCode.districts)?max(Object.values(data[stateCode].districts),function(districtData){return getTotalStatistic(districtData,statistic);}):0;});},[data,mapView,statistic]);var statisticTotal=useMemo(function(){return getTotalStatistic(data[mapCode],statistic);},[data,mapCode,statistic]);var mapScale=useMemo(function(){if(mapViz===MAP_VIZS.BUBBLES){return scaleSqrt([0,Math.max(statisticMax,1)],[0,40]).clamp(true).nice(3);}else{return scaleSequential([0,Math.max(1,statisticMax)],colorInterpolator(statistic)).clamp(true);}},[mapViz,statistic,statisticMax]);var path=useMemo(function(){if(!geoData)return null;return geoPath(geoIdentity());},[geoData]);var fillColor=useCallback(function(d){var _stateData$districts;var stateCode=STATE_CODES[d.properties.st_nm];var district=d.properties.district;var stateData=data[stateCode];var districtData=stateData===null||stateData===void 0?void 0:(_stateData$districts=stateData.districts)===null||_stateData$districts===void 0?void 0:_stateData$districts[district];var n;if(district)n=getTotalStatistic(districtData,statistic);else n=getTotalStatistic(stateData,statistic);var color=n===0?'#ffffff00':mapScale(n);return color;},[data,mapScale,statistic]);var strokeColor=useCallback(function(alpha){return STATISTIC_CONFIGS[statistic].color+alpha;},[statistic]);var features=useMemo(function(){if(!geoData)return null;var featuresWrap=mapView===MAP_VIEWS.STATES?topojson.feature(geoData,geoData.objects.states).features:mapMeta.mapType===MAP_TYPES.COUNTRY&&mapViz===MAP_VIZS.BUBBLES?[].concat(_toConsumableArray(topojson.feature(geoData,geoData.objects.states).features),_toConsumableArray(topojson.feature(geoData,geoData.objects.districts).features)):topojson.feature(geoData,geoData.objects.districts).features;// Add id to each feature\nreturn featuresWrap.map(function(feature){var district=feature.properties.district;var state=feature.properties.st_nm;var obj=Object.assign({},feature);obj.id=\"\".concat(mapCode,\"-\").concat(state).concat(district?'-'+district:'');return obj;});},[geoData,mapCode,mapView,mapViz,mapMeta]);var populateTexts=useCallback(function(regionSelection){regionSelection.select('title').text(function(d){if(mapViz===MAP_VIZS.CHOROPLETH){var _stateData$districts2;var state=d.properties.st_nm;var stateCode=STATE_CODES[state];var district=d.properties.district;var stateData=data[stateCode];var districtData=stateData===null||stateData===void 0?void 0:(_stateData$districts2=stateData.districts)===null||_stateData$districts2===void 0?void 0:_stateData$districts2[district];var n;if(district)n=getTotalStatistic(districtData,statistic);else n=getTotalStatistic(stateData,statistic);return formatNumber(100*(n/(statisticTotal||0.001)))+'% from '+toTitleCase(district?district:state);}});},[mapViz,data,statistic,statisticTotal]);var onceTouchedRegion=useRef(null);// Reset on tapping outside map\nuseEffect(function(){var svg=select(svgRef.current);svg.attr('pointer-events','auto').on('click',function(){onceTouchedRegion.current=null;setRegionHighlighted({stateCode:mapCode,districtName:null});});},[mapCode,setRegionHighlighted]);// Choropleth\nuseEffect(function(){if(!geoData)return;var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);var regionSelection=svg.select('.regions').selectAll('path').data(mapViz!==MAP_VIZS.BUBBLES?features:[],function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('stroke-width',1.8).attr('stroke-opacity',0).style('cursor','pointer').on('mouseenter',function(d){setRegionHighlighted({stateCode:STATE_CODES[d.properties.st_nm],districtName:d.properties.district});}).attr('fill','#fff0').attr('stroke','#fff0').call(function(enter){enter.append('title');});},function(update){return update;},function(exit){return exit.transition(T).attr('stroke','#fff0').attr('fill','#fff0').remove();}).attr('pointer-events','all').on('touchstart',function(d){if(onceTouchedRegion.current===d)onceTouchedRegion.current=null;else onceTouchedRegion.current=d;}).on('click',function(d){var _data$stateCode2;event.stopPropagation();var stateCode=STATE_CODES[d.properties.st_nm];if(onceTouchedRegion.current||mapMeta.mapType===MAP_TYPES.STATE||!((_data$stateCode2=data[stateCode])===null||_data$stateCode2===void 0?void 0:_data$stateCode2.districts))return;// Disable pointer events till the new map is rendered\nsvg.attr('pointer-events','none');svg.select('.regions').selectAll('path').attr('pointer-events','none');// Switch map\nhistory.push(\"/state/\".concat(stateCode).concat(window.innerWidth<769?'#MapExplorer':''));}).call(function(sel){sel.transition(T).attr('fill',fillColor).attr('stroke',strokeColor.bind(_this,''));});window.requestIdleCallback(function(){populateTexts(regionSelection);});},[mapViz,data,features,fillColor,geoData,history,mapMeta.mapType,path,populateTexts,setRegionHighlighted,strokeColor]);// Bubble\nuseEffect(function(){if(!features)return;var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);var circlesData=[];if(mapViz===MAP_VIZS.BUBBLES){circlesData=features.map(function(feature){var stateCode=STATE_CODES[feature.properties.st_nm];var districtName=feature.properties.district;var stateData=data[stateCode];if(mapView===MAP_VIEWS.STATES){feature.value=getTotalStatistic(stateData,statistic);}else if(mapView===MAP_VIEWS.DISTRICTS){var _stateData$districts3,_stateData$districts4;var districtData=stateData===null||stateData===void 0?void 0:(_stateData$districts3=stateData.districts)===null||_stateData$districts3===void 0?void 0:_stateData$districts3[districtName];if(districtName)feature.value=getTotalStatistic(districtData,statistic);else feature.value=getTotalStatistic(stateData===null||stateData===void 0?void 0:(_stateData$districts4=stateData.districts)===null||_stateData$districts4===void 0?void 0:_stateData$districts4[UNKNOWN_DISTRICT_KEY],statistic);}return feature;}).sort(function(featureA,featureB){return featureB.value-featureB.value;});}svg.select('.circles').selectAll('circle').data(circlesData,function(feature){return feature.id;}).join(function(enter){return enter.append('circle').attr('transform',function(feature){return\"translate(\".concat(path.centroid(feature),\")\");}).attr('fill-opacity',0.25).style('cursor','pointer').attr('pointer-events','all');},function(update){return update;},function(exit){return exit.call(function(exit){return exit.transition(T).attr('r',0).remove();});}).on('mouseenter',function(feature){setRegionHighlighted({stateCode:STATE_CODES[feature.properties.st_nm],districtName:mapView===MAP_VIEWS.STATES?null:feature.properties.district||UNKNOWN_DISTRICT_KEY});}).on('touchstart',function(feature){if(onceTouchedRegion.current===feature)onceTouchedRegion.current=null;else onceTouchedRegion.current=feature;}).on('click',function(feature){event.stopPropagation();if(onceTouchedRegion.current||mapMeta.mapType===MAP_TYPES.STATE)return;history.push(\"/state/\".concat(STATE_CODES[feature.properties.st_nm]).concat(window.innerWidth<769?'#MapExplorer':''));}).transition(T).attr('fill',STATISTIC_CONFIGS[statistic].color+'70').attr('stroke',STATISTIC_CONFIGS[statistic].color+'70').attr('r',function(feature){return mapScale(feature.value);});},[mapMeta.mapType,mapViz,mapView,data,features,history,mapScale,path,setRegionHighlighted,statistic]);// Boundaries\nuseEffect(function(){if(!geoData)return;var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);var meshStates=[];var meshDistricts=[];if(mapMeta.mapType===MAP_TYPES.COUNTRY){meshStates=[topojson.mesh(geoData,geoData.objects.states)];meshStates[0].id=\"\".concat(mapCode,\"-states\");}if(mapMeta.mapType===MAP_TYPES.STATE||mapView===MAP_VIEWS.DISTRICTS&&mapViz===MAP_VIZS.CHOROPLETH){// Add id to mesh\nmeshDistricts=[topojson.mesh(geoData,geoData.objects.districts)];meshDistricts[0].id=\"\".concat(mapCode,\"-districts\");}svg.select('.state-borders').attr('fill','none').attr('stroke-width',1.5).selectAll('path').data(meshStates,function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('stroke','#fff0');},function(update){return update;},function(exit){return exit.transition(T).attr('stroke','#fff0').remove();}).transition(T).attr('stroke',strokeColor.bind(_this,'40'));svg.select('.district-borders').attr('fill','none').attr('stroke-width',1.5).selectAll('path').data(meshDistricts,function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('d',path).attr('stroke','#fff0');},function(update){return update;},function(exit){return exit.transition(T).attr('stroke','#fff0').remove();}).transition(T).attr('stroke',strokeColor.bind(_this,'40'));},[geoData,mapMeta,mapCode,mapViz,mapView,statistic,path,strokeColor]);// Highlight\nuseEffect(function(){var stateCode=regionHighlighted.stateCode;var stateName=STATE_NAMES[stateCode];var district=regionHighlighted.districtName;var svg=select(svgRef.current);if(mapViz===MAP_VIZS.BUBBLES){svg.select('.circles').selectAll('circle').attr('fill-opacity',function(d){var _d$properties;var highlighted=stateName===d.properties.st_nm&&(!district&&stateCode!==mapCode||district===((_d$properties=d.properties)===null||_d$properties===void 0?void 0:_d$properties.district)||mapView===MAP_VIEWS.STATES||district===UNKNOWN_DISTRICT_KEY&&!d.properties.district);return highlighted?1:0.25;});}else{svg.select('.regions').selectAll('path').each(function(d){var _d$properties2;var highlighted=stateName===d.properties.st_nm&&(!district&&stateCode!==mapCode||district===((_d$properties2=d.properties)===null||_d$properties2===void 0?void 0:_d$properties2.district)||mapView===MAP_VIEWS.STATES);if(highlighted)this.parentNode.appendChild(this);select(this).attr('stroke-opacity',highlighted?1:0);});}},[geoData,data,mapCode,mapView,mapViz,regionHighlighted.stateCode,regionHighlighted.districtName,statistic]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"svg-parent\"},/*#__PURE__*/React.createElement(\"svg\",{id:\"chart\",viewBox:\"0 0 \".concat(width,\" \").concat(height),preserveAspectRatio:\"xMidYMid meet\",ref:svgRef},/*#__PURE__*/React.createElement(\"g\",{className:\"regions\"}),/*#__PURE__*/React.createElement(\"g\",{className:\"state-borders\"}),/*#__PURE__*/React.createElement(\"g\",{className:\"district-borders\"}),/*#__PURE__*/React.createElement(\"g\",{className:\"circles\"})),mapMeta.mapType===MAP_TYPES.STATE&&!!getTotalStatistic((_data$mapCode=data[mapCode])===null||_data$mapCode===void 0?void 0:(_data$mapCode$distric=_data$mapCode.districts)===null||_data$mapCode$distric===void 0?void 0:_data$mapCode$distric[UNKNOWN_DISTRICT_KEY],statistic)&&/*#__PURE__*/React.createElement(\"div\",{className:classnames('disclaimer',\"is-\".concat(statistic))},/*#__PURE__*/React.createElement(AlertIcon,null),/*#__PURE__*/React.createElement(\"span\",null,t('District-wise data not available in state bulletin')))),mapScale&&/*#__PURE__*/React.createElement(MapLegend,{data:data,mapViz:mapViz,mapScale:mapScale,statistic:statistic}),/*#__PURE__*/React.createElement(\"svg\",{style:{position:'absolute',height:0}},/*#__PURE__*/React.createElement(\"defs\",null,/*#__PURE__*/React.createElement(\"filter\",{id:\"balance-color\",colorInterpolationFilters:\"sRGB\"},/*#__PURE__*/React.createElement(\"feColorMatrix\",{type:\"matrix\",values:\"0.91372549  0           0            0  0.08627451 0           0.91372549  0            0  0.08627451 0           0           0.854901961  0  0.145098039 0           0           0            1  0\"})))));}export default MapVisualizer;","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapVisualizer.js"],"names":["MapLegend","D3_TRANSITION_DURATION","MAP_META","MAP_TYPES","MAP_VIEWS","MAP_VIZS","STATE_CODES","STATE_NAMES","STATISTIC_CONFIGS","UNKNOWN_DISTRICT_KEY","formatNumber","getStatistic","toTitleCase","AlertIcon","classnames","max","json","geoIdentity","geoPath","scaleSqrt","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","select","event","transition","React","useCallback","useEffect","useMemo","useRef","useTranslation","useHistory","useSWR","topojson","width","height","colorInterpolator","statistic","t","getTotalStatistic","data","MapVisualizer","mapCode","mapView","mapViz","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","svgRef","mapMeta","history","geoDataFile","file","suspense","revalidateOnFocus","geoData","statisticMax","stateCodes","Object","keys","filter","stateCode","includes","STATES","districts","values","districtData","statisticTotal","mapScale","BUBBLES","Math","clamp","nice","path","fillColor","d","properties","st_nm","district","stateData","n","color","strokeColor","alpha","features","featuresWrap","feature","objects","states","mapType","COUNTRY","map","state","obj","assign","id","populateTexts","regionSelection","text","CHOROPLETH","onceTouchedRegion","svg","current","attr","on","districtName","T","duration","selectAll","join","enter","append","style","call","update","exit","remove","stopPropagation","STATE","push","window","innerWidth","sel","bind","requestIdleCallback","circlesData","value","DISTRICTS","sort","featureA","featureB","centroid","meshStates","meshDistricts","mesh","stateName","highlighted","each","parentNode","appendChild","position"],"mappings":"sgBAAA,MAAOA,CAAAA,SAAP,KAAsB,aAAtB,CAEA,OACEC,sBADF,CAEEC,QAFF,CAGEC,SAHF,CAIEC,SAJF,CAKEC,QALF,CAMEC,WANF,CAOEC,WAPF,CAQEC,iBARF,CASEC,oBATF,KAUO,cAVP,CAWA,OACEC,YADF,CAEEC,YAFF,CAGEC,WAHF,KAIO,0BAJP,CAMA,OAAQC,SAAR,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,GAAR,KAAkB,UAAlB,CACA,OAAQC,IAAR,KAAmB,UAAnB,CACA,OAAQC,WAAR,CAAqBC,OAArB,KAAmC,QAAnC,CACA,OAAQC,SAAR,CAAmBC,eAAnB,KAAyC,UAAzC,CACA;AACA;AACA,OACEC,eADF,CAEEC,gBAFF,CAGEC,iBAHF,CAIEC,gBAJF,CAKEC,kBALF,CAMEC,kBANF,KAOO,oBAPP,CAQA,OAAQC,MAAR,CAAgBC,KAAhB,KAA4B,cAA5B,CACA,OAAQC,UAAR,KAAyB,eAAzB,CACA,MAAOC,CAAAA,KAAP,EAAeC,WAAf,CAA4BC,SAA5B,CAAuCC,OAAvC,CAAgDC,MAAhD,KAA6D,OAA7D,CACA,OAAQC,cAAR,KAA6B,eAA7B,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,KAAnB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,UAA1B,C,GAEOC,CAAAA,K,CAAkB,G,CAAXC,M,CAAgB,G,CAE9B,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,SAAD,CAAe,CACvC,OAAQA,SAAR,EACE,IAAK,WAAL,CACE,MAAO,UAACC,CAAD,QAAOtB,CAAAA,eAAe,CAACsB,CAAC,CAAG,IAAL,CAAtB,EAAP,CACF,IAAK,QAAL,CACE,MAAO,UAACA,CAAD,QAAOrB,CAAAA,gBAAgB,CAACqB,CAAC,CAAG,IAAL,CAAvB,EAAP,CACF,IAAK,WAAL,CACE,MAAO,UAACA,CAAD,QAAOpB,CAAAA,iBAAiB,CAACoB,CAAC,CAAG,IAAL,CAAxB,EAAP,CACF,IAAK,UAAL,CACE,MAAO,UAACA,CAAD,QAAOnB,CAAAA,gBAAgB,CAACmB,CAAC,CAAG,IAAL,CAAvB,EAAP,CACF,IAAK,QAAL,CACE,MAAO,UAACA,CAAD,QAAOlB,CAAAA,kBAAkB,CAACkB,CAAC,CAAG,IAAL,CAAzB,EAAP,CACF,QACE,MAAO,UAACA,CAAD,QAAOjB,CAAAA,kBAAkB,CAACiB,CAAC,CAAG,IAAL,CAAzB,EAAP,CAZJ,CAcD,CAfD,CAiBA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAOH,SAAP,CAAqB,CAC7C,MAAO/B,CAAAA,YAAY,CAACkC,IAAD,CAAO,OAAP,CAAgBH,SAAhB,CAAnB,CACD,CAFD,CAIA,QAASI,CAAAA,aAAT,MAUG,uDATDC,CAAAA,OASC,MATDA,OASC,CARDC,OAQC,MARDA,OAQC,CAPDC,MAOC,MAPDA,MAOC,CANDJ,IAMC,MANDA,IAMC,CALDK,SAKC,MALDA,SAKC,CAJDC,iBAIC,MAJDA,iBAIC,CAHDC,oBAGC,MAHDA,oBAGC,CAFDV,SAEC,MAFDA,SAEC,CADDW,eACC,MADDA,eACC,qBACWlB,cAAc,EADzB,CACMQ,CADN,iBACMA,CADN,CAED,GAAMW,CAAAA,MAAM,CAAGpB,MAAM,CAAC,IAAD,CAArB,CAEA,GAAMqB,CAAAA,OAAO,CAAGrD,QAAQ,CAAC6C,OAAD,CAAxB,CACA,GAAMS,CAAAA,OAAO,CAAGpB,UAAU,EAA1B,CALC,YAOuBC,MAAM,CAC5BkB,OAAO,CAACE,WADoB,2FAE5B,iBAAOC,IAAP,wIACe1C,CAAAA,IAAI,CAAC0C,IAAD,CADnB,6GAF4B,gEAK5B,CAACC,QAAQ,CAAE,KAAX,CAAkBC,iBAAiB,CAAE,KAArC,CAL4B,CAP7B,CAOYC,OAPZ,SAOMhB,IAPN,CAeD,GAAMiB,CAAAA,YAAY,CAAG7B,OAAO,CAAC,UAAM,CACjC,GAAM8B,CAAAA,UAAU,CAAGC,MAAM,CAACC,IAAP,CAAYpB,IAAZ,EAAkBqB,MAAlB,CACjB,SAACC,SAAD,QACEA,CAAAA,SAAS,GAAK,IAAd,EAAsBH,MAAM,CAACC,IAAP,CAAY/D,QAAZ,EAAsBkE,QAAtB,CAA+BD,SAA/B,CADxB,EADiB,CAAnB,CAKA,MAAOnB,CAAAA,OAAO,GAAK5C,SAAS,CAACiE,MAAtB,CACHtD,GAAG,CAACgD,UAAD,CAAa,SAACI,SAAD,QACdvB,CAAAA,iBAAiB,CAACC,IAAI,CAACsB,SAAD,CAAL,CAAkBzB,SAAlB,CADH,EAAb,CADA,CAIH3B,GAAG,CAACgD,UAAD,CAAa,SAACI,SAAD,4BACd,kBAAAtB,IAAI,CAACsB,SAAD,CAAJ,0DAAiBG,SAAjB,EACIvD,GAAG,CAACiD,MAAM,CAACO,MAAP,CAAc1B,IAAI,CAACsB,SAAD,CAAJ,CAAgBG,SAA9B,CAAD,CAA2C,SAACE,YAAD,QAC5C5B,CAAAA,iBAAiB,CAAC4B,YAAD,CAAe9B,SAAf,CAD2B,EAA3C,CADP,CAII,CALU,EAAb,CAJP,CAWD,CAjB2B,CAiBzB,CAACG,IAAD,CAAOG,OAAP,CAAgBN,SAAhB,CAjByB,CAA5B,CAmBA,GAAM+B,CAAAA,cAAc,CAAGxC,OAAO,CAAC,UAAM,CACnC,MAAOW,CAAAA,iBAAiB,CAACC,IAAI,CAACE,OAAD,CAAL,CAAgBL,SAAhB,CAAxB,CACD,CAF6B,CAE3B,CAACG,IAAD,CAAOE,OAAP,CAAgBL,SAAhB,CAF2B,CAA9B,CAIA,GAAMgC,CAAAA,QAAQ,CAAGzC,OAAO,CAAC,UAAM,CAC7B,GAAIgB,MAAM,GAAK5C,QAAQ,CAACsE,OAAxB,CAAiC,CAC/B,MAAOxD,CAAAA,SAAS,CAAC,CAAC,CAAD,CAAIyD,IAAI,CAAC7D,GAAL,CAAS+C,YAAT,CAAuB,CAAvB,CAAJ,CAAD,CAAiC,CAAC,CAAD,CAAI,EAAJ,CAAjC,CAAT,CACJe,KADI,CACE,IADF,EAEJC,IAFI,CAEC,CAFD,CAAP,CAGD,CAJD,IAIO,CACL,MAAO1D,CAAAA,eAAe,CACpB,CAAC,CAAD,CAAIwD,IAAI,CAAC7D,GAAL,CAAS,CAAT,CAAY+C,YAAZ,CAAJ,CADoB,CAEpBrB,iBAAiB,CAACC,SAAD,CAFG,CAAf,CAGLmC,KAHK,CAGC,IAHD,CAAP,CAID,CACF,CAXuB,CAWrB,CAAC5B,MAAD,CAASP,SAAT,CAAoBoB,YAApB,CAXqB,CAAxB,CAaA,GAAMiB,CAAAA,IAAI,CAAG9C,OAAO,CAAC,UAAM,CACzB,GAAI,CAAC4B,OAAL,CAAc,MAAO,KAAP,CACd,MAAO3C,CAAAA,OAAO,CAACD,WAAW,EAAZ,CAAd,CACD,CAHmB,CAGjB,CAAC4C,OAAD,CAHiB,CAApB,CAKA,GAAMmB,CAAAA,SAAS,CAAGjD,WAAW,CAC3B,SAACkD,CAAD,CAAO,0BACL,GAAMd,CAAAA,SAAS,CAAG7D,WAAW,CAAC2E,CAAC,CAACC,UAAF,CAAaC,KAAd,CAA7B,CACA,GAAMC,CAAAA,QAAQ,CAAGH,CAAC,CAACC,UAAF,CAAaE,QAA9B,CACA,GAAMC,CAAAA,SAAS,CAAGxC,IAAI,CAACsB,SAAD,CAAtB,CACA,GAAMK,CAAAA,YAAY,CAAGa,SAAH,SAAGA,SAAH,uCAAGA,SAAS,CAAEf,SAAd,+CAAG,qBAAuBc,QAAvB,CAArB,CACA,GAAIE,CAAAA,CAAJ,CACA,GAAIF,QAAJ,CAAcE,CAAC,CAAG1C,iBAAiB,CAAC4B,YAAD,CAAe9B,SAAf,CAArB,CAAd,IACK4C,CAAAA,CAAC,CAAG1C,iBAAiB,CAACyC,SAAD,CAAY3C,SAAZ,CAArB,CACL,GAAM6C,CAAAA,KAAK,CAAGD,CAAC,GAAK,CAAN,CAAU,WAAV,CAAwBZ,QAAQ,CAACY,CAAD,CAA9C,CACA,MAAOC,CAAAA,KAAP,CACD,CAX0B,CAY3B,CAAC1C,IAAD,CAAO6B,QAAP,CAAiBhC,SAAjB,CAZ2B,CAA7B,CAeA,GAAM8C,CAAAA,WAAW,CAAGzD,WAAW,CAC7B,SAAC0D,KAAD,CAAW,CACT,MAAOjF,CAAAA,iBAAiB,CAACkC,SAAD,CAAjB,CAA6B6C,KAA7B,CAAqCE,KAA5C,CACD,CAH4B,CAI7B,CAAC/C,SAAD,CAJ6B,CAA/B,CAOA,GAAMgD,CAAAA,QAAQ,CAAGzD,OAAO,CAAC,UAAM,CAC7B,GAAI,CAAC4B,OAAL,CAAc,MAAO,KAAP,CACd,GAAM8B,CAAAA,YAAY,CAChB3C,OAAO,GAAK5C,SAAS,CAACiE,MAAtB,CACI/B,QAAQ,CAACsD,OAAT,CAAiB/B,OAAjB,CAA0BA,OAAO,CAACgC,OAAR,CAAgBC,MAA1C,EAAkDJ,QADtD,CAEInC,OAAO,CAACwC,OAAR,GAAoB5F,SAAS,CAAC6F,OAA9B,EAAyC/C,MAAM,GAAK5C,QAAQ,CAACsE,OAA7D,8BAEKrC,QAAQ,CAACsD,OAAT,CAAiB/B,OAAjB,CAA0BA,OAAO,CAACgC,OAAR,CAAgBC,MAA1C,EAAkDJ,QAFvD,qBAGKpD,QAAQ,CAACsD,OAAT,CAAiB/B,OAAjB,CAA0BA,OAAO,CAACgC,OAAR,CAAgBvB,SAA1C,EAAqDoB,QAH1D,GAKApD,QAAQ,CAACsD,OAAT,CAAiB/B,OAAjB,CAA0BA,OAAO,CAACgC,OAAR,CAAgBvB,SAA1C,EAAqDoB,QAR3D,CAUA;AACA,MAAOC,CAAAA,YAAY,CAACM,GAAb,CAAiB,SAACL,OAAD,CAAa,CACnC,GAAMR,CAAAA,QAAQ,CAAGQ,OAAO,CAACV,UAAR,CAAmBE,QAApC,CACA,GAAMc,CAAAA,KAAK,CAAGN,OAAO,CAACV,UAAR,CAAmBC,KAAjC,CACA,GAAMgB,CAAAA,GAAG,CAAGnC,MAAM,CAACoC,MAAP,CAAc,EAAd,CAAkBR,OAAlB,CAAZ,CACAO,GAAG,CAACE,EAAJ,WAAYtD,OAAZ,aAAuBmD,KAAvB,SAA+Bd,QAAQ,CAAG,IAAMA,QAAT,CAAoB,EAA3D,EACA,MAAOe,CAAAA,GAAP,CACD,CANM,CAAP,CAOD,CApBuB,CAoBrB,CAACtC,OAAD,CAAUd,OAAV,CAAmBC,OAAnB,CAA4BC,MAA5B,CAAoCM,OAApC,CApBqB,CAAxB,CAsBA,GAAM+C,CAAAA,aAAa,CAAGvE,WAAW,CAC/B,SAACwE,eAAD,CAAqB,CACnBA,eAAe,CAAC5E,MAAhB,CAAuB,OAAvB,EAAgC6E,IAAhC,CAAqC,SAACvB,CAAD,CAAO,CAC1C,GAAIhC,MAAM,GAAK5C,QAAQ,CAACoG,UAAxB,CAAoC,2BAClC,GAAMP,CAAAA,KAAK,CAAGjB,CAAC,CAACC,UAAF,CAAaC,KAA3B,CACA,GAAMhB,CAAAA,SAAS,CAAG7D,WAAW,CAAC4F,KAAD,CAA7B,CACA,GAAMd,CAAAA,QAAQ,CAAGH,CAAC,CAACC,UAAF,CAAaE,QAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAGxC,IAAI,CAACsB,SAAD,CAAtB,CACA,GAAMK,CAAAA,YAAY,CAAGa,SAAH,SAAGA,SAAH,wCAAGA,SAAS,CAAEf,SAAd,gDAAG,sBAAuBc,QAAvB,CAArB,CACA,GAAIE,CAAAA,CAAJ,CACA,GAAIF,QAAJ,CAAcE,CAAC,CAAG1C,iBAAiB,CAAC4B,YAAD,CAAe9B,SAAf,CAArB,CAAd,IACK4C,CAAAA,CAAC,CAAG1C,iBAAiB,CAACyC,SAAD,CAAY3C,SAAZ,CAArB,CACL,MACEhC,CAAAA,YAAY,CAAC,KAAO4E,CAAC,EAAIb,cAAc,EAAI,KAAtB,CAAR,CAAD,CAAZ,CACA,SADA,CAEA7D,WAAW,CAACwE,QAAQ,CAAGA,QAAH,CAAcc,KAAvB,CAHb,CAKD,CACF,CAjBD,EAkBD,CApB8B,CAqB/B,CAACjD,MAAD,CAASJ,IAAT,CAAeH,SAAf,CAA0B+B,cAA1B,CArB+B,CAAjC,CAwBA,GAAMiC,CAAAA,iBAAiB,CAAGxE,MAAM,CAAC,IAAD,CAAhC,CAEA;AACAF,SAAS,CAAC,UAAM,CACd,GAAM2E,CAAAA,GAAG,CAAGhF,MAAM,CAAC2B,MAAM,CAACsD,OAAR,CAAlB,CAEAD,GAAG,CAACE,IAAJ,CAAS,gBAAT,CAA2B,MAA3B,EAAmCC,EAAnC,CAAsC,OAAtC,CAA+C,UAAM,CACnDJ,iBAAiB,CAACE,OAAlB,CAA4B,IAA5B,CACAxD,oBAAoB,CAAC,CACnBe,SAAS,CAAEpB,OADQ,CAEnBgE,YAAY,CAAE,IAFK,CAAD,CAApB,CAID,CAND,EAOD,CAVQ,CAUN,CAAChE,OAAD,CAAUK,oBAAV,CAVM,CAAT,CAYA;AACApB,SAAS,CAAC,UAAM,CACd,GAAI,CAAC6B,OAAL,CAAc,OACd,GAAM8C,CAAAA,GAAG,CAAGhF,MAAM,CAAC2B,MAAM,CAACsD,OAAR,CAAlB,CACA,GAAMI,CAAAA,CAAC,CAAGnF,UAAU,GAAGoF,QAAb,CAAsBhH,sBAAtB,CAAV,CAEA,GAAMsG,CAAAA,eAAe,CAAGI,GAAG,CACxBhF,MADqB,CACd,UADc,EAErBuF,SAFqB,CAEX,MAFW,EAGrBrE,IAHqB,CAGhBI,MAAM,GAAK5C,QAAQ,CAACsE,OAApB,CAA8Be,QAA9B,CAAyC,EAHzB,CAG6B,SAACT,CAAD,QAAOA,CAAAA,CAAC,CAACoB,EAAT,EAH7B,EAIrBc,IAJqB,CAKpB,SAACC,KAAD,QACEA,CAAAA,KAAK,CACFC,MADH,CACU,MADV,EAEGR,IAFH,CAEQ,GAFR,CAEa9B,IAFb,EAGG8B,IAHH,CAGQ,cAHR,CAGwB,GAHxB,EAIGA,IAJH,CAIQ,gBAJR,CAI0B,CAJ1B,EAKGS,KALH,CAKS,QALT,CAKmB,SALnB,EAMGR,EANH,CAMM,YANN,CAMoB,SAAC7B,CAAD,CAAO,CACvB7B,oBAAoB,CAAC,CACnBe,SAAS,CAAE7D,WAAW,CAAC2E,CAAC,CAACC,UAAF,CAAaC,KAAd,CADH,CAEnB4B,YAAY,CAAE9B,CAAC,CAACC,UAAF,CAAaE,QAFR,CAAD,CAApB,CAID,CAXH,EAYGyB,IAZH,CAYQ,MAZR,CAYgB,OAZhB,EAaGA,IAbH,CAaQ,QAbR,CAakB,OAblB,EAcGU,IAdH,CAcQ,SAACH,KAAD,CAAW,CACfA,KAAK,CAACC,MAAN,CAAa,OAAb,EACD,CAhBH,CADF,EALoB,CAuBpB,SAACG,MAAD,QAAYA,CAAAA,MAAZ,EAvBoB,CAwBpB,SAACC,IAAD,QACEA,CAAAA,IAAI,CACD5F,UADH,CACcmF,CADd,EAEGH,IAFH,CAEQ,QAFR,CAEkB,OAFlB,EAGGA,IAHH,CAGQ,MAHR,CAGgB,OAHhB,EAIGa,MAJH,EADF,EAxBoB,EA+BrBb,IA/BqB,CA+BhB,gBA/BgB,CA+BE,KA/BF,EAgCrBC,EAhCqB,CAgClB,YAhCkB,CAgCJ,SAAC7B,CAAD,CAAO,CACvB,GAAIyB,iBAAiB,CAACE,OAAlB,GAA8B3B,CAAlC,CAAqCyB,iBAAiB,CAACE,OAAlB,CAA4B,IAA5B,CAArC,IACKF,CAAAA,iBAAiB,CAACE,OAAlB,CAA4B3B,CAA5B,CACN,CAnCqB,EAoCrB6B,EApCqB,CAoClB,OApCkB,CAoCT,SAAC7B,CAAD,CAAO,sBAClBrD,KAAK,CAAC+F,eAAN,GACA,GAAMxD,CAAAA,SAAS,CAAG7D,WAAW,CAAC2E,CAAC,CAACC,UAAF,CAAaC,KAAd,CAA7B,CACA,GACEuB,iBAAiB,CAACE,OAAlB,EACArD,OAAO,CAACwC,OAAR,GAAoB5F,SAAS,CAACyH,KAD9B,EAEA,oBAAC/E,IAAI,CAACsB,SAAD,CAAL,2CAAC,iBAAiBG,SAAlB,CAHF,CAKE,OACF;AACAqC,GAAG,CAACE,IAAJ,CAAS,gBAAT,CAA2B,MAA3B,EACAF,GAAG,CAAChF,MAAJ,CAAW,UAAX,EAAuBuF,SAAvB,CAAiC,MAAjC,EAAyCL,IAAzC,CAA8C,gBAA9C,CAAgE,MAAhE,EACA;AACArD,OAAO,CAACqE,IAAR,kBACY1D,SADZ,SACwB2D,MAAM,CAACC,UAAP,CAAoB,GAApB,CAA0B,cAA1B,CAA2C,EADnE,GAGD,CApDqB,EAqDrBR,IArDqB,CAqDhB,SAACS,GAAD,CAAS,CACbA,GAAG,CACAnG,UADH,CACcmF,CADd,EAEGH,IAFH,CAEQ,MAFR,CAEgB7B,SAFhB,EAGG6B,IAHH,CAGQ,QAHR,CAGkBrB,WAAW,CAACyC,IAAZ,CAAiB,KAAjB,CAAuB,EAAvB,CAHlB,EAID,CA1DqB,CAAxB,CA4DAH,MAAM,CAACI,mBAAP,CAA2B,UAAM,CAC/B5B,aAAa,CAACC,eAAD,CAAb,CACD,CAFD,EAGD,CApEQ,CAoEN,CACDtD,MADC,CAEDJ,IAFC,CAGD6C,QAHC,CAIDV,SAJC,CAKDnB,OALC,CAMDL,OANC,CAODD,OAAO,CAACwC,OAPP,CAQDhB,IARC,CASDuB,aATC,CAUDlD,oBAVC,CAWDoC,WAXC,CApEM,CAAT,CAkFA;AACAxD,SAAS,CAAC,UAAM,CACd,GAAI,CAAC0D,QAAL,CAAe,OAEf,GAAMiB,CAAAA,GAAG,CAAGhF,MAAM,CAAC2B,MAAM,CAACsD,OAAR,CAAlB,CACA,GAAMI,CAAAA,CAAC,CAAGnF,UAAU,GAAGoF,QAAb,CAAsBhH,sBAAtB,CAAV,CAEA,GAAIkI,CAAAA,WAAW,CAAG,EAAlB,CAEA,GAAIlF,MAAM,GAAK5C,QAAQ,CAACsE,OAAxB,CAAiC,CAC/BwD,WAAW,CAAGzC,QAAQ,CACnBO,GADW,CACP,SAACL,OAAD,CAAa,CAChB,GAAMzB,CAAAA,SAAS,CAAG7D,WAAW,CAACsF,OAAO,CAACV,UAAR,CAAmBC,KAApB,CAA7B,CACA,GAAM4B,CAAAA,YAAY,CAAGnB,OAAO,CAACV,UAAR,CAAmBE,QAAxC,CACA,GAAMC,CAAAA,SAAS,CAAGxC,IAAI,CAACsB,SAAD,CAAtB,CAEA,GAAInB,OAAO,GAAK5C,SAAS,CAACiE,MAA1B,CAAkC,CAChCuB,OAAO,CAACwC,KAAR,CAAgBxF,iBAAiB,CAACyC,SAAD,CAAY3C,SAAZ,CAAjC,CACD,CAFD,IAEO,IAAIM,OAAO,GAAK5C,SAAS,CAACiI,SAA1B,CAAqC,iDAC1C,GAAM7D,CAAAA,YAAY,CAAGa,SAAH,SAAGA,SAAH,wCAAGA,SAAS,CAAEf,SAAd,gDAAG,sBAAuByC,YAAvB,CAArB,CAEA,GAAIA,YAAJ,CACEnB,OAAO,CAACwC,KAAR,CAAgBxF,iBAAiB,CAAC4B,YAAD,CAAe9B,SAAf,CAAjC,CADF,IAGEkD,CAAAA,OAAO,CAACwC,KAAR,CAAgBxF,iBAAiB,CAC/ByC,SAD+B,SAC/BA,SAD+B,wCAC/BA,SAAS,CAAEf,SADoB,gDAC/B,sBAAuB7D,oBAAvB,CAD+B,CAE/BiC,SAF+B,CAAjC,CAIH,CAED,MAAOkD,CAAAA,OAAP,CACD,CArBW,EAsBX0C,IAtBW,CAsBN,SAACC,QAAD,CAAWC,QAAX,QAAwBA,CAAAA,QAAQ,CAACJ,KAAT,CAAiBI,QAAQ,CAACJ,KAAlD,EAtBM,CAAd,CAuBD,CAEDzB,GAAG,CACAhF,MADH,CACU,UADV,EAEGuF,SAFH,CAEa,QAFb,EAGGrE,IAHH,CAGQsF,WAHR,CAGqB,SAACvC,OAAD,QAAaA,CAAAA,OAAO,CAACS,EAArB,EAHrB,EAIGc,IAJH,CAKI,SAACC,KAAD,QACEA,CAAAA,KAAK,CACFC,MADH,CACU,QADV,EAEGR,IAFH,CAGI,WAHJ,CAII,SAACjB,OAAD,4BAA0Bb,IAAI,CAAC0D,QAAL,CAAc7C,OAAd,CAA1B,OAJJ,EAMGiB,IANH,CAMQ,cANR,CAMwB,IANxB,EAOGS,KAPH,CAOS,QAPT,CAOmB,SAPnB,EAQGT,IARH,CAQQ,gBARR,CAQ0B,KAR1B,CADF,EALJ,CAeI,SAACW,MAAD,QAAYA,CAAAA,MAAZ,EAfJ,CAgBI,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACF,IAAL,CAAU,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAAC5F,UAAL,CAAgBmF,CAAhB,EAAmBH,IAAnB,CAAwB,GAAxB,CAA6B,CAA7B,EAAgCa,MAAhC,EAAV,EAAV,CAAV,EAhBJ,EAkBGZ,EAlBH,CAkBM,YAlBN,CAkBoB,SAAClB,OAAD,CAAa,CAC7BxC,oBAAoB,CAAC,CACnBe,SAAS,CAAE7D,WAAW,CAACsF,OAAO,CAACV,UAAR,CAAmBC,KAApB,CADH,CAEnB4B,YAAY,CACV/D,OAAO,GAAK5C,SAAS,CAACiE,MAAtB,CACI,IADJ,CAEIuB,OAAO,CAACV,UAAR,CAAmBE,QAAnB,EAA+B3E,oBALlB,CAAD,CAApB,CAOD,CA1BH,EA2BGqG,EA3BH,CA2BM,YA3BN,CA2BoB,SAAClB,OAAD,CAAa,CAC7B,GAAIc,iBAAiB,CAACE,OAAlB,GAA8BhB,OAAlC,CACEc,iBAAiB,CAACE,OAAlB,CAA4B,IAA5B,CADF,IAEKF,CAAAA,iBAAiB,CAACE,OAAlB,CAA4BhB,OAA5B,CACN,CA/BH,EAgCGkB,EAhCH,CAgCM,OAhCN,CAgCe,SAAClB,OAAD,CAAa,CACxBhE,KAAK,CAAC+F,eAAN,GACA,GAAIjB,iBAAiB,CAACE,OAAlB,EAA6BrD,OAAO,CAACwC,OAAR,GAAoB5F,SAAS,CAACyH,KAA/D,CACE,OACFpE,OAAO,CAACqE,IAAR,kBACYvH,WAAW,CAACsF,OAAO,CAACV,UAAR,CAAmBC,KAApB,CADvB,SAEI2C,MAAM,CAACC,UAAP,CAAoB,GAApB,CAA0B,cAA1B,CAA2C,EAF/C,GAKD,CAzCH,EA0CGlG,UA1CH,CA0CcmF,CA1Cd,EA2CGH,IA3CH,CA2CQ,MA3CR,CA2CgBrG,iBAAiB,CAACkC,SAAD,CAAjB,CAA6B6C,KAA7B,CAAqC,IA3CrD,EA4CGsB,IA5CH,CA4CQ,QA5CR,CA4CkBrG,iBAAiB,CAACkC,SAAD,CAAjB,CAA6B6C,KAA7B,CAAqC,IA5CvD,EA6CGsB,IA7CH,CA6CQ,GA7CR,CA6Ca,SAACjB,OAAD,QAAalB,CAAAA,QAAQ,CAACkB,OAAO,CAACwC,KAAT,CAArB,EA7Cb,EA8CD,CAhFQ,CAgFN,CACD7E,OAAO,CAACwC,OADP,CAED9C,MAFC,CAGDD,OAHC,CAIDH,IAJC,CAKD6C,QALC,CAMDlC,OANC,CAODkB,QAPC,CAQDK,IARC,CASD3B,oBATC,CAUDV,SAVC,CAhFM,CAAT,CA6FA;AACAV,SAAS,CAAC,UAAM,CACd,GAAI,CAAC6B,OAAL,CAAc,OACd,GAAM8C,CAAAA,GAAG,CAAGhF,MAAM,CAAC2B,MAAM,CAACsD,OAAR,CAAlB,CACA,GAAMI,CAAAA,CAAC,CAAGnF,UAAU,GAAGoF,QAAb,CAAsBhH,sBAAtB,CAAV,CAEA,GAAIyI,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CAEA,GAAIpF,OAAO,CAACwC,OAAR,GAAoB5F,SAAS,CAAC6F,OAAlC,CAA2C,CACzC0C,UAAU,CAAG,CAACpG,QAAQ,CAACsG,IAAT,CAAc/E,OAAd,CAAuBA,OAAO,CAACgC,OAAR,CAAgBC,MAAvC,CAAD,CAAb,CACA4C,UAAU,CAAC,CAAD,CAAV,CAAcrC,EAAd,WAAsBtD,OAAtB,YACD,CAED,GACEQ,OAAO,CAACwC,OAAR,GAAoB5F,SAAS,CAACyH,KAA9B,EACC5E,OAAO,GAAK5C,SAAS,CAACiI,SAAtB,EAAmCpF,MAAM,GAAK5C,QAAQ,CAACoG,UAF1D,CAGE,CACA;AACAkC,aAAa,CAAG,CAACrG,QAAQ,CAACsG,IAAT,CAAc/E,OAAd,CAAuBA,OAAO,CAACgC,OAAR,CAAgBvB,SAAvC,CAAD,CAAhB,CACAqE,aAAa,CAAC,CAAD,CAAb,CAAiBtC,EAAjB,WAAyBtD,OAAzB,eACD,CAED4D,GAAG,CACAhF,MADH,CACU,gBADV,EAEGkF,IAFH,CAEQ,MAFR,CAEgB,MAFhB,EAGGA,IAHH,CAGQ,cAHR,CAGwB,GAHxB,EAIGK,SAJH,CAIa,MAJb,EAKGrE,IALH,CAKQ6F,UALR,CAKoB,SAACzD,CAAD,QAAOA,CAAAA,CAAC,CAACoB,EAAT,EALpB,EAMGc,IANH,CAOI,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAN,CAAa,MAAb,EAAqBR,IAArB,CAA0B,GAA1B,CAA+B9B,IAA/B,EAAqC8B,IAArC,CAA0C,QAA1C,CAAoD,OAApD,CAAX,EAPJ,CAQI,SAACW,MAAD,QAAYA,CAAAA,MAAZ,EARJ,CASI,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC5F,UAAL,CAAgBmF,CAAhB,EAAmBH,IAAnB,CAAwB,QAAxB,CAAkC,OAAlC,EAA2Ca,MAA3C,EAAV,EATJ,EAWG7F,UAXH,CAWcmF,CAXd,EAYGH,IAZH,CAYQ,QAZR,CAYkBrB,WAAW,CAACyC,IAAZ,CAAiB,KAAjB,CAAuB,IAAvB,CAZlB,EAcAtB,GAAG,CACAhF,MADH,CACU,mBADV,EAEGkF,IAFH,CAEQ,MAFR,CAEgB,MAFhB,EAGGA,IAHH,CAGQ,cAHR,CAGwB,GAHxB,EAIGK,SAJH,CAIa,MAJb,EAKGrE,IALH,CAKQ8F,aALR,CAKuB,SAAC1D,CAAD,QAAOA,CAAAA,CAAC,CAACoB,EAAT,EALvB,EAMGc,IANH,CAOI,SAACC,KAAD,QACEA,CAAAA,KAAK,CACFC,MADH,CACU,MADV,EAEGR,IAFH,CAEQ,GAFR,CAEa9B,IAFb,EAGG8B,IAHH,CAGQ,GAHR,CAGa9B,IAHb,EAIG8B,IAJH,CAIQ,QAJR,CAIkB,OAJlB,CADF,EAPJ,CAaI,SAACW,MAAD,QAAYA,CAAAA,MAAZ,EAbJ,CAcI,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAAC5F,UAAL,CAAgBmF,CAAhB,EAAmBH,IAAnB,CAAwB,QAAxB,CAAkC,OAAlC,EAA2Ca,MAA3C,EAAV,EAdJ,EAgBG7F,UAhBH,CAgBcmF,CAhBd,EAiBGH,IAjBH,CAiBQ,QAjBR,CAiBkBrB,WAAW,CAACyC,IAAZ,CAAiB,KAAjB,CAAuB,IAAvB,CAjBlB,EAkBD,CAtDQ,CAsDN,CACDpE,OADC,CAEDN,OAFC,CAGDR,OAHC,CAIDE,MAJC,CAKDD,OALC,CAMDN,SANC,CAODqC,IAPC,CAQDS,WARC,CAtDM,CAAT,CAiEA;AACAxD,SAAS,CAAC,UAAM,CACd,GAAMmC,CAAAA,SAAS,CAAGhB,iBAAiB,CAACgB,SAApC,CACA,GAAM0E,CAAAA,SAAS,CAAGtI,WAAW,CAAC4D,SAAD,CAA7B,CACA,GAAMiB,CAAAA,QAAQ,CAAGjC,iBAAiB,CAAC4D,YAAnC,CAEA,GAAMJ,CAAAA,GAAG,CAAGhF,MAAM,CAAC2B,MAAM,CAACsD,OAAR,CAAlB,CAEA,GAAI3D,MAAM,GAAK5C,QAAQ,CAACsE,OAAxB,CAAiC,CAC/BgC,GAAG,CACAhF,MADH,CACU,UADV,EAEGuF,SAFH,CAEa,QAFb,EAGGL,IAHH,CAGQ,cAHR,CAGwB,SAAC5B,CAAD,CAAO,mBAC3B,GAAM6D,CAAAA,WAAW,CACfD,SAAS,GAAK5D,CAAC,CAACC,UAAF,CAAaC,KAA3B,GACE,CAACC,QAAD,EAAajB,SAAS,GAAKpB,OAA5B,EACCqC,QAAQ,mBAAKH,CAAC,CAACC,UAAP,wCAAK,cAAcE,QAAnB,CADT,EAECpC,OAAO,GAAK5C,SAAS,CAACiE,MAFvB,EAGEe,QAAQ,GAAK3E,oBAAb,EAAqC,CAACwE,CAAC,CAACC,UAAF,CAAaE,QAJtD,CADF,CAMA,MAAO0D,CAAAA,WAAW,CAAG,CAAH,CAAO,IAAzB,CACD,CAXH,EAYD,CAbD,IAaO,CACLnC,GAAG,CACAhF,MADH,CACU,UADV,EAEGuF,SAFH,CAEa,MAFb,EAGG6B,IAHH,CAGQ,SAAU9D,CAAV,CAAa,oBACjB,GAAM6D,CAAAA,WAAW,CACfD,SAAS,GAAK5D,CAAC,CAACC,UAAF,CAAaC,KAA3B,GACE,CAACC,QAAD,EAAajB,SAAS,GAAKpB,OAA5B,EACCqC,QAAQ,oBAAKH,CAAC,CAACC,UAAP,yCAAK,eAAcE,QAAnB,CADT,EAECpC,OAAO,GAAK5C,SAAS,CAACiE,MAHxB,CADF,CAKA,GAAIyE,WAAJ,CAAiB,KAAKE,UAAL,CAAgBC,WAAhB,CAA4B,IAA5B,EACjBtH,MAAM,CAAC,IAAD,CAAN,CAAakF,IAAb,CAAkB,gBAAlB,CAAoCiC,WAAW,CAAG,CAAH,CAAO,CAAtD,EACD,CAXH,EAYD,CACF,CAlCQ,CAkCN,CACDjF,OADC,CAEDhB,IAFC,CAGDE,OAHC,CAIDC,OAJC,CAKDC,MALC,CAMDE,iBAAiB,CAACgB,SANjB,CAODhB,iBAAiB,CAAC4D,YAPjB,CAQDrE,SARC,CAlCM,CAAT,CA6CA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BACE,EAAE,CAAC,OADL,CAEE,OAAO,eAASH,KAAT,aAAkBC,MAAlB,CAFT,CAGE,mBAAmB,CAAC,eAHtB,CAIE,GAAG,CAAEc,MAJP,eAME,yBAAG,SAAS,CAAC,SAAb,EANF,cAOE,yBAAG,SAAS,CAAC,eAAb,EAPF,cAQE,yBAAG,SAAS,CAAC,kBAAb,EARF,cASE,yBAAG,SAAS,CAAC,SAAb,EATF,CADF,CAYGC,OAAO,CAACwC,OAAR,GAAoB5F,SAAS,CAACyH,KAA9B,EACC,CAAC,CAAChF,iBAAiB,gBACjBC,IAAI,CAACE,OAAD,CADa,+DACjB,cAAeuB,SADE,gDACjB,sBAA2B7D,oBAA3B,CADiB,CAEjBiC,SAFiB,CADpB,eAKG,2BAAK,SAAS,CAAE5B,UAAU,CAAC,YAAD,cAAqB4B,SAArB,EAA1B,eACE,oBAAC,SAAD,MADF,cAEE,gCACGC,CAAC,CAAC,oDAAD,CADJ,CAFF,CAjBN,CADF,CA2BG+B,QAAQ,eAAI,oBAAC,SAAD,CAAe,CAAC7B,IAAI,CAAJA,IAAD,CAAOI,MAAM,CAANA,MAAP,CAAeyB,QAAQ,CAARA,QAAf,CAAyBhC,SAAS,CAATA,SAAzB,CAAf,CA3Bf,cA6BE,2BAAK,KAAK,CAAE,CAACwG,QAAQ,CAAE,UAAX,CAAuB1G,MAAM,CAAE,CAA/B,CAAZ,eACE,6CACE,8BAAQ,EAAE,CAAC,eAAX,CAA2B,yBAAyB,CAAC,MAArD,eACE,qCACE,IAAI,CAAC,QADP,CAEE,MAAM,CAAC,qMAFT,EADF,CADF,CADF,CA7BF,CADF,CA6CD,CAED,cAAeM,CAAAA,aAAf","sourcesContent":["import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {\n  formatNumber,\n  getStatistic,\n  toTitleCase,\n} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\n// eslint-disable-next-line\n// import worker from 'workerize-loader!../workers/mapVisualizer';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n} from 'd3-scale-chromatic';\nimport {select, event} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = (statistic) => {\n  switch (statistic) {\n    case 'confirmed':\n      return (t) => interpolateReds(t * 0.85);\n    case 'active':\n      return (t) => interpolateBlues(t * 0.85);\n    case 'recovered':\n      return (t) => interpolateGreens(t * 0.85);\n    case 'deceased':\n      return (t) => interpolateGreys(t * 0.85);\n    case 'tested':\n      return (t) => interpolatePurples(t * 0.85);\n    default:\n      return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nconst getTotalStatistic = (data, statistic) => {\n  return getStatistic(data, 'total', statistic);\n};\n\nfunction MapVisualizer({\n  mapCode,\n  mapView,\n  mapViz,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await json(file);\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    return mapView === MAP_VIEWS.STATES\n      ? max(stateCodes, (stateCode) =>\n          getTotalStatistic(data[stateCode], statistic)\n        )\n      : max(stateCodes, (stateCode) =>\n          data[stateCode]?.districts\n            ? max(Object.values(data[stateCode].districts), (districtData) =>\n                getTotalStatistic(districtData, statistic)\n              )\n            : 0\n        );\n  }, [data, mapView, statistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(data[mapCode], statistic);\n  }, [data, mapCode, statistic]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return scaleSequential(\n        [0, Math.max(1, statisticMax)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  const fillColor = useCallback(\n    (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      let n;\n      if (district) n = getTotalStatistic(districtData, statistic);\n      else n = getTotalStatistic(stateData, statistic);\n      const color = n === 0 ? '#ffffff00' : mapScale(n);\n      return color;\n    },\n    [data, mapScale, statistic]\n  );\n\n  const strokeColor = useCallback(\n    (alpha) => {\n      return STATISTIC_CONFIGS[statistic].color + alpha;\n    },\n    [statistic]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap =\n      mapView === MAP_VIEWS.STATES\n        ? topojson.feature(geoData, geoData.objects.states).features\n        : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\n        ? [\n            ...topojson.feature(geoData, geoData.objects.states).features,\n            ...topojson.feature(geoData, geoData.objects.districts).features,\n          ]\n        : topojson.feature(geoData, geoData.objects.districts).features;\n\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, mapView, mapViz, mapMeta]);\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz === MAP_VIZS.CHOROPLETH) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getTotalStatistic(districtData, statistic);\n          else n = getTotalStatistic(stateData, statistic);\n          return (\n            formatNumber(100 * (n / (statisticTotal || 0.001))) +\n            '% from ' +\n            toTitleCase(district ? district : state)\n          );\n        }\n      });\n    },\n    [mapViz, data, statistic, statisticTotal]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (d) => {\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('touchstart', (d) => {\n        if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = d;\n      })\n      .on('click', (d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    populateTexts,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  // Bubble\n  useEffect(() => {\n    if (!features) return;\n\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (mapView === MAP_VIEWS.STATES) {\n            feature.value = getTotalStatistic(stateData, statistic);\n          } else if (mapView === MAP_VIEWS.DISTRICTS) {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName)\n              feature.value = getTotalStatistic(districtData, statistic);\n            else\n              feature.value = getTotalStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\n                statistic\n              );\n          }\n\n          return feature;\n        })\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (feature) => feature.id)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all'),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (feature) => {\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName:\n            mapView === MAP_VIEWS.STATES\n              ? null\n              : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('touchstart', (feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n      })\n      .on('click', (feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .transition(T)\n      .attr('fill', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('stroke', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('r', (feature) => mapScale(feature.value));\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    mapView,\n    data,\n    features,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    statistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [topojson.mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (mapView === MAP_VIEWS.DISTRICTS && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [topojson.mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    mapView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              mapView === MAP_VIEWS.STATES ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              mapView === MAP_VIEWS.STATES);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    mapView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getTotalStatistic(\n            data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY],\n            statistic\n          ) && (\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\n              <AlertIcon />\n              <span>\n                {t('District-wise data not available in state bulletin')}\n              </span>\n            </div>\n          )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, mapViz, mapScale, statistic}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default MapVisualizer;\n"]},"metadata":{},"sourceType":"module"}