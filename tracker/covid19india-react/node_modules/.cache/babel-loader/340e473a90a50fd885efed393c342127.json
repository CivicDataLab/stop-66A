{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapSwitcher.js\";\nimport { PRIMARY_STATISTICS, STATISTIC_CONFIGS } from '../constants';\nimport classnames from 'classnames';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated, config } from 'react-spring';\nimport { useMeasure } from 'react-use';\n\nconst MapSwitcher = ({\n  mapStatistic,\n  setMapStatistic\n}) => {\n  const [mapSwitcher, {\n    width\n  }] = useMeasure();\n  const [clicked, setClicked] = useState(false);\n  const [count, setCount] = useState(0);\n  const [spring, set] = useSpring(() => ({\n    opacity: 0,\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n    transform: `translateX(${width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25}px)`,\n    config: config.gentle\n  }));\n  useEffect(() => {\n    if (width > 0) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        set({\n          transform: `translateX(${width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25}px)`,\n          opacity: 1,\n          background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n          delay: count === 0 ? 1500 : 0,\n          onStart: setClicked.bind(this, true),\n          onRest: setClicked.bind(this, false)\n        });\n      });\n    }\n  }, [count, mapStatistic, set, width]);\n  const handleClick = useCallback(statistic => {\n    setCount(prevCount => prevCount + 1);\n    setMapStatistic(statistic);\n  }, [setMapStatistic]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MapSwitcher\",\n    ref: mapSwitcher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"highlight\",\n    style: spring,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), PRIMARY_STATISTICS.map((statistic, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: classnames('clickable', {\n      [`is-${statistic}`]: !clicked\n    }),\n    onClick: handleClick.bind(this, statistic),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default React.memo(MapSwitcher, isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapSwitcher.js"],"names":["PRIMARY_STATISTICS","STATISTIC_CONFIGS","classnames","React","useState","useCallback","useEffect","ReactDOM","useSpring","animated","config","useMeasure","MapSwitcher","mapStatistic","setMapStatistic","mapSwitcher","width","clicked","setClicked","count","setCount","spring","set","opacity","background","color","transform","indexOf","gentle","unstable_batchedUpdates","delay","onStart","bind","onRest","handleClick","statistic","prevCount","map","index","isEqual","prevProps","currProps","memo"],"mappings":"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","sourcesContent":["import {PRIMARY_STATISTICS, STATISTIC_CONFIGS} from '../constants';\n\nimport classnames from 'classnames';\nimport React, {useState, useCallback, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {useMeasure} from 'react-use';\n\nconst MapSwitcher = ({mapStatistic, setMapStatistic}) => {\n  const [mapSwitcher, {width}] = useMeasure();\n  const [clicked, setClicked] = useState(false);\n  const [count, setCount] = useState(0);\n  const [spring, set] = useSpring(() => ({\n    opacity: 0,\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n    transform: `translateX(${\n      width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\n    }px)`,\n    config: config.gentle,\n  }));\n\n  useEffect(() => {\n    if (width > 0) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        set({\n          transform: `translateX(${\n            width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\n          }px)`,\n          opacity: 1,\n          background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n          delay: count === 0 ? 1500 : 0,\n          onStart: setClicked.bind(this, true),\n          onRest: setClicked.bind(this, false),\n        });\n      });\n    }\n  }, [count, mapStatistic, set, width]);\n\n  const handleClick = useCallback(\n    (statistic) => {\n      setCount((prevCount) => prevCount + 1);\n      setMapStatistic(statistic);\n    },\n    [setMapStatistic]\n  );\n\n  return (\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\n      <animated.div className=\"highlight\" style={spring}></animated.div>\n\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div\n          key={index}\n          className={classnames('clickable', {[`is-${statistic}`]: !clicked})}\n          onClick={handleClick.bind(this, statistic)}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(MapSwitcher, isEqual);\n"]},"metadata":{},"sourceType":"module"}