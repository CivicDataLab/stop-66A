{"ast":null,"code":"import{MINIGRAPH_LOOKBACK_DAYS,PRIMARY_STATISTICS,STATISTIC_CONFIGS}from'../constants';import{getStatistic,getIndiaYesterdayISO,parseIndiaDate}from'../utils/commonFunctions';import classnames from'classnames';import{max}from'd3-array';import{interpolatePath}from'd3-interpolate-path';import{scaleTime,scaleLinear}from'd3-scale';import{select}from'd3-selection';import{line,curveMonotoneX}from'd3-shape';// eslint-disable-next-line\nimport{transition}from'd3-transition';import{formatISO,subDays}from'date-fns';import equal from'fast-deep-equal';import React,{useEffect,useRef,useMemo}from'react';// Dimensions\nvar width=100,height=75;var margin={top:10,right:10,bottom:2,left:5};function Minigraphs(_ref){var timeseries=_ref.timeseries,timelineDate=_ref.date;var refs=useRef([]);var dates=useMemo(function(){var cutOffDateUpper=timelineDate||getIndiaYesterdayISO();var pastDates=Object.keys(timeseries||{}).filter(function(date){return date<=cutOffDateUpper;});var lastDate=pastDates[pastDates.length-1];var cutOffDateLower=formatISO(subDays(parseIndiaDate(lastDate),MINIGRAPH_LOOKBACK_DAYS),{representation:'date'});return pastDates.filter(function(date){return date>=cutOffDateLower;});},[timeseries,timelineDate]);useEffect(function(){var T=dates.length;var chartRight=width-margin.right;var chartBottom=height-margin.bottom;var xScale=scaleTime().clamp(true).domain(T?[parseIndiaDate(dates[0]),parseIndiaDate(dates[T-1])]:[]).range([margin.left,chartRight]);refs.current.forEach(function(ref,index){var svg=select(ref);var statistic=PRIMARY_STATISTICS[index];var color=STATISTIC_CONFIGS[statistic].color;var dailyMaxAbs=max(dates,function(date){return Math.abs(getStatistic(timeseries[date],'delta',statistic));});var yScale=scaleLinear().clamp(true).domain([-dailyMaxAbs,dailyMaxAbs]).range([chartBottom,margin.top]);var linePath=line().curve(curveMonotoneX).x(function(date){return xScale(parseIndiaDate(date));}).y(function(date){return yScale(getStatistic(timeseries[date],'delta',statistic));});var pathLength;svg.selectAll('path').data(T?[dates]:[]).join(function(enter){return enter.append('path').attr('fill','none').attr('stroke',color+'99').attr('stroke-width',2.5).attr('d',linePath).attr('stroke-dasharray',function(){return pathLength=this.getTotalLength();}).call(function(enter){return enter.attr('stroke-dashoffset',pathLength).transition().delay(100).duration(2500).attr('stroke-dashoffset',0);});},function(update){return update.attr('stroke-dasharray',null).transition().duration(500).attrTween('d',function(date){var previous=select(this).attr('d');var current=linePath(date);return interpolatePath(previous,current);});});svg.selectAll('circle').data(T?[dates[T-1]]:[]).join(function(enter){return enter.append('circle').attr('fill',color).attr('r',2.5).attr('cx',function(date){return xScale(parseIndiaDate(date));}).attr('cy',function(date){return yScale(getStatistic(timeseries[date],'delta',statistic));}).style('opacity',0).call(function(enter){return enter.transition().delay(2100).duration(500).style('opacity',1).attr('cx',function(date){return xScale(parseIndiaDate(date));}).attr('cy',function(date){return yScale(getStatistic(timeseries[date],'delta',statistic));});});},function(update){return update.transition().duration(500).attr('cx',function(date){return xScale(parseIndiaDate(date));}).attr('cy',function(date){return yScale(getStatistic(timeseries[date],'delta',statistic));});});});},[dates,timeseries]);return/*#__PURE__*/React.createElement(\"div\",{className:\"Minigraph\"},PRIMARY_STATISTICS.map(function(statistic,index){return/*#__PURE__*/React.createElement(\"div\",{key:statistic,className:classnames('svg-parent')},/*#__PURE__*/React.createElement(\"svg\",{ref:function ref(el){refs.current[index]=el;},width:width,height:height,viewBox:\"0 0 \".concat(width,\" \").concat(height),preserveAspectRatio:\"xMidYMid meet\"}));}));}var isEqual=function isEqual(prevProps,currProps){if(currProps.forceRender){return false;}else if(!currProps.timeseries&&prevProps.timeseries){return true;}else if(currProps.timeseries&&!prevProps.timeseries){return false;}else if(!equal(currProps.stateCode,prevProps.stateCode)){return false;}else if(!equal(currProps.date,prevProps.date)){return false;}return true;};export default React.memo(Minigraphs,isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Minigraphs.js"],"names":["MINIGRAPH_LOOKBACK_DAYS","PRIMARY_STATISTICS","STATISTIC_CONFIGS","getStatistic","getIndiaYesterdayISO","parseIndiaDate","classnames","max","interpolatePath","scaleTime","scaleLinear","select","line","curveMonotoneX","transition","formatISO","subDays","equal","React","useEffect","useRef","useMemo","width","height","margin","top","right","bottom","left","Minigraphs","timeseries","timelineDate","date","refs","dates","cutOffDateUpper","pastDates","Object","keys","filter","lastDate","length","cutOffDateLower","representation","T","chartRight","chartBottom","xScale","clamp","domain","range","current","forEach","ref","index","svg","statistic","color","dailyMaxAbs","Math","abs","yScale","linePath","curve","x","y","pathLength","selectAll","data","join","enter","append","attr","getTotalLength","call","delay","duration","update","attrTween","previous","style","map","el","isEqual","prevProps","currProps","forceRender","stateCode","memo"],"mappings":"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","sourcesContent":["import {\n  MINIGRAPH_LOOKBACK_DAYS,\n  PRIMARY_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {line, curveMonotoneX} from 'd3-shape';\n// eslint-disable-next-line\nimport {transition} from 'd3-transition';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef, useMemo} from 'react';\n\n// Dimensions\nconst [width, height] = [100, 75];\nconst margin = {top: 10, right: 10, bottom: 2, left: 5};\n\nfunction Minigraphs({timeseries, date: timelineDate}) {\n  const refs = useRef([]);\n\n  const dates = useMemo(() => {\n    const cutOffDateUpper = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= cutOffDateUpper\n    );\n    const lastDate = pastDates[pastDates.length - 1];\n\n    const cutOffDateLower = formatISO(\n      subDays(parseIndiaDate(lastDate), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDateLower);\n  }, [timeseries, timelineDate]);\n\n  useEffect(() => {\n    const T = dates.length;\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const xScale = scaleTime()\n      .clamp(true)\n      .domain(T ? [parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])] : [])\n      .range([margin.left, chartRight]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = select(ref);\n      const statistic = PRIMARY_STATISTICS[index];\n      const color = STATISTIC_CONFIGS[statistic].color;\n\n      const dailyMaxAbs = max(dates, (date) =>\n        Math.abs(getStatistic(timeseries[date], 'delta', statistic))\n      );\n\n      const yScale = scaleLinear()\n        .clamp(true)\n        .domain([-dailyMaxAbs, dailyMaxAbs])\n        .range([chartBottom, margin.top]);\n\n      const linePath = line()\n        .curve(curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) =>\n          yScale(getStatistic(timeseries[date], 'delta', statistic))\n        );\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', linePath)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = select(this).attr('d');\n                const current = linePath(date);\n                return interpolatePath(previous, current);\n              })\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getStatistic(timeseries[date], 'delta', statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n        );\n    });\n  }, [dates, timeseries]);\n\n  return (\n    <div className=\"Minigraph\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div key={statistic} className={classnames('svg-parent')}>\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            width={width}\n            height={height}\n            viewBox={`0 0 ${width} ${height}`}\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Minigraphs, isEqual);\n"]},"metadata":{},"sourceType":"module"}