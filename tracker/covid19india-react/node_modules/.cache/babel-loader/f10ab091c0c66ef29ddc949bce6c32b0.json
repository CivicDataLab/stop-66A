{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/LanguageSwitcher.js\";\nimport { ENTER_IN, ENTER_OUT } from '../animations';\nimport locales from '../i18n/locales.json';\nimport classnames from 'classnames';\nimport React, { useRef, useCallback } from 'react';\nimport { ArrowUp } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport { useTransition, animated } from 'react-spring';\nimport { useClickAway } from 'react-use';\n\nfunction LanguageSwitcher({\n  showLanguageSwitcher,\n  setShowLanguageSwitcher\n}) {\n  var _i18n$options;\n\n  const {\n    i18n\n  } = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n === null || i18n === void 0 ? void 0 : i18n.language) ? i18n === null || i18n === void 0 ? void 0 : i18n.language : i18n === null || i18n === void 0 ? void 0 : (_i18n$options = i18n.options) === null || _i18n$options === void 0 ? void 0 : _i18n$options.fallbackLng[0];\n  const transitions = useTransition(showLanguageSwitcher, null, {\n    from: ENTER_OUT,\n    enter: ENTER_IN,\n    leave: ENTER_OUT,\n    config: {\n      mass: 1,\n      tension: 100,\n      friction: 15\n    }\n  });\n  const languageSwitcherRef = useRef();\n  useClickAway(languageSwitcherRef, () => {\n    setShowLanguageSwitcher(false);\n  });\n  const switchLanguage = useCallback(languageKey => {\n    if (i18n) i18n.changeLanguage(languageKey);\n  }, [i18n]);\n  return transitions.map(({\n    item,\n    key,\n    props\n  }) => item ? /*#__PURE__*/React.createElement(animated.div, {\n    key: key,\n    className: \"LanguageSwitcher\",\n    style: props,\n    ref: languageSwitcherRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"We speak the following languages\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"languages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, Object.keys(locales).map(languageKey => /*#__PURE__*/React.createElement(\"div\", {\n    key: languageKey,\n    className: classnames('language', {\n      'is-highlighted': currentLanguage === languageKey\n    }),\n    onClick: switchLanguage.bind(this, languageKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, locales[languageKey])))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-button\",\n    onClick: setShowLanguageSwitcher.bind(this, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowUp, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))) : /*#__PURE__*/React.createElement(animated.div, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default React.memo(LanguageSwitcher);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/LanguageSwitcher.js"],"names":["ENTER_IN","ENTER_OUT","locales","classnames","React","useRef","useCallback","ArrowUp","useTranslation","useTransition","animated","useClickAway","LanguageSwitcher","showLanguageSwitcher","setShowLanguageSwitcher","i18n","currentLanguage","Object","keys","includes","language","options","fallbackLng","transitions","from","enter","leave","config","mass","tension","friction","languageSwitcherRef","switchLanguage","languageKey","changeLanguage","map","item","key","props","bind","memo"],"mappings":"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","sourcesContent":["import {ENTER_IN, ENTER_OUT} from '../animations';\nimport locales from '../i18n/locales.json';\n\nimport classnames from 'classnames';\nimport React, {useRef, useCallback} from 'react';\nimport {ArrowUp} from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useTransition, animated} from 'react-spring';\nimport {useClickAway} from 'react-use';\n\nfunction LanguageSwitcher({showLanguageSwitcher, setShowLanguageSwitcher}) {\n  const {i18n} = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n?.language)\n    ? i18n?.language\n    : i18n?.options?.fallbackLng[0];\n\n  const transitions = useTransition(showLanguageSwitcher, null, {\n    from: ENTER_OUT,\n    enter: ENTER_IN,\n    leave: ENTER_OUT,\n    config: {\n      mass: 1,\n      tension: 100,\n      friction: 15,\n    },\n  });\n\n  const languageSwitcherRef = useRef();\n  useClickAway(languageSwitcherRef, () => {\n    setShowLanguageSwitcher(false);\n  });\n\n  const switchLanguage = useCallback(\n    (languageKey) => {\n      if (i18n) i18n.changeLanguage(languageKey);\n    },\n    [i18n]\n  );\n\n  return transitions.map(({item, key, props}) =>\n    item ? (\n      <animated.div\n        key={key}\n        className=\"LanguageSwitcher\"\n        style={props}\n        ref={languageSwitcherRef}\n      >\n        <h3>We speak the following languages</h3>\n\n        <div className=\"languages\">\n          {Object.keys(locales).map((languageKey) => (\n            <div\n              key={languageKey}\n              className={classnames('language', {\n                'is-highlighted': currentLanguage === languageKey,\n              })}\n              onClick={switchLanguage.bind(this, languageKey)}\n            >\n              <span>{locales[languageKey]}</span>\n            </div>\n          ))}\n        </div>\n\n        <div\n          className=\"close-button\"\n          onClick={setShowLanguageSwitcher.bind(this, false)}\n        >\n          <ArrowUp width={16} />\n        </div>\n      </animated.div>\n    ) : (\n      <animated.div key={key}></animated.div>\n    )\n  );\n}\n\nexport default React.memo(LanguageSwitcher);\n"]},"metadata":{},"sourceType":"module"}