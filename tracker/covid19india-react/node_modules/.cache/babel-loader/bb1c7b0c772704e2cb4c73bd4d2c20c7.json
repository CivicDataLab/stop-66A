{"ast":null,"code":"import _slicedToArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import ActionsPanel from'./ActionsPanel';import{fetcher}from'../utils/commonFunctions';import React,{useState,useEffect,lazy,Suspense}from'react';import{useLocalStorage}from'react-use';import useSWR from'swr';var Updates=lazy(function(){return import('./Updates');});var Actions=function Actions(_ref){var setDate=_ref.setDate,dates=_ref.dates;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showUpdates=_useState2[0],setShowUpdates=_useState2[1];var _useLocalStorage=useLocalStorage('newUpdate',false),_useLocalStorage2=_slicedToArray(_useLocalStorage,2),newUpdate=_useLocalStorage2[0],setNewUpdate=_useLocalStorage2[1];var _useLocalStorage3=useLocalStorage('lastViewedLog',0),_useLocalStorage4=_slicedToArray(_useLocalStorage3,2),lastViewedLog=_useLocalStorage4[0],setLastViewedLog=_useLocalStorage4[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTimelineMode=_useState4[0],setIsTimelineMode=_useState4[1];var _useSWR=useSWR('https://api.covid19india.org/updatelog/log.json',fetcher,{revalidateOnFocus:true}),updates=_useSWR.data;useEffect(function(){if(updates!==undefined){var lastTimestamp=updates.slice().reverse()[0].timestamp*1000;if(lastTimestamp!==lastViewedLog){setNewUpdate(true);setLastViewedLog(lastTimestamp);}}},[lastViewedLog,updates,setLastViewedLog,setNewUpdate]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ActionsPanel,{lastViewedLog:lastViewedLog,newUpdate:newUpdate,isTimelineMode:isTimelineMode,setIsTimelineMode:setIsTimelineMode,showUpdates:showUpdates,setDate:setDate,dates:dates,setNewUpdate:setNewUpdate,setShowUpdates:setShowUpdates}),showUpdates&&/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",null)},/*#__PURE__*/React.createElement(Updates,{updates:updates})));};var isEqual=function isEqual(prevProps,currProps){return true;};export default React.memo(Actions,isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Actions.js"],"names":["ActionsPanel","fetcher","React","useState","useEffect","lazy","Suspense","useLocalStorage","useSWR","Updates","Actions","setDate","dates","showUpdates","setShowUpdates","newUpdate","setNewUpdate","lastViewedLog","setLastViewedLog","isTimelineMode","setIsTimelineMode","revalidateOnFocus","updates","data","undefined","lastTimestamp","slice","reverse","timestamp","isEqual","prevProps","currProps","memo"],"mappings":"2KAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAAQC,OAAR,KAAsB,0BAAtB,CAEA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,IAApC,CAA0CC,QAA1C,KAAyD,OAAzD,CACA,OAAQC,eAAR,KAA8B,WAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,KAAnB,CAEA,GAAMC,CAAAA,OAAO,CAAGJ,IAAI,CAAC,iBAAM,QAAO,WAAP,CAAN,EAAD,CAApB,CAEA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAsB,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,KAAW,MAAXA,KAAW,eACET,QAAQ,CAAC,KAAD,CADV,wCAC7BU,WAD6B,eAChBC,cADgB,oCAEFP,eAAe,CAAC,WAAD,CAAc,KAAd,CAFb,sDAE7BQ,SAF6B,sBAElBC,YAFkB,4CAGMT,eAAe,CAAC,eAAD,CAAkB,CAAlB,CAHrB,uDAG7BU,aAH6B,sBAGdC,gBAHc,qCAIQf,QAAQ,CAAC,KAAD,CAJhB,yCAI7BgB,cAJ6B,eAIbC,iBAJa,2BAMZZ,MAAM,CAC5B,iDAD4B,CAE5BP,OAF4B,CAG5B,CACEoB,iBAAiB,CAAE,IADrB,CAH4B,CANM,CAMvBC,OANuB,SAM7BC,IAN6B,CAcpCnB,SAAS,CAAC,UAAM,CACd,GAAIkB,OAAO,GAAKE,SAAhB,CAA2B,CACzB,GAAMC,CAAAA,aAAa,CAAGH,OAAO,CAACI,KAAR,GAAgBC,OAAhB,GAA0B,CAA1B,EAA6BC,SAA7B,CAAyC,IAA/D,CACA,GAAIH,aAAa,GAAKR,aAAtB,CAAqC,CACnCD,YAAY,CAAC,IAAD,CAAZ,CACAE,gBAAgB,CAACO,aAAD,CAAhB,CACD,CACF,CACF,CARQ,CAQN,CAACR,aAAD,CAAgBK,OAAhB,CAAyBJ,gBAAzB,CAA2CF,YAA3C,CARM,CAAT,CAUA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,YAAD,CACM,CACFC,aAAa,CAAbA,aADE,CAEFF,SAAS,CAATA,SAFE,CAGFI,cAAc,CAAdA,cAHE,CAIFC,iBAAiB,CAAjBA,iBAJE,CAKFP,WAAW,CAAXA,WALE,CAMFF,OAAO,CAAPA,OANE,CAOFC,KAAK,CAALA,KAPE,CAQFI,YAAY,CAAZA,YARE,CASFF,cAAc,CAAdA,cATE,CADN,CADF,CAeGD,WAAW,eACV,oBAAC,QAAD,EAAU,QAAQ,cAAE,+BAApB,eACE,oBAAC,OAAD,CAAa,CAACS,OAAO,CAAPA,OAAD,CAAb,CADF,CAhBJ,CADF,CAuBD,CA/CD,CAiDA,GAAMO,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACxC,MAAO,KAAP,CACD,CAFD,CAIA,cAAe7B,CAAAA,KAAK,CAAC8B,IAAN,CAAWtB,OAAX,CAAoBmB,OAApB,CAAf","sourcesContent":["import ActionsPanel from './ActionsPanel';\n\nimport {fetcher} from '../utils/commonFunctions';\n\nimport React, {useState, useEffect, lazy, Suspense} from 'react';\nimport {useLocalStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst Updates = lazy(() => import('./Updates'));\n\nconst Actions = ({setDate, dates}) => {\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', 0);\n  const [isTimelineMode, setIsTimelineMode] = useState(false);\n\n  const {data: updates} = useSWR(\n    'https://api.covid19india.org/updatelog/log.json',\n    fetcher,\n    {\n      revalidateOnFocus: true,\n    }\n  );\n\n  useEffect(() => {\n    if (updates !== undefined) {\n      const lastTimestamp = updates.slice().reverse()[0].timestamp * 1000;\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }\n  }, [lastViewedLog, updates, setLastViewedLog, setNewUpdate]);\n\n  return (\n    <React.Fragment>\n      <ActionsPanel\n        {...{\n          lastViewedLog,\n          newUpdate,\n          isTimelineMode,\n          setIsTimelineMode,\n          showUpdates,\n          setDate,\n          dates,\n          setNewUpdate,\n          setShowUpdates,\n        }}\n      />\n\n      {showUpdates && (\n        <Suspense fallback={<div />}>\n          <Updates {...{updates}} />\n        </Suspense>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  return true;\n};\n\nexport default React.memo(Actions, isEqual);\n"]},"metadata":{},"sourceType":"module"}