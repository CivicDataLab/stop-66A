{"ast":null,"code":"import{PRIMARY_STATISTICS,STATISTIC_CONFIGS,SPRING_CONFIG_NUMBERS}from'../constants';import{capitalize,formatNumber,getStatistic}from'../utils/commonFunctions';import{HeartFillIcon}from'@primer/octicons-v2-react';import classnames from'classnames';import equal from'fast-deep-equal';import React,{useMemo}from'react';import{useTranslation}from'react-i18next';import{animated,useSpring}from'react-spring';function PureLevelItem(_ref){var statistic=_ref.statistic,total=_ref.total,delta=_ref.delta;var _useTranslation=useTranslation(),t=_useTranslation.t;var spring=useSpring({total:total,delta:delta,config:SPRING_CONFIG_NUMBERS});var statisticConfig=STATISTIC_CONFIGS[statistic];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h5\",null,t(capitalize(statisticConfig.displayName))),/*#__PURE__*/React.createElement(animated.h4,null,statistic!=='active'?delta>0?spring.delta.interpolate(function(delta){return\"+\".concat(formatNumber(delta,statisticConfig.format,statistic));}):/*#__PURE__*/React.createElement(HeartFillIcon,{size:9,verticalAlign:2}):\"\\xA0\"),/*#__PURE__*/React.createElement(animated.h1,null,spring.total.interpolate(function(total){return formatNumber(total,statisticConfig.format,statistic);})));}var LevelItem=React.memo(PureLevelItem);function Level(_ref2){var data=_ref2.data;var trail=useMemo(function(){var styles=[];PRIMARY_STATISTICS.map(function(statistic,index){styles.push({animationDelay:\"\".concat(750+index*250,\"ms\")});return null;});return styles;},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"Level\"},PRIMARY_STATISTICS.map(function(statistic,index){return/*#__PURE__*/React.createElement(animated.div,{key:index,className:classnames('level-item',\"is-\".concat(statistic),'fadeInUp'),style:trail[index]},/*#__PURE__*/React.createElement(LevelItem,Object.assign({statistic:statistic},{total:getStatistic(data,'total',statistic),delta:getStatistic(data,'delta',statistic)})));}));}var isEqual=function isEqual(prevProps,currProps){if(!equal(getStatistic(prevProps.data,'total','active'),getStatistic(currProps.data,'total','active'))){return false;}return true;};export default React.memo(Level,isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Level.js"],"names":["PRIMARY_STATISTICS","STATISTIC_CONFIGS","SPRING_CONFIG_NUMBERS","capitalize","formatNumber","getStatistic","HeartFillIcon","classnames","equal","React","useMemo","useTranslation","animated","useSpring","PureLevelItem","statistic","total","delta","t","spring","config","statisticConfig","displayName","interpolate","format","LevelItem","memo","Level","data","trail","styles","map","index","push","animationDelay","isEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import {\n  PRIMARY_STATISTICS,\n  STATISTIC_CONFIGS,\n  SPRING_CONFIG_NUMBERS,\n} from '../constants';\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {HeartFillIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React, {useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction PureLevelItem({statistic, total, delta}) {\n  const {t} = useTranslation();\n  const spring = useSpring({\n    total: total,\n    delta: delta,\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  return (\n    <React.Fragment>\n      <h5>{t(capitalize(statisticConfig.displayName))}</h5>\n      <animated.h4>\n        {statistic !== 'active' ? (\n          delta > 0 ? (\n            spring.delta.interpolate(\n              (delta) =>\n                `+${formatNumber(delta, statisticConfig.format, statistic)}`\n            )\n          ) : (\n            <HeartFillIcon size={9} verticalAlign={2} />\n          )\n        ) : (\n          '\\u00A0'\n        )}\n      </animated.h4>\n      <animated.h1>\n        {spring.total.interpolate((total) =>\n          formatNumber(total, statisticConfig.format, statistic)\n        )}\n      </animated.h1>\n    </React.Fragment>\n  );\n}\n\nconst LevelItem = React.memo(PureLevelItem);\n\nfunction Level({data}) {\n  const trail = useMemo(() => {\n    const styles = [];\n\n    PRIMARY_STATISTICS.map((statistic, index) => {\n      styles.push({\n        animationDelay: `${750 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  return (\n    <div className=\"Level\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <animated.div\n          key={index}\n          className={classnames('level-item', `is-${statistic}`, 'fadeInUp')}\n          style={trail[index]}\n        >\n          <LevelItem\n            {...{statistic}}\n            total={getStatistic(data, 'total', statistic)}\n            delta={getStatistic(data, 'delta', statistic)}\n          />\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      getStatistic(prevProps.data, 'total', 'active'),\n      getStatistic(currProps.data, 'total', 'active')\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Level, isEqual);\n"]},"metadata":{},"sourceType":"module"}