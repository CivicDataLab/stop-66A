{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/HeaderCell.js\";\nimport Tooltip from './Tooltip';\nimport { STATISTIC_CONFIGS } from '../constants';\nimport { toTitleCase } from '../utils/commonFunctions';\nimport { FilterIcon, InfoIcon } from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLongPress } from 'react-use';\n\nfunction StateHeaderCell({\n  handleSort,\n  sortData,\n  setSortData,\n  statistic\n}) {\n  const {\n    t\n  } = useTranslation();\n\n  const onLongPress = () => {\n    if (sortData.sortColumn === statistic) {\n      setSortData(produce(sortData, sortDataDraft => {\n        sortDataDraft.delta = !sortData.delta;\n      }));\n    }\n  };\n\n  const longPressEvent = useLongPress(onLongPress, {\n    isPreventDefault: false\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"cell heading\",\n    onClick: handleSort.bind(this, statistic)\n  }, longPressEvent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), sortData.sortColumn === statistic && /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames('sort-icon', {\n      invert: sortData.isAscending,\n      [`is-${statistic}`]: sortData.delta\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FilterIcon, {\n    size: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, t(toTitleCase(STATISTIC_CONFIGS[statistic].displayName))), statistic === 'other' && /*#__PURE__*/React.createElement(Tooltip, {\n    data: 'Migrated cases or non-COVID deaths',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })));\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default React.memo(StateHeaderCell, isStateHeaderCellEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/HeaderCell.js"],"names":["Tooltip","STATISTIC_CONFIGS","toTitleCase","FilterIcon","InfoIcon","classnames","equal","produce","React","useTranslation","useLongPress","StateHeaderCell","handleSort","sortData","setSortData","statistic","t","onLongPress","sortColumn","sortDataDraft","delta","longPressEvent","isPreventDefault","bind","invert","isAscending","displayName","isStateHeaderCellEqual","prevProps","currProps","memo"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,SAAQC,iBAAR,QAAgC,cAAhC;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AAEA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,2BAAnC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,YAAR,QAA2B,WAA3B;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA;AAApC,CAAzB,EAAyE;AACvE,QAAM;AAACC,IAAAA;AAAD,MAAMP,cAAc,EAA1B;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIJ,QAAQ,CAACK,UAAT,KAAwBH,SAA5B,EAAuC;AACrCD,MAAAA,WAAW,CACTP,OAAO,CAACM,QAAD,EAAYM,aAAD,IAAmB;AACnCA,QAAAA,aAAa,CAACC,KAAd,GAAsB,CAACP,QAAQ,CAACO,KAAhC;AACD,OAFM,CADE,CAAX;AAKD;AACF,GARD;;AASA,QAAMC,cAAc,GAAGX,YAAY,CAACO,WAAD,EAAc;AAACK,IAAAA,gBAAgB,EAAE;AAAnB,GAAd,CAAnC;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,OAAO,EAAEV,UAAU,CAACW,IAAX,CAAgB,IAAhB,EAAsBR,SAAtB;AAFX,KAGMM,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGR,QAAQ,CAACK,UAAT,KAAwBH,SAAxB,iBACC;AACE,IAAA,SAAS,EAAEV,UAAU,CAAC,WAAD,EAAc;AACjCmB,MAAAA,MAAM,EAAEX,QAAQ,CAACY,WADgB;AAEjC,OAAE,MAAKV,SAAU,EAAjB,GAAqBF,QAAQ,CAACO;AAFG,KAAd,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CANJ,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,CAAC,CAACd,WAAW,CAACD,iBAAiB,CAACc,SAAD,CAAjB,CAA6BW,WAA9B,CAAZ,CAAP,CAfF,EAgBGX,SAAS,KAAK,OAAd,iBACC,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBJ,CADF;AAwBD;;AAED,MAAMY,sBAAsB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACvD,MAAI,CAACvB,KAAK,CAACsB,SAAS,CAACf,QAAX,EAAqBgB,SAAS,CAAChB,QAA/B,CAAV,EAAoD;AAClD,WAAO,KAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CAND;;AAQA,eAAeL,KAAK,CAACsB,IAAN,CAAWnB,eAAX,EAA4BgB,sBAA5B,CAAf","sourcesContent":["import Tooltip from './Tooltip';\n\nimport {STATISTIC_CONFIGS} from '../constants';\nimport {toTitleCase} from '../utils/commonFunctions';\n\nimport {FilterIcon, InfoIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLongPress} from 'react-use';\n\nfunction StateHeaderCell({handleSort, sortData, setSortData, statistic}) {\n  const {t} = useTranslation();\n\n  const onLongPress = () => {\n    if (sortData.sortColumn === statistic) {\n      setSortData(\n        produce(sortData, (sortDataDraft) => {\n          sortDataDraft.delta = !sortData.delta;\n        })\n      );\n    }\n  };\n  const longPressEvent = useLongPress(onLongPress, {isPreventDefault: false});\n\n  return (\n    <div\n      className=\"cell heading\"\n      onClick={handleSort.bind(this, statistic)}\n      {...longPressEvent}\n    >\n      {sortData.sortColumn === statistic && (\n        <div\n          className={classnames('sort-icon', {\n            invert: sortData.isAscending,\n            [`is-${statistic}`]: sortData.delta,\n          })}\n        >\n          <FilterIcon size={10} />\n        </div>\n      )}\n      <div>{t(toTitleCase(STATISTIC_CONFIGS[statistic].displayName))}</div>\n      {statistic === 'other' && (\n        <Tooltip data={'Migrated cases or non-COVID deaths'}>\n          <InfoIcon size={14} />\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default React.memo(StateHeaderCell, isStateHeaderCellEqual);\n"]},"metadata":{},"sourceType":"module"}