{"ast":null,"code":"import _slicedToArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Cell from'./Cell';import DistrictRow from'./DistrictRow';import HeaderCell from'./HeaderCell';import Tooltip from'./Tooltip';import{STATE_NAMES,STATISTIC_CONFIGS,TABLE_STATISTICS,TABLE_STATISTICS_EXPANDED,UNKNOWN_DISTRICT_KEY}from'../constants';import{capitalize,formatLastUpdated,getTableStatistic}from'../utils/commonFunctions';import{AlertIcon,ClockIcon,FilterIcon,FoldUpIcon,GraphIcon,InfoIcon}from'@primer/octicons-v2-react';import classnames from'classnames';import equal from'fast-deep-equal';import produce from'immer';import React,{useState,useCallback,useRef}from'react';import{useTranslation}from'react-i18next';import{useHistory}from'react-router-dom';import{useSessionStorage}from'react-use';function Row(_ref){var _data$meta,_data$meta2,_this=this;var data=_ref.data,stateCode=_ref.stateCode,districtName=_ref.districtName,isPerMillion=_ref.isPerMillion,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,expandTable=_ref.expandTable,lastUpdatedTT=_ref.lastUpdatedTT;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showDistricts=_useState2[0],setShowDistricts=_useState2[1];var _useSessionStorage=useSessionStorage('districtSortData',{sortColumn:'confirmed',isAscending:false,delta:false}),_useSessionStorage2=_slicedToArray(_useSessionStorage,2),sortData=_useSessionStorage2[0],setSortData=_useSessionStorage2[1];var history=useHistory();var _useTranslation=useTranslation(),t=_useTranslation.t;var rowElement=useRef();var handleSortClick=useCallback(function(statistic){setSortData(produce(sortData,function(draftSortData){draftSortData.isAscending=!sortData.isAscending;draftSortData.sortColumn=statistic;}));},[sortData,setSortData]);var sortingFunction=useCallback(function(districtNameA,districtNameB){if(sortData.sortColumn!=='districtName'){var statisticConfig=STATISTIC_CONFIGS[sortData.sortColumn];var dataType=sortData.delta&&!statisticConfig.hideDelta?'delta':'total';var statisticA=getTableStatistic(data.districts[districtNameA],sortData.sortColumn,isPerMillion,lastUpdatedTT)[dataType];var statisticB=getTableStatistic(data.districts[districtNameB],sortData.sortColumn,isPerMillion,lastUpdatedTT)[dataType];return sortData.isAscending?statisticA-statisticB:statisticB-statisticA;}else{return sortData.isAscending?districtNameA.localeCompare(districtNameB):districtNameB.localeCompare(districtNameA);}},[sortData,data,isPerMillion,lastUpdatedTT]);var highlightState=useCallback(function(){if(stateCode){if(regionHighlighted.stateCode!==stateCode){setRegionHighlighted(produce(regionHighlighted,function(draftRegionHighlighted){draftRegionHighlighted.stateCode=stateCode;draftRegionHighlighted.districtName=null;}));}}else if(districtName){if(regionHighlighted.districtName!==districtName||regionHighlighted.stateCode!==data.stateCode){setRegionHighlighted(produce(regionHighlighted,function(draftRegionHighlighted){draftRegionHighlighted.stateCode=data.stateCode;draftRegionHighlighted.districtName=districtName;}));}}},[data.stateCode,districtName,regionHighlighted,setRegionHighlighted,stateCode]);var _setShowDistrict=useCallback(function(){if(data.districts){setShowDistricts(!showDistricts);}},[showDistricts,data]);var districtNameStr=t(districtName);if(districtName===UNKNOWN_DISTRICT_KEY){districtNameStr=\"\".concat(t(UNKNOWN_DISTRICT_KEY),\" [\").concat(t(STATE_NAMES[data.stateCode]),\"]\");}var handleStatePageClick=useCallback(function(stateCode){history.push(\"state/\".concat(stateCode));},[history]);var handleCollapse=useCallback(function(){setShowDistricts(false);rowElement.current.scrollIntoView({block:'start'});// eslint-disable-next-line\nvar faux=stateCode;},[stateCode]);var tableStatistics=expandTable?TABLE_STATISTICS_EXPANDED:TABLE_STATISTICS;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classnames('row',{'is-total':stateCode==='TT'},{'is-highlighted':stateCode&&(regionHighlighted===null||regionHighlighted===void 0?void 0:regionHighlighted.stateCode)===stateCode||districtName&&(regionHighlighted===null||regionHighlighted===void 0?void 0:regionHighlighted.districtName)===districtName&&(regionHighlighted===null||regionHighlighted===void 0?void 0:regionHighlighted.stateCode)===data.stateCode}),onMouseEnter:highlightState,onClick:_setShowDistrict,ref:rowElement},/*#__PURE__*/React.createElement(\"div\",{className:\"cell\"},/*#__PURE__*/React.createElement(\"div\",{className:\"state-name fadeInUp\"},t(STATE_NAMES[stateCode])||districtNameStr),(data===null||data===void 0?void 0:(_data$meta=data.meta)===null||_data$meta===void 0?void 0:_data$meta.notes)&&/*#__PURE__*/React.createElement(Tooltip,{data:data.meta.notes},/*#__PURE__*/React.createElement(InfoIcon,{size:16}))),tableStatistics.map(function(statistic){return/*#__PURE__*/React.createElement(Cell,Object.assign({key:statistic},{data:data,statistic:statistic,isPerMillion:isPerMillion,lastUpdatedTT:lastUpdatedTT}));})),showDistricts&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"state-meta\"},/*#__PURE__*/React.createElement(\"div\",{className:\"state-meta-top\"},(data===null||data===void 0?void 0:(_data$meta2=data.meta)===null||_data$meta2===void 0?void 0:_data$meta2['last_updated'])&&/*#__PURE__*/React.createElement(\"p\",{className:\"last-updated\"},/*#__PURE__*/React.createElement(ClockIcon,null),capitalize(\"\".concat(formatLastUpdated(data.meta.last_updated),\" \").concat(t('ago')))),/*#__PURE__*/React.createElement(\"div\",{className:\"state-page\",onClick:handleStatePageClick.bind(this,stateCode)},/*#__PURE__*/React.createElement(GraphIcon,null),/*#__PURE__*/React.createElement(\"span\",null,t('See more details on {{state}}',{state:stateCode})))),data.districts&&UNKNOWN_DISTRICT_KEY in data.districts&&/*#__PURE__*/React.createElement(\"div\",{className:\"state-meta-bottom\"},/*#__PURE__*/React.createElement(\"div\",{className:classnames('disclaimer')},/*#__PURE__*/React.createElement(AlertIcon,null),/*#__PURE__*/React.createElement(\"span\",null,t('District-wise data not available in state bulletin'))))),/*#__PURE__*/React.createElement(\"div\",{className:classnames('row','heading')},/*#__PURE__*/React.createElement(\"div\",{className:\"cell heading\",onClick:handleSortClick.bind(this,'districtName')},/*#__PURE__*/React.createElement(\"div\",{className:\"district-name\"},t('District')),sortData.sortColumn==='districtName'&&/*#__PURE__*/React.createElement(\"div\",{className:classnames('sort-icon',{invert:!sortData.isAscending})},/*#__PURE__*/React.createElement(FilterIcon,{size:10}))),tableStatistics.map(function(statistic){return/*#__PURE__*/React.createElement(HeaderCell,Object.assign({key:statistic},{statistic:statistic,sortData:sortData,setSortData:setSortData},{handleSort:handleSortClick.bind(_this,statistic)}));}))),showDistricts&&Object.keys(data.districts||{}).sort(function(a,b){return sortingFunction(a,b);}).map(function(districtName){return/*#__PURE__*/React.createElement(DistrictRow,Object.assign({data:data.districts[districtName],key:districtName},{districtName:districtName,regionHighlighted:regionHighlighted,setRegionHighlighted:setRegionHighlighted,stateCode:stateCode,isPerMillion:isPerMillion,expandTable:expandTable,lastUpdatedTT:lastUpdatedTT}));}),showDistricts&&/*#__PURE__*/React.createElement(\"div\",{className:\"spacer-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"spacer\"},/*#__PURE__*/React.createElement(\"p\",null,\"End of \".concat(t(STATE_NAMES[stateCode]),\"'s districts\")),/*#__PURE__*/React.createElement(\"div\",{className:\"fold\",onClick:handleCollapse},/*#__PURE__*/React.createElement(FoldUpIcon,null)))));}var isEqual=function isEqual(prevProps,currProps){var _prevProps$data,_currProps$data,_prevProps$data2,_currProps$data2;if(!equal((_prevProps$data=prevProps.data)===null||_prevProps$data===void 0?void 0:_prevProps$data.total,(_currProps$data=currProps.data)===null||_currProps$data===void 0?void 0:_currProps$data.total)){return false;}else if(!equal((_prevProps$data2=prevProps.data)===null||_prevProps$data2===void 0?void 0:_prevProps$data2.delta,(_currProps$data2=currProps.data)===null||_currProps$data2===void 0?void 0:_currProps$data2.delta)){return false;}else if(!equal(prevProps.isPerMillion,currProps.isPerMillion)){return false;}else if(!equal(prevProps.regionHighlighted.stateCode,currProps.regionHighlighted.stateCode)&&equal(prevProps.regionHighlighted.stateCode,prevProps.stateCode)||equal(currProps.regionHighlighted.stateCode,currProps.stateCode)){return false;}else if(!equal(prevProps.regionHighlighted.districtName,currProps.regionHighlighted.districtName)&&equal(prevProps.regionHighlighted.districtName,prevProps.districtName)||equal(currProps.regionHighlighted.districtName,currProps.districtName)){return false;}else if(!equal(prevProps.expandTable,currProps.expandTable)){return false;}else return true;};export default React.memo(Row,isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Row.js"],"names":["Cell","DistrictRow","HeaderCell","Tooltip","STATE_NAMES","STATISTIC_CONFIGS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","UNKNOWN_DISTRICT_KEY","capitalize","formatLastUpdated","getTableStatistic","AlertIcon","ClockIcon","FilterIcon","FoldUpIcon","GraphIcon","InfoIcon","classnames","equal","produce","React","useState","useCallback","useRef","useTranslation","useHistory","useSessionStorage","Row","data","stateCode","districtName","isPerMillion","regionHighlighted","setRegionHighlighted","expandTable","lastUpdatedTT","showDistricts","setShowDistricts","sortColumn","isAscending","delta","sortData","setSortData","history","t","rowElement","handleSortClick","statistic","draftSortData","sortingFunction","districtNameA","districtNameB","statisticConfig","dataType","hideDelta","statisticA","districts","statisticB","localeCompare","highlightState","draftRegionHighlighted","_setShowDistrict","districtNameStr","handleStatePageClick","push","handleCollapse","current","scrollIntoView","block","faux","tableStatistics","meta","notes","map","last_updated","bind","state","invert","Object","keys","sort","a","b","isEqual","prevProps","currProps","total","memo"],"mappings":"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","sourcesContent":["import Cell from './Cell';\nimport DistrictRow from './DistrictRow';\nimport HeaderCell from './HeaderCell';\nimport Tooltip from './Tooltip';\n\nimport {\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  TABLE_STATISTICS,\n  TABLE_STATISTICS_EXPANDED,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {\n  capitalize,\n  formatLastUpdated,\n  getTableStatistic,\n} from '../utils/commonFunctions';\n\nimport {\n  AlertIcon,\n  ClockIcon,\n  FilterIcon,\n  FoldUpIcon,\n  GraphIcon,\n  InfoIcon,\n} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useState, useCallback, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\n\nfunction Row({\n  data,\n  stateCode,\n  districtName,\n  isPerMillion,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  lastUpdatedTT,\n}) {\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useSessionStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const rowElement = useRef();\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (districtNameA, districtNameB) => {\n      if (sortData.sortColumn !== 'districtName') {\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n        const dataType =\n          sortData.delta && !statisticConfig.hideDelta ? 'delta' : 'total';\n\n        const statisticA = getTableStatistic(\n          data.districts[districtNameA],\n          sortData.sortColumn,\n          isPerMillion,\n          lastUpdatedTT\n        )[dataType];\n        const statisticB = getTableStatistic(\n          data.districts[districtNameB],\n          sortData.sortColumn,\n          isPerMillion,\n          lastUpdatedTT\n        )[dataType];\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? districtNameA.localeCompare(districtNameB)\n          : districtNameB.localeCompare(districtNameA);\n      }\n    },\n    [sortData, data, isPerMillion, lastUpdatedTT]\n  );\n\n  const highlightState = useCallback(() => {\n    if (stateCode) {\n      if (regionHighlighted.stateCode !== stateCode) {\n        setRegionHighlighted(\n          produce(regionHighlighted, (draftRegionHighlighted) => {\n            draftRegionHighlighted.stateCode = stateCode;\n            draftRegionHighlighted.districtName = null;\n          })\n        );\n      }\n    } else if (districtName) {\n      if (\n        regionHighlighted.districtName !== districtName ||\n        regionHighlighted.stateCode !== data.stateCode\n      ) {\n        setRegionHighlighted(\n          produce(regionHighlighted, (draftRegionHighlighted) => {\n            draftRegionHighlighted.stateCode = data.stateCode;\n            draftRegionHighlighted.districtName = districtName;\n          })\n        );\n      }\n    }\n  }, [\n    data.stateCode,\n    districtName,\n    regionHighlighted,\n    setRegionHighlighted,\n    stateCode,\n  ]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  let districtNameStr = t(districtName);\n  if (districtName === UNKNOWN_DISTRICT_KEY) {\n    districtNameStr = `${t(UNKNOWN_DISTRICT_KEY)} [${t(\n      STATE_NAMES[data.stateCode]\n    )}]`;\n  }\n\n  const handleStatePageClick = useCallback(\n    (stateCode) => {\n      history.push(`state/${stateCode}`);\n    },\n    [history]\n  );\n\n  const handleCollapse = useCallback(() => {\n    setShowDistricts(false);\n    rowElement.current.scrollIntoView({\n      block: 'start',\n    });\n\n    // eslint-disable-next-line\n    const faux = stateCode;\n  }, [stateCode]);\n\n  const tableStatistics = expandTable\n    ? TABLE_STATISTICS_EXPANDED\n    : TABLE_STATISTICS;\n\n  return (\n    <React.Fragment>\n      <div\n        className={classnames(\n          'row',\n          {'is-total': stateCode === 'TT'},\n          {\n            'is-highlighted':\n              (stateCode && regionHighlighted?.stateCode === stateCode) ||\n              (districtName &&\n                regionHighlighted?.districtName === districtName &&\n                regionHighlighted?.stateCode === data.stateCode),\n          }\n        )}\n        onMouseEnter={highlightState}\n        onClick={_setShowDistrict}\n        ref={rowElement}\n      >\n        <div className=\"cell\">\n          <div className=\"state-name fadeInUp\">\n            {t(STATE_NAMES[stateCode]) || districtNameStr}\n          </div>\n          {data?.meta?.notes && (\n            <Tooltip {...{data: data.meta.notes}}>\n              <InfoIcon size={16} />\n            </Tooltip>\n          )}\n        </div>\n\n        {tableStatistics.map((statistic) => (\n          <Cell\n            key={statistic}\n            {...{data, statistic, isPerMillion, lastUpdatedTT}}\n          />\n        ))}\n      </div>\n\n      {showDistricts && (\n        <React.Fragment>\n          <div className=\"state-meta\">\n            <div className=\"state-meta-top\">\n              {data?.meta?.['last_updated'] && (\n                <p className=\"last-updated\">\n                  <ClockIcon />\n                  {capitalize(\n                    `${formatLastUpdated(data.meta.last_updated)} ${t('ago')}`\n                  )}\n                </p>\n              )}\n              <div\n                className=\"state-page\"\n                onClick={handleStatePageClick.bind(this, stateCode)}\n              >\n                <GraphIcon />\n                <span>\n                  {t('See more details on {{state}}', {\n                    state: stateCode,\n                  })}\n                </span>\n              </div>\n            </div>\n\n            {data.districts && UNKNOWN_DISTRICT_KEY in data.districts && (\n              <div className=\"state-meta-bottom\">\n                <div className={classnames('disclaimer')}>\n                  <AlertIcon />\n                  <span>\n                    {t('District-wise data not available in state bulletin')}\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className={classnames('row', 'heading')}>\n            <div\n              className=\"cell heading\"\n              onClick={handleSortClick.bind(this, 'districtName')}\n            >\n              <div className=\"district-name\">{t('District')}</div>\n              {sortData.sortColumn === 'districtName' && (\n                <div\n                  className={classnames('sort-icon', {\n                    invert: !sortData.isAscending,\n                  })}\n                >\n                  <FilterIcon size={10} />\n                </div>\n              )}\n            </div>\n\n            {tableStatistics.map((statistic) => (\n              <HeaderCell\n                key={statistic}\n                {...{statistic, sortData, setSortData}}\n                handleSort={handleSortClick.bind(this, statistic)}\n              />\n            ))}\n          </div>\n        </React.Fragment>\n      )}\n\n      {showDistricts &&\n        Object.keys(data.districts || {})\n          .sort((a, b) => sortingFunction(a, b))\n          .map((districtName) => (\n            <DistrictRow\n              data={data.districts[districtName]}\n              key={districtName}\n              {...{\n                districtName,\n                regionHighlighted,\n                setRegionHighlighted,\n                stateCode,\n                isPerMillion,\n                expandTable,\n                lastUpdatedTT,\n              }}\n            />\n          ))}\n\n      {showDistricts && (\n        <div className=\"spacer-row\">\n          <div className=\"spacer\">\n            <p>{`End of ${t(STATE_NAMES[stateCode])}'s districts`}</p>\n            <div className=\"fold\" onClick={handleCollapse}>\n              <FoldUpIcon />\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (!equal(prevProps.isPerMillion, currProps.isPerMillion)) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    ) &&\n      equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode)) ||\n    equal(currProps.regionHighlighted.stateCode, currProps.stateCode)\n  ) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n      equal(\n        prevProps.regionHighlighted.districtName,\n        prevProps.districtName\n      )) ||\n    equal(currProps.regionHighlighted.districtName, currProps.districtName)\n  ) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Row, isEqual);\n"]},"metadata":{},"sourceType":"module"}