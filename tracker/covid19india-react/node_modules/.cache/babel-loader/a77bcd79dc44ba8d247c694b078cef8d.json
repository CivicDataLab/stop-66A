{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/index.js\";\n// import './wdyr';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\nimport React, { Suspense, lazy } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nconst App = lazy(() => import('./App'));\nconst rootElement = document.getElementById('root');\n\nconst main = () => render( /*#__PURE__*/React.createElement(Suspense, {\n  fallback: /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}))), rootElement);\n\nconst browserSupportsAllFeatures = () => {\n  return window.requestIdleCallback && window.IntersectionObserver;\n};\n\nconst loadScript = (src, done) => {\n  const js = document.createElement('script');\n  js.src = src;\n\n  js.onload = function () {\n    done();\n  };\n\n  js.onerror = function () {\n    done(new Error('Failed to load script ' + src));\n  };\n\n  document.head.appendChild(js);\n};\n\nif (browserSupportsAllFeatures()) {\n  main();\n} else {\n  loadScript('https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver', main);\n}\n\nserviceWorker.register();","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/index.js"],"names":["serviceWorker","React","Suspense","lazy","render","BrowserRouter","Router","App","rootElement","document","getElementById","main","browserSupportsAllFeatures","window","requestIdleCallback","IntersectionObserver","loadScript","src","done","js","createElement","onload","onerror","Error","head","appendChild","register"],"mappings":";AAAA;AACA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AACA,OAAO,QAAP;AAEA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,IAAzB,QAAoC,OAApC;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AAEA,MAAMC,GAAG,GAAGJ,IAAI,CAAC,MAAM,OAAO,OAAP,CAAP,CAAhB;AACA,MAAMK,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;;AAEA,MAAMC,IAAI,GAAG,MACXP,MAAM,eACJ,oBAAC,QAAD;AAAU,EAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADI,EAMJI,WANI,CADR;;AAUA,MAAMI,0BAA0B,GAAG,MAAM;AACvC,SAAOC,MAAM,CAACC,mBAAP,IAA8BD,MAAM,CAACE,oBAA5C;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChC,QAAMC,EAAE,GAAGV,QAAQ,CAACW,aAAT,CAAuB,QAAvB,CAAX;AACAD,EAAAA,EAAE,CAACF,GAAH,GAASA,GAAT;;AACAE,EAAAA,EAAE,CAACE,MAAH,GAAY,YAAY;AACtBH,IAAAA,IAAI;AACL,GAFD;;AAGAC,EAAAA,EAAE,CAACG,OAAH,GAAa,YAAY;AACvBJ,IAAAA,IAAI,CAAC,IAAIK,KAAJ,CAAU,2BAA2BN,GAArC,CAAD,CAAJ;AACD,GAFD;;AAGAR,EAAAA,QAAQ,CAACe,IAAT,CAAcC,WAAd,CAA0BN,EAA1B;AACD,CAVD;;AAYA,IAAIP,0BAA0B,EAA9B,EAAkC;AAChCD,EAAAA,IAAI;AACL,CAFD,MAEO;AACLK,EAAAA,UAAU,CACR,2GADQ,EAERL,IAFQ,CAAV;AAID;;AAEDX,aAAa,CAAC0B,QAAd","sourcesContent":["// import './wdyr';\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\nimport React, {Suspense, lazy} from 'react';\nimport {render} from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nconst App = lazy(() => import('./App'));\nconst rootElement = document.getElementById('root');\n\nconst main = () =>\n  render(\n    <Suspense fallback={<div />}>\n      <Router>\n        <App />\n      </Router>\n    </Suspense>,\n    rootElement\n  );\n\nconst browserSupportsAllFeatures = () => {\n  return window.requestIdleCallback && window.IntersectionObserver;\n};\n\nconst loadScript = (src, done) => {\n  const js = document.createElement('script');\n  js.src = src;\n  js.onload = function () {\n    done();\n  };\n  js.onerror = function () {\n    done(new Error('Failed to load script ' + src));\n  };\n  document.head.appendChild(js);\n};\n\nif (browserSupportsAllFeatures()) {\n  main();\n} else {\n  loadScript(\n    'https://polyfill.io/v3/polyfill.min.js?version=3.52.1&features=requestIdleCallback%2CIntersectionObserver',\n    main\n  );\n}\n\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}