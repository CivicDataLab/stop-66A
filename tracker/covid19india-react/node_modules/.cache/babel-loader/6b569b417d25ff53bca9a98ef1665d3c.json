{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/DeltaBarGraph.js\";\nimport { STATISTIC_CONFIGS, D3_TRANSITION_DURATION } from '../constants';\nimport { formatDate, formatNumber, getIndiaYesterdayISO, getStatistic } from '../utils/commonFunctions';\nimport { min, max } from 'd3-array';\nimport { axisBottom } from 'd3-axis';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { select } from 'd3-selection'; // eslint-disable-next-line\n\nimport { transition } from 'd3-transition';\nimport equal from 'fast-deep-equal';\nimport React, { useEffect, useRef } from 'react';\nimport { useMeasure } from 'react-use';\n\nconst getDeltaStatistic = (data, statistic) => {\n  return getStatistic(data, 'delta', statistic);\n};\n\nconst margin = {\n  top: 50,\n  right: 0,\n  bottom: 50,\n  left: 0\n};\n\nfunction DeltaBarGraph({\n  timeseries,\n  statistic,\n  lookback\n}) {\n  const svgRef = useRef();\n  const [wrapperRef, {\n    width,\n    height\n  }] = useMeasure();\n  const pastDates = Object.keys(timeseries || {}).filter(date => date <= getIndiaYesterdayISO());\n  const dates = pastDates.slice(-lookback);\n  useEffect(() => {\n    if (!width) return;\n    const svg = select(svgRef.current);\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const r = 5; // const formatTime = timeFormat('%e %b');\n\n    const xScale = scaleBand().domain(dates).range([margin.left, chartRight]).paddingInner(width / 1000);\n    const yScale = scaleLinear().domain([Math.min(0, min(dates, date => getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic))), Math.max(1, max(dates, date => getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic)))]).range([chartBottom, margin.top]);\n    const xAxis = axisBottom(xScale).tickSize(0).tickFormat(date => formatDate(date, 'dd MMM'));\n    const t = svg.transition().duration(D3_TRANSITION_DURATION);\n    svg.select('.x-axis').transition(t).style('transform', `translateY(${yScale(0)}px)`).call(xAxis).on('start', () => svg.select('.domain').remove()).selectAll('text').attr('y', 0).attr('dy', (date, i) => getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic) < 0 ? '-1em' : '1.5em').style('text-anchor', 'middle').attr('fill', STATISTIC_CONFIGS[statistic].color);\n    svg.selectAll('.bar').data(dates).join(enter => enter.append('path').attr('class', 'bar').attr('d', date => roundedBar(xScale(date), yScale(0), xScale.bandwidth(), 0, r))).transition(t).attr('d', date => roundedBar(xScale(date), yScale(0), xScale.bandwidth(), yScale(0) - yScale(getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic)), r)).attr('fill', (date, i) => {\n      return i < dates.length - 1 ? STATISTIC_CONFIGS[statistic].color + '90' : STATISTIC_CONFIGS[statistic].color;\n    });\n    const textSelection = svg.selectAll('.label').data(dates).join('text').attr('class', 'label').attr('x', date => xScale(date) + xScale.bandwidth() / 2).text(date => formatNumber(getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic)));\n    textSelection.transition(t).attr('fill', STATISTIC_CONFIGS[statistic].color).attr('y', date => {\n      const val = getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic);\n      return yScale(val) + (val < 0 ? 15 : -6);\n    });\n    textSelection.append('tspan').attr('dy', date => `${getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic) < 0 ? 1.2 : -1.2}em`).attr('x', date => xScale(date) + xScale.bandwidth() / 2).text((date, i) => {\n      if (i === 0) return '';\n      const prevVal = getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[dates[i - 1]], statistic);\n      if (!prevVal) return '';\n      const delta = getDeltaStatistic(timeseries === null || timeseries === void 0 ? void 0 : timeseries[date], statistic) - prevVal;\n      return `${delta > 0 ? '+' : ''}${formatNumber(100 * delta / Math.abs(prevVal))}%`;\n    }).transition(t).attr('fill', STATISTIC_CONFIGS[statistic].color + '90');\n  }, [dates, height, statistic, timeseries, width]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeltaBarGraph\",\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    width: width,\n    height: 250,\n    viewBox: `0 0 ${width} ${height}`,\n    preserveAspectRatio: \"xMidYMid meet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"x-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"y-axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(prevProps.stateCode, currProps.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.lookback, currProps.lookback)) {\n    return false;\n  } else if (!equal(prevProps.statistic, currProps.statistic)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default React.memo(DeltaBarGraph, isEqual);\n\nfunction roundedBar(x, y, w, h, r) {\n  r = Math.sign(h) * Math.min(Math.abs(h), r);\n  const paths = [`M ${x} ${y}`, `v ${-h + r}`, `q 0 ${-r} ${Math.abs(r)} ${-r}`, `h ${w - 2 * Math.abs(r)}`, `q ${Math.abs(r)} 0 ${Math.abs(r)} ${r}`, `v ${h - r}`, 'Z'];\n  return paths.join(' ');\n}","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/DeltaBarGraph.js"],"names":["STATISTIC_CONFIGS","D3_TRANSITION_DURATION","formatDate","formatNumber","getIndiaYesterdayISO","getStatistic","min","max","axisBottom","scaleBand","scaleLinear","select","transition","equal","React","useEffect","useRef","useMeasure","getDeltaStatistic","data","statistic","margin","top","right","bottom","left","DeltaBarGraph","timeseries","lookback","svgRef","wrapperRef","width","height","pastDates","Object","keys","filter","date","dates","slice","svg","current","chartRight","chartBottom","r","xScale","domain","range","paddingInner","yScale","Math","xAxis","tickSize","tickFormat","t","duration","style","call","on","remove","selectAll","attr","i","color","join","enter","append","roundedBar","bandwidth","length","textSelection","text","val","prevVal","delta","abs","isEqual","prevProps","currProps","forceRender","stateCode","memo","x","y","w","h","sign","paths"],"mappings":"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","sourcesContent":["import {STATISTIC_CONFIGS, D3_TRANSITION_DURATION} from '../constants';\nimport {\n  formatDate,\n  formatNumber,\n  getIndiaYesterdayISO,\n  getStatistic,\n} from '../utils/commonFunctions';\n\nimport {min, max} from 'd3-array';\nimport {axisBottom} from 'd3-axis';\nimport {scaleBand, scaleLinear} from 'd3-scale';\nimport {select} from 'd3-selection';\n// eslint-disable-next-line\nimport {transition} from 'd3-transition';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef} from 'react';\nimport {useMeasure} from 'react-use';\n\nconst getDeltaStatistic = (data, statistic) => {\n  return getStatistic(data, 'delta', statistic);\n};\n\nconst margin = {top: 50, right: 0, bottom: 50, left: 0};\n\nfunction DeltaBarGraph({timeseries, statistic, lookback}) {\n  const svgRef = useRef();\n  const [wrapperRef, {width, height}] = useMeasure();\n\n  const pastDates = Object.keys(timeseries || {}).filter(\n    (date) => date <= getIndiaYesterdayISO()\n  );\n  const dates = pastDates.slice(-lookback);\n\n  useEffect(() => {\n    if (!width) return;\n    const svg = select(svgRef.current);\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const r = 5;\n\n    // const formatTime = timeFormat('%e %b');\n    const xScale = scaleBand()\n      .domain(dates)\n      .range([margin.left, chartRight])\n      .paddingInner(width / 1000);\n\n    const yScale = scaleLinear()\n      .domain([\n        Math.min(\n          0,\n          min(dates, (date) => getDeltaStatistic(timeseries?.[date], statistic))\n        ),\n        Math.max(\n          1,\n          max(dates, (date) => getDeltaStatistic(timeseries?.[date], statistic))\n        ),\n      ])\n      .range([chartBottom, margin.top]);\n\n    const xAxis = axisBottom(xScale)\n      .tickSize(0)\n      .tickFormat((date) => formatDate(date, 'dd MMM'));\n\n    const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n    svg\n      .select('.x-axis')\n      .transition(t)\n      .style('transform', `translateY(${yScale(0)}px)`)\n      .call(xAxis)\n      .on('start', () => svg.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('dy', (date, i) =>\n        getDeltaStatistic(timeseries?.[date], statistic) < 0 ? '-1em' : '1.5em'\n      )\n      .style('text-anchor', 'middle')\n      .attr('fill', STATISTIC_CONFIGS[statistic].color);\n\n    svg\n      .selectAll('.bar')\n      .data(dates)\n      .join((enter) =>\n        enter\n          .append('path')\n          .attr('class', 'bar')\n          .attr('d', (date) =>\n            roundedBar(xScale(date), yScale(0), xScale.bandwidth(), 0, r)\n          )\n      )\n      .transition(t)\n      .attr('d', (date) =>\n        roundedBar(\n          xScale(date),\n          yScale(0),\n          xScale.bandwidth(),\n          yScale(0) - yScale(getDeltaStatistic(timeseries?.[date], statistic)),\n          r\n        )\n      )\n      .attr('fill', (date, i) => {\n        return i < dates.length - 1\n          ? STATISTIC_CONFIGS[statistic].color + '90'\n          : STATISTIC_CONFIGS[statistic].color;\n      });\n\n    const textSelection = svg\n      .selectAll('.label')\n      .data(dates)\n      .join('text')\n      .attr('class', 'label')\n      .attr('x', (date) => xScale(date) + xScale.bandwidth() / 2)\n      .text((date) =>\n        formatNumber(getDeltaStatistic(timeseries?.[date], statistic))\n      );\n\n    textSelection\n      .transition(t)\n      .attr('fill', STATISTIC_CONFIGS[statistic].color)\n      .attr('y', (date) => {\n        const val = getDeltaStatistic(timeseries?.[date], statistic);\n        return yScale(val) + (val < 0 ? 15 : -6);\n      });\n\n    textSelection\n      .append('tspan')\n      .attr(\n        'dy',\n        (date) =>\n          `${\n            getDeltaStatistic(timeseries?.[date], statistic) < 0 ? 1.2 : -1.2\n          }em`\n      )\n      .attr('x', (date) => xScale(date) + xScale.bandwidth() / 2)\n      .text((date, i) => {\n        if (i === 0) return '';\n        const prevVal = getDeltaStatistic(\n          timeseries?.[dates[i - 1]],\n          statistic\n        );\n        if (!prevVal) return '';\n        const delta =\n          getDeltaStatistic(timeseries?.[date], statistic) - prevVal;\n        return `${delta > 0 ? '+' : ''}${formatNumber(\n          (100 * delta) / Math.abs(prevVal)\n        )}%`;\n      })\n      .transition(t)\n      .attr('fill', STATISTIC_CONFIGS[statistic].color + '90');\n  }, [dates, height, statistic, timeseries, width]);\n\n  return (\n    <div className=\"DeltaBarGraph\" ref={wrapperRef}>\n      <svg\n        ref={svgRef}\n        width={width}\n        height={250}\n        viewBox={`0 0 ${width} ${height}`}\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(prevProps.stateCode, currProps.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.lookback, currProps.lookback)) {\n    return false;\n  } else if (!equal(prevProps.statistic, currProps.statistic)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(DeltaBarGraph, isEqual);\n\nfunction roundedBar(x, y, w, h, r) {\n  r = Math.sign(h) * Math.min(Math.abs(h), r);\n  const paths = [\n    `M ${x} ${y}`,\n    `v ${-h + r}`,\n    `q 0 ${-r} ${Math.abs(r)} ${-r}`,\n    `h ${w - 2 * Math.abs(r)}`,\n    `q ${Math.abs(r)} 0 ${Math.abs(r)} ${r}`,\n    `v ${h - r}`,\n    'Z',\n  ];\n  return paths.join(' ');\n}\n"]},"metadata":{},"sourceType":"module"}