{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{INDIA_ISO_SUFFIX,ISO_DATE_REGEX,LOCALE_SHORTHANDS,NAN_STATISTICS,PER_MILLION_OPTIONS,STATISTIC_OPTIONS,TESTED_LOOKBACK_DAYS}from'../constants';import{differenceInDays,format,formatDistance,formatISO,subDays}from'date-fns';import{utcToZonedTime}from'date-fns-tz';import i18n from'i18next';var locale=null;var numberFormatter=new Intl.NumberFormat('en-IN',{maximumFractionDigits:1});var getLocale=function getLocale(){import('date-fns/locale/').then(function(localePackage){locale=localePackage[LOCALE_SHORTHANDS[i18n.language||window.localStorage.i18nextLng]];});};export var isDevelopmentOrTest=function isDevelopmentOrTest(){if(process.env.NODE_ENV==='development'||process.env.NODE_ENV==='test')return true;return false;};export var getIndiaDate=function getIndiaDate(){return utcToZonedTime(new Date(),'Asia/Kolkata');};export var getIndiaDateISO=function getIndiaDateISO(){return formatISO(getIndiaDate(),{representation:'date'});};export var getIndiaYesterdayISO=function getIndiaYesterdayISO(){return formatISO(subDays(getIndiaDate(),1),{representation:'date'});};export var formatLastUpdated=function formatLastUpdated(unformattedDate){getLocale();return formatDistance(new Date(unformattedDate),new Date(),{locale:locale});};export var parseIndiaDate=function parseIndiaDate(isoDate){if(!isoDate)return getIndiaDate();if(isoDate.match(ISO_DATE_REGEX))isoDate+=INDIA_ISO_SUFFIX;return utcToZonedTime(new Date(isoDate),'Asia/Kolkata');};export var formatDate=function formatDate(unformattedDate,formatString){if(!unformattedDate)return'';if(typeof unformattedDate==='string'&&unformattedDate.match(ISO_DATE_REGEX))unformattedDate+=INDIA_ISO_SUFFIX;var date=utcToZonedTime(new Date(unformattedDate),'Asia/Kolkata');return format(date,formatString,{locale:locale});};export var abbreviateNumber=function abbreviateNumber(number){if(Math.abs(number)<1e3)return numberFormatter.format(number);else if(Math.abs(number)>=1e3&&Math.abs(number)<1e5)return numberFormatter.format(number/1e3)+'K';else if(Math.abs(number)>=1e5&&Math.abs(number)<1e7)return numberFormatter.format(number/1e5)+'L';else if(Math.abs(number)>=1e7&&Math.abs(number)<1e10)return numberFormatter.format(number/1e7)+'Cr';else if(Math.abs(number)>=1e10&&Math.abs(number)<1e14)return numberFormatter.format(number/1e10)+'K Cr';else if(Math.abs(number)>=1e14)return numberFormatter.format(number/1e14)+'L Cr';};export var formatNumber=function formatNumber(value,option,statistic){if(statistic&&value===0&&NAN_STATISTICS.includes(statistic))value=NaN;if(isNaN(value))return'-';else if(option==='short'){return abbreviateNumber(value);}else if(option==='int'){value=Math.floor(value);}return numberFormatter.format(value)+(option==='%'?'%':'');};export var capitalize=function capitalize(s){if(typeof s!=='string')return'';return s.charAt(0).toUpperCase()+s.slice(1);};export var toTitleCase=function toTitleCase(str){return str.replace(/\\w\\S*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase();});};export var getStatistic=function getStatistic(data,type,statistic){var _STATISTIC_OPTIONS$st2;var perMillion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var _STATISTIC_OPTIONS$st=_objectSpread(_objectSpread({},STATISTIC_OPTIONS[statistic]),perMillion&&!((_STATISTIC_OPTIONS$st2=STATISTIC_OPTIONS[statistic])===null||_STATISTIC_OPTIONS$st2===void 0?void 0:_STATISTIC_OPTIONS$st2.normalizeByKey)&&PER_MILLION_OPTIONS),key=_STATISTIC_OPTIONS$st.key,normalizeBy=_STATISTIC_OPTIONS$st.normalizeByKey,multiplyFactor=_STATISTIC_OPTIONS$st.multiplyFactor;var count;if(key==='population'){var _data$meta;count=type==='total'?data===null||data===void 0?void 0:(_data$meta=data.meta)===null||_data$meta===void 0?void 0:_data$meta.population:0;}else if(key==='tested'){var _data$type;count=data===null||data===void 0?void 0:(_data$type=data[type])===null||_data$type===void 0?void 0:_data$type.tested;}else if(key==='active'){var _data$type2,_data$type3,_data$type4,_data$type5;var confirmed=(data===null||data===void 0?void 0:(_data$type2=data[type])===null||_data$type2===void 0?void 0:_data$type2.confirmed)||0;var deceased=(data===null||data===void 0?void 0:(_data$type3=data[type])===null||_data$type3===void 0?void 0:_data$type3.deceased)||0;var recovered=(data===null||data===void 0?void 0:(_data$type4=data[type])===null||_data$type4===void 0?void 0:_data$type4.recovered)||0;var other=(data===null||data===void 0?void 0:(_data$type5=data[type])===null||_data$type5===void 0?void 0:_data$type5.other)||0;count=confirmed-deceased-recovered-other;}else{var _data$type6;count=data===null||data===void 0?void 0:(_data$type6=data[type])===null||_data$type6===void 0?void 0:_data$type6[key];}if(normalizeBy){if(type==='total'){var normStatistic=getStatistic(data,'total',normalizeBy);count/=normStatistic;}else{var currStatisticDelta=count;var currStatistic=getStatistic(data,'total',key);var prevStatistic=currStatistic-currStatisticDelta;var normStatisticDelta=getStatistic(data,'delta',{key:normalizeBy});var _normStatistic=getStatistic(data,'total',normalizeBy);var prevNormStatistic=_normStatistic-normStatisticDelta;count=currStatistic/_normStatistic-prevStatistic/prevNormStatistic;}}return(multiplyFactor||1)*(isFinite(count)&&count||0);};export var getTableStatistic=function getTableStatistic(data,statistic,isPerMillion,lastUpdatedTT){var _data$meta2,_data$meta2$tested;var expired=(STATISTIC_OPTIONS[statistic].key==='tested'||STATISTIC_OPTIONS[statistic].normalizeByKey==='tested')&&differenceInDays(lastUpdatedTT,parseIndiaDate((_data$meta2=data.meta)===null||_data$meta2===void 0?void 0:(_data$meta2$tested=_data$meta2.tested)===null||_data$meta2$tested===void 0?void 0:_data$meta2$tested['last_updated']))>TESTED_LOOKBACK_DAYS;var total=!expired?getStatistic(data,'total',statistic,isPerMillion):0;var delta=!expired?getStatistic(data,'delta',statistic,isPerMillion):0;return{total:total,delta:delta};};export var fetcher=function fetcher(url){return fetch(url).then(function(response){return response.json();});};","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/utils/commonFunctions.js"],"names":["INDIA_ISO_SUFFIX","ISO_DATE_REGEX","LOCALE_SHORTHANDS","NAN_STATISTICS","PER_MILLION_OPTIONS","STATISTIC_OPTIONS","TESTED_LOOKBACK_DAYS","differenceInDays","format","formatDistance","formatISO","subDays","utcToZonedTime","i18n","locale","numberFormatter","Intl","NumberFormat","maximumFractionDigits","getLocale","then","localePackage","language","window","localStorage","i18nextLng","isDevelopmentOrTest","process","env","NODE_ENV","getIndiaDate","Date","getIndiaDateISO","representation","getIndiaYesterdayISO","formatLastUpdated","unformattedDate","parseIndiaDate","isoDate","match","formatDate","formatString","date","abbreviateNumber","number","Math","abs","formatNumber","value","option","statistic","includes","NaN","isNaN","floor","capitalize","s","charAt","toUpperCase","slice","toTitleCase","str","replace","txt","substr","toLowerCase","getStatistic","data","type","perMillion","normalizeByKey","key","normalizeBy","multiplyFactor","count","meta","population","tested","confirmed","deceased","recovered","other","normStatistic","currStatisticDelta","currStatistic","prevStatistic","normStatisticDelta","prevNormStatistic","isFinite","getTableStatistic","isPerMillion","lastUpdatedTT","expired","total","delta","fetcher","url","fetch","response","json"],"mappings":"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","sourcesContent":["import {\n  INDIA_ISO_SUFFIX,\n  ISO_DATE_REGEX,\n  LOCALE_SHORTHANDS,\n  NAN_STATISTICS,\n  PER_MILLION_OPTIONS,\n  STATISTIC_OPTIONS,\n  TESTED_LOOKBACK_DAYS,\n} from '../constants';\n\nimport {\n  differenceInDays,\n  format,\n  formatDistance,\n  formatISO,\n  subDays,\n} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport i18n from 'i18next';\n\nlet locale = null;\nconst numberFormatter = new Intl.NumberFormat('en-IN', {\n  maximumFractionDigits: 1,\n});\n\nconst getLocale = () => {\n  import('date-fns/locale/').then((localePackage) => {\n    locale =\n      localePackage[\n        LOCALE_SHORTHANDS[i18n.language || window.localStorage.i18nextLng]\n      ];\n  });\n};\n\nexport const isDevelopmentOrTest = () => {\n  if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test')\n    return true;\n  return false;\n};\n\nexport const getIndiaDate = () => {\n  return utcToZonedTime(new Date(), 'Asia/Kolkata');\n};\n\nexport const getIndiaDateISO = () => {\n  return formatISO(getIndiaDate(), {representation: 'date'});\n};\n\nexport const getIndiaYesterdayISO = () => {\n  return formatISO(subDays(getIndiaDate(), 1), {representation: 'date'});\n};\n\nexport const formatLastUpdated = (unformattedDate) => {\n  getLocale();\n  return formatDistance(new Date(unformattedDate), new Date(), {\n    locale: locale,\n  });\n};\n\nexport const parseIndiaDate = (isoDate) => {\n  if (!isoDate) return getIndiaDate();\n  if (isoDate.match(ISO_DATE_REGEX)) isoDate += INDIA_ISO_SUFFIX;\n  return utcToZonedTime(new Date(isoDate), 'Asia/Kolkata');\n};\n\nexport const formatDate = (unformattedDate, formatString) => {\n  if (!unformattedDate) return '';\n  if (\n    typeof unformattedDate === 'string' &&\n    unformattedDate.match(ISO_DATE_REGEX)\n  )\n    unformattedDate += INDIA_ISO_SUFFIX;\n  const date = utcToZonedTime(new Date(unformattedDate), 'Asia/Kolkata');\n  return format(date, formatString, {\n    locale: locale,\n  });\n};\n\nexport const abbreviateNumber = (number) => {\n  if (Math.abs(number) < 1e3) return numberFormatter.format(number);\n  else if (Math.abs(number) >= 1e3 && Math.abs(number) < 1e5)\n    return numberFormatter.format(number / 1e3) + 'K';\n  else if (Math.abs(number) >= 1e5 && Math.abs(number) < 1e7)\n    return numberFormatter.format(number / 1e5) + 'L';\n  else if (Math.abs(number) >= 1e7 && Math.abs(number) < 1e10)\n    return numberFormatter.format(number / 1e7) + 'Cr';\n  else if (Math.abs(number) >= 1e10 && Math.abs(number) < 1e14)\n    return numberFormatter.format(number / 1e10) + 'K Cr';\n  else if (Math.abs(number) >= 1e14)\n    return numberFormatter.format(number / 1e14) + 'L Cr';\n};\n\nexport const formatNumber = (value, option, statistic) => {\n  if (statistic && value === 0 && NAN_STATISTICS.includes(statistic))\n    value = NaN;\n\n  if (isNaN(value)) return '-';\n  else if (option === 'short') {\n    return abbreviateNumber(value);\n  } else if (option === 'int') {\n    value = Math.floor(value);\n  }\n  return numberFormatter.format(value) + (option === '%' ? '%' : '');\n};\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n};\n\nexport const getStatistic = (data, type, statistic, perMillion = false) => {\n  const {key, normalizeByKey: normalizeBy, multiplyFactor} = {\n    ...STATISTIC_OPTIONS[statistic],\n    ...(perMillion &&\n      !STATISTIC_OPTIONS[statistic]?.normalizeByKey &&\n      PER_MILLION_OPTIONS),\n  };\n\n  let count;\n  if (key === 'population') {\n    count = type === 'total' ? data?.meta?.population : 0;\n  } else if (key === 'tested') {\n    count = data?.[type]?.tested;\n  } else if (key === 'active') {\n    const confirmed = data?.[type]?.confirmed || 0;\n    const deceased = data?.[type]?.deceased || 0;\n    const recovered = data?.[type]?.recovered || 0;\n    const other = data?.[type]?.other || 0;\n    count = confirmed - deceased - recovered - other;\n  } else {\n    count = data?.[type]?.[key];\n  }\n\n  if (normalizeBy) {\n    if (type === 'total') {\n      const normStatistic = getStatistic(data, 'total', normalizeBy);\n      count /= normStatistic;\n    } else {\n      const currStatisticDelta = count;\n      const currStatistic = getStatistic(data, 'total', key);\n      const prevStatistic = currStatistic - currStatisticDelta;\n\n      const normStatisticDelta = getStatistic(data, 'delta', {\n        key: normalizeBy,\n      });\n      const normStatistic = getStatistic(data, 'total', normalizeBy);\n      const prevNormStatistic = normStatistic - normStatisticDelta;\n\n      count = currStatistic / normStatistic - prevStatistic / prevNormStatistic;\n    }\n  }\n\n  return (multiplyFactor || 1) * ((isFinite(count) && count) || 0);\n};\n\nexport const getTableStatistic = (\n  data,\n  statistic,\n  isPerMillion,\n  lastUpdatedTT\n) => {\n  const expired =\n    (STATISTIC_OPTIONS[statistic].key === 'tested' ||\n      STATISTIC_OPTIONS[statistic].normalizeByKey === 'tested') &&\n    differenceInDays(\n      lastUpdatedTT,\n      parseIndiaDate(data.meta?.tested?.['last_updated'])\n    ) > TESTED_LOOKBACK_DAYS;\n\n  const total = !expired\n    ? getStatistic(data, 'total', statistic, isPerMillion)\n    : 0;\n  const delta = !expired\n    ? getStatistic(data, 'delta', statistic, isPerMillion)\n    : 0;\n  return {total, delta};\n};\n\nexport const fetcher = (url) => {\n  return fetch(url).then((response) => {\n    return response.json();\n  });\n};\n"]},"metadata":{},"sourceType":"module"}