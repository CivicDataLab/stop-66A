{"ast":null,"code":"import _defineProperty from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import{PRIMARY_STATISTICS,STATISTIC_CONFIGS}from'../constants';import classnames from'classnames';import React,{useState,useCallback,useEffect}from'react';import ReactDOM from'react-dom';import{useSpring,animated,config}from'react-spring';import{useMeasure}from'react-use';var MapSwitcher=function MapSwitcher(_ref){var mapStatistic=_ref.mapStatistic,setMapStatistic=_ref.setMapStatistic;var _useMeasure=useMeasure(),_useMeasure2=_slicedToArray(_useMeasure,2),mapSwitcher=_useMeasure2[0],width=_useMeasure2[1].width;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];var _useSpring=useSpring(function(){return{opacity:0,background:\"\".concat(STATISTIC_CONFIGS[mapStatistic].color,\"20\"),transform:\"translateX(\".concat(width*PRIMARY_STATISTICS.indexOf(mapStatistic)*0.25,\"px)\"),config:config.gentle};}),_useSpring2=_slicedToArray(_useSpring,2),spring=_useSpring2[0],set=_useSpring2[1];useEffect(function(){if(width>0){ReactDOM.unstable_batchedUpdates(function(){set({transform:\"translateX(\".concat(width*PRIMARY_STATISTICS.indexOf(mapStatistic)*0.25,\"px)\"),opacity:1,background:\"\".concat(STATISTIC_CONFIGS[mapStatistic].color,\"20\"),delay:count===0?1500:0,onStart:setClicked.bind(_this,true),onRest:setClicked.bind(_this,false)});});}},[count,mapStatistic,set,width]);var handleClick=useCallback(function(statistic){setCount(function(prevCount){return prevCount+1;});setMapStatistic(statistic);},[setMapStatistic]);return/*#__PURE__*/React.createElement(\"div\",{className:\"MapSwitcher\",ref:mapSwitcher},/*#__PURE__*/React.createElement(animated.div,{className:\"highlight\",style:spring}),PRIMARY_STATISTICS.map(function(statistic,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:classnames('clickable',_defineProperty({},\"is-\".concat(statistic),!clicked)),onClick:handleClick.bind(_this,statistic)});}));};var isEqual=function isEqual(prevProps,currProps){if(prevProps.mapStatistic!==currProps.mapStatistic){return false;}return true;};export default React.memo(MapSwitcher,isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapSwitcher.js"],"names":["PRIMARY_STATISTICS","STATISTIC_CONFIGS","classnames","React","useState","useCallback","useEffect","ReactDOM","useSpring","animated","config","useMeasure","MapSwitcher","mapStatistic","setMapStatistic","mapSwitcher","width","clicked","setClicked","count","setCount","opacity","background","color","transform","indexOf","gentle","spring","set","unstable_batchedUpdates","delay","onStart","bind","onRest","handleClick","statistic","prevCount","map","index","isEqual","prevProps","currProps","memo"],"mappings":"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","sourcesContent":["import {PRIMARY_STATISTICS, STATISTIC_CONFIGS} from '../constants';\n\nimport classnames from 'classnames';\nimport React, {useState, useCallback, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {useMeasure} from 'react-use';\n\nconst MapSwitcher = ({mapStatistic, setMapStatistic}) => {\n  const [mapSwitcher, {width}] = useMeasure();\n  const [clicked, setClicked] = useState(false);\n  const [count, setCount] = useState(0);\n  const [spring, set] = useSpring(() => ({\n    opacity: 0,\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n    transform: `translateX(${\n      width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\n    }px)`,\n    config: config.gentle,\n  }));\n\n  useEffect(() => {\n    if (width > 0) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        set({\n          transform: `translateX(${\n            width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\n          }px)`,\n          opacity: 1,\n          background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n          delay: count === 0 ? 1500 : 0,\n          onStart: setClicked.bind(this, true),\n          onRest: setClicked.bind(this, false),\n        });\n      });\n    }\n  }, [count, mapStatistic, set, width]);\n\n  const handleClick = useCallback(\n    (statistic) => {\n      setCount((prevCount) => prevCount + 1);\n      setMapStatistic(statistic);\n    },\n    [setMapStatistic]\n  );\n\n  return (\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\n      <animated.div className=\"highlight\" style={spring}></animated.div>\n\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div\n          key={index}\n          className={classnames('clickable', {[`is-${statistic}`]: !clicked})}\n          onClick={handleClick.bind(this, statistic)}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(MapSwitcher, isEqual);\n"]},"metadata":{},"sourceType":"module"}