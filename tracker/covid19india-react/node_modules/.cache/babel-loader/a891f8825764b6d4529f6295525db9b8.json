{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapVisualizer.js\";\nimport MapLegend from './MapLegend';\nimport { D3_TRANSITION_DURATION, MAP_META, MAP_TYPES, MAP_VIEWS, MAP_VIZS, STATE_CODES, STATE_NAMES, STATISTIC_CONFIGS, UNKNOWN_DISTRICT_KEY } from '../constants';\nimport { formatNumber, getStatistic, toTitleCase } from '../utils/commonFunctions';\nimport { AlertIcon } from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport { max } from 'd3-array';\nimport { json } from 'd3-fetch';\nimport { geoIdentity, geoPath } from 'd3-geo';\nimport { scaleSqrt, scaleSequential } from 'd3-scale'; // eslint-disable-next-line\n// import worker from 'workerize-loader!../workers/mapVisualizer';\n\nimport { interpolateReds, interpolateBlues, interpolateGreens, interpolateGreys, interpolatePurples, interpolateOranges } from 'd3-scale-chromatic';\nimport { select, event } from 'd3-selection';\nimport { transition } from 'd3-transition';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = statistic => {\n  switch (statistic) {\n    case 'confirmed':\n      return t => interpolateReds(t * 0.85);\n\n    case 'active':\n      return t => interpolateBlues(t * 0.85);\n\n    case 'recovered':\n      return t => interpolateGreens(t * 0.85);\n\n    case 'deceased':\n      return t => interpolateGreys(t * 0.85);\n\n    case 'tested':\n      return t => interpolatePurples(t * 0.85);\n\n    default:\n      return t => interpolateOranges(t * 0.85);\n  }\n};\n\nconst getTotalStatistic = (data, statistic) => {\n  return getStatistic(data, 'total', statistic);\n};\n\nfunction MapVisualizer({\n  mapCode,\n  mapView,\n  mapViz,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded\n}) {\n  var _data$mapCode, _data$mapCode$distric;\n\n  const {\n    t\n  } = useTranslation();\n  const svgRef = useRef(null);\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n  const {\n    data: geoData\n  } = useSWR(mapMeta.geoDataFile, async file => {\n    return await json(file);\n  }, {\n    suspense: false,\n    revalidateOnFocus: false\n  });\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(stateCode => stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode));\n    return mapView === MAP_VIEWS.STATES ? max(stateCodes, stateCode => getTotalStatistic(data[stateCode], statistic)) : max(stateCodes, stateCode => {\n      var _data$stateCode;\n\n      return ((_data$stateCode = data[stateCode]) === null || _data$stateCode === void 0 ? void 0 : _data$stateCode.districts) ? max(Object.values(data[stateCode].districts), districtData => getTotalStatistic(districtData, statistic)) : 0;\n    });\n  }, [data, mapView, statistic]);\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(data[mapCode], statistic);\n  }, [data, mapCode, statistic]);\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40]).clamp(true).nice(3);\n    } else {\n      return scaleSequential([0, Math.max(1, statisticMax)], colorInterpolator(statistic)).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n  const fillColor = useCallback(d => {\n    var _stateData$districts;\n\n    const stateCode = STATE_CODES[d.properties.st_nm];\n    const district = d.properties.district;\n    const stateData = data[stateCode];\n    const districtData = stateData === null || stateData === void 0 ? void 0 : (_stateData$districts = stateData.districts) === null || _stateData$districts === void 0 ? void 0 : _stateData$districts[district];\n    let n;\n    if (district) n = getTotalStatistic(districtData, statistic);else n = getTotalStatistic(stateData, statistic);\n    const color = n === 0 ? '#ffffff00' : mapScale(n);\n    return color;\n  }, [data, mapScale, statistic]);\n  const strokeColor = useCallback(alpha => {\n    return STATISTIC_CONFIGS[statistic].color + alpha;\n  }, [statistic]);\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap = mapView === MAP_VIEWS.STATES ? topojson.feature(geoData, geoData.objects.states).features : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES ? [...topojson.feature(geoData, geoData.objects.states).features, ...topojson.feature(geoData, geoData.objects.districts).features] : topojson.feature(geoData, geoData.objects.districts).features; // Add id to each feature\n\n    return featuresWrap.map(feature => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, mapView, mapViz, mapMeta]);\n  const populateTexts = useCallback(regionSelection => {\n    regionSelection.select('title').text(d => {\n      if (mapViz === MAP_VIZS.CHOROPLETH) {\n        var _stateData$districts2;\n\n        const state = d.properties.st_nm;\n        const stateCode = STATE_CODES[state];\n        const district = d.properties.district;\n        const stateData = data[stateCode];\n        const districtData = stateData === null || stateData === void 0 ? void 0 : (_stateData$districts2 = stateData.districts) === null || _stateData$districts2 === void 0 ? void 0 : _stateData$districts2[district];\n        let n;\n        if (district) n = getTotalStatistic(districtData, statistic);else n = getTotalStatistic(stateData, statistic);\n        return formatNumber(100 * (n / (statisticTotal || 0.001))) + '% from ' + toTitleCase(district ? district : state);\n      }\n    });\n  }, [mapViz, data, statistic, statisticTotal]);\n  const onceTouchedRegion = useRef(null); // Reset on tapping outside map\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null\n      });\n    });\n  }, [mapCode, setRegionHighlighted]); // Choropleth\n\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    const regionSelection = svg.select('.regions').selectAll('path').data(mapViz !== MAP_VIZS.BUBBLES ? features : [], d => d.id).join(enter => enter.append('path').attr('d', path).attr('stroke-width', 1.8).attr('stroke-opacity', 0).style('cursor', 'pointer').on('mouseenter', d => {\n      setRegionHighlighted({\n        stateCode: STATE_CODES[d.properties.st_nm],\n        districtName: d.properties.district\n      });\n    }).attr('fill', '#fff0').attr('stroke', '#fff0').call(enter => {\n      enter.append('title');\n    }), update => update, exit => exit.transition(T).attr('stroke', '#fff0').attr('fill', '#fff0').remove()).attr('pointer-events', 'all').on('touchstart', d => {\n      if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;else onceTouchedRegion.current = d;\n    }).on('click', d => {\n      var _data$stateCode2;\n\n      event.stopPropagation();\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE || !((_data$stateCode2 = data[stateCode]) === null || _data$stateCode2 === void 0 ? void 0 : _data$stateCode2.districts)) return; // Disable pointer events till the new map is rendered\n\n      svg.attr('pointer-events', 'none');\n      svg.select('.regions').selectAll('path').attr('pointer-events', 'none'); // Switch map\n\n      history.push(`/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`);\n    }).call(sel => {\n      sel.transition(T).attr('fill', fillColor).attr('stroke', strokeColor.bind(this, ''));\n    });\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [mapViz, data, features, fillColor, geoData, history, mapMeta.mapType, path, populateTexts, setRegionHighlighted, strokeColor]); // Bubble\n\n  useEffect(() => {\n    if (!features) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features.map(feature => {\n        const stateCode = STATE_CODES[feature.properties.st_nm];\n        const districtName = feature.properties.district;\n        const stateData = data[stateCode];\n\n        if (mapView === MAP_VIEWS.STATES) {\n          feature.value = getTotalStatistic(stateData, statistic);\n        } else if (mapView === MAP_VIEWS.DISTRICTS) {\n          var _stateData$districts3, _stateData$districts4;\n\n          const districtData = stateData === null || stateData === void 0 ? void 0 : (_stateData$districts3 = stateData.districts) === null || _stateData$districts3 === void 0 ? void 0 : _stateData$districts3[districtName];\n          if (districtName) feature.value = getTotalStatistic(districtData, statistic);else feature.value = getTotalStatistic(stateData === null || stateData === void 0 ? void 0 : (_stateData$districts4 = stateData.districts) === null || _stateData$districts4 === void 0 ? void 0 : _stateData$districts4[UNKNOWN_DISTRICT_KEY], statistic);\n        }\n\n        return feature;\n      }).sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n\n    svg.select('.circles').selectAll('circle').data(circlesData, feature => feature.id).join(enter => enter.append('circle').attr('transform', feature => `translate(${path.centroid(feature)})`).attr('fill-opacity', 0.25).style('cursor', 'pointer').attr('pointer-events', 'all'), update => update, exit => exit.call(exit => exit.transition(T).attr('r', 0).remove())).on('mouseenter', feature => {\n      setRegionHighlighted({\n        stateCode: STATE_CODES[feature.properties.st_nm],\n        districtName: mapView === MAP_VIEWS.STATES ? null : feature.properties.district || UNKNOWN_DISTRICT_KEY\n      });\n    }).on('touchstart', feature => {\n      if (onceTouchedRegion.current === feature) onceTouchedRegion.current = null;else onceTouchedRegion.current = feature;\n    }).on('click', feature => {\n      event.stopPropagation();\n      if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE) return;\n      history.push(`/state/${STATE_CODES[feature.properties.st_nm]}${window.innerWidth < 769 ? '#MapExplorer' : ''}`);\n    }).transition(T).attr('fill', STATISTIC_CONFIGS[statistic].color + '70').attr('stroke', STATISTIC_CONFIGS[statistic].color + '70').attr('r', feature => mapScale(feature.value));\n  }, [mapMeta.mapType, mapViz, mapView, data, features, history, mapScale, path, setRegionHighlighted, statistic]); // Boundaries\n\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [topojson.mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (mapMeta.mapType === MAP_TYPES.STATE || mapView === MAP_VIEWS.DISTRICTS && mapViz === MAP_VIZS.CHOROPLETH) {\n      // Add id to mesh\n      meshDistricts = [topojson.mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg.select('.state-borders').attr('fill', 'none').attr('stroke-width', 1.5).selectAll('path').data(meshStates, d => d.id).join(enter => enter.append('path').attr('d', path).attr('stroke', '#fff0'), update => update, exit => exit.transition(T).attr('stroke', '#fff0').remove()).transition(T).attr('stroke', strokeColor.bind(this, '40'));\n    svg.select('.district-borders').attr('fill', 'none').attr('stroke-width', 1.5).selectAll('path').data(meshDistricts, d => d.id).join(enter => enter.append('path').attr('d', path).attr('d', path).attr('stroke', '#fff0'), update => update, exit => exit.transition(T).attr('stroke', '#fff0').remove()).transition(T).attr('stroke', strokeColor.bind(this, '40'));\n  }, [geoData, mapMeta, mapCode, mapViz, mapView, statistic, path, strokeColor]); // Highlight\n\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg.select('.circles').selectAll('circle').attr('fill-opacity', d => {\n        var _d$properties;\n\n        const highlighted = stateName === d.properties.st_nm && (!district && stateCode !== mapCode || district === ((_d$properties = d.properties) === null || _d$properties === void 0 ? void 0 : _d$properties.district) || mapView === MAP_VIEWS.STATES || district === UNKNOWN_DISTRICT_KEY && !d.properties.district);\n        return highlighted ? 1 : 0.25;\n      });\n    } else {\n      svg.select('.regions').selectAll('path').each(function (d) {\n        var _d$properties2;\n\n        const highlighted = stateName === d.properties.st_nm && (!district && stateCode !== mapCode || district === ((_d$properties2 = d.properties) === null || _d$properties2 === void 0 ? void 0 : _d$properties2.district) || mapView === MAP_VIEWS.STATES);\n        if (highlighted) this.parentNode.appendChild(this);\n        select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n      });\n    }\n  }, [geoData, data, mapCode, mapView, mapViz, regionHighlighted.stateCode, regionHighlighted.districtName, statistic]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"chart\",\n    viewBox: `0 0 ${width} ${height}`,\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    className: \"regions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"state-borders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"district-borders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"circles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 11\n    }\n  })), mapMeta.mapType === MAP_TYPES.STATE && !!getTotalStatistic((_data$mapCode = data[mapCode]) === null || _data$mapCode === void 0 ? void 0 : (_data$mapCode$distric = _data$mapCode.districts) === null || _data$mapCode$distric === void 0 ? void 0 : _data$mapCode$distric[UNKNOWN_DISTRICT_KEY], statistic) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames('disclaimer', `is-${statistic}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AlertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 15\n    }\n  }, t('District-wise data not available in state bulletin')))), mapScale && /*#__PURE__*/React.createElement(MapLegend, Object.assign({\n    data,\n    mapViz,\n    mapScale,\n    statistic\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(\"svg\", {\n    style: {\n      position: 'absolute',\n      height: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"balance-color\",\n    colorInterpolationFilters: \"sRGB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0.91372549  0           0            0  0.08627451 0           0.91372549  0            0  0.08627451 0           0           0.854901961  0  0.145098039 0           0           0            1  0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default MapVisualizer;","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapVisualizer.js"],"names":["MapLegend","D3_TRANSITION_DURATION","MAP_META","MAP_TYPES","MAP_VIEWS","MAP_VIZS","STATE_CODES","STATE_NAMES","STATISTIC_CONFIGS","UNKNOWN_DISTRICT_KEY","formatNumber","getStatistic","toTitleCase","AlertIcon","classnames","max","json","geoIdentity","geoPath","scaleSqrt","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","select","event","transition","React","useCallback","useEffect","useMemo","useRef","useTranslation","useHistory","useSWR","topojson","width","height","colorInterpolator","statistic","t","getTotalStatistic","data","MapVisualizer","mapCode","mapView","mapViz","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","svgRef","mapMeta","history","geoData","geoDataFile","file","suspense","revalidateOnFocus","statisticMax","stateCodes","Object","keys","filter","stateCode","includes","STATES","districts","values","districtData","statisticTotal","mapScale","BUBBLES","Math","clamp","nice","path","fillColor","d","properties","st_nm","district","stateData","n","color","strokeColor","alpha","features","featuresWrap","feature","objects","states","mapType","COUNTRY","map","state","obj","assign","id","populateTexts","regionSelection","text","CHOROPLETH","onceTouchedRegion","svg","current","attr","on","districtName","T","duration","selectAll","join","enter","append","style","call","update","exit","remove","stopPropagation","STATE","push","window","innerWidth","sel","bind","requestIdleCallback","circlesData","value","DISTRICTS","sort","featureA","featureB","centroid","meshStates","meshDistricts","mesh","stateName","highlighted","each","parentNode","appendChild","position"],"mappings":"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","sourcesContent":["import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {\n  formatNumber,\n  getStatistic,\n  toTitleCase,\n} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\n// eslint-disable-next-line\n// import worker from 'workerize-loader!../workers/mapVisualizer';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n} from 'd3-scale-chromatic';\nimport {select, event} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport React, {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = (statistic) => {\n  switch (statistic) {\n    case 'confirmed':\n      return (t) => interpolateReds(t * 0.85);\n    case 'active':\n      return (t) => interpolateBlues(t * 0.85);\n    case 'recovered':\n      return (t) => interpolateGreens(t * 0.85);\n    case 'deceased':\n      return (t) => interpolateGreys(t * 0.85);\n    case 'tested':\n      return (t) => interpolatePurples(t * 0.85);\n    default:\n      return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nconst getTotalStatistic = (data, statistic) => {\n  return getStatistic(data, 'total', statistic);\n};\n\nfunction MapVisualizer({\n  mapCode,\n  mapView,\n  mapViz,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await json(file);\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    return mapView === MAP_VIEWS.STATES\n      ? max(stateCodes, (stateCode) =>\n          getTotalStatistic(data[stateCode], statistic)\n        )\n      : max(stateCodes, (stateCode) =>\n          data[stateCode]?.districts\n            ? max(Object.values(data[stateCode].districts), (districtData) =>\n                getTotalStatistic(districtData, statistic)\n              )\n            : 0\n        );\n  }, [data, mapView, statistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(data[mapCode], statistic);\n  }, [data, mapCode, statistic]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return scaleSequential(\n        [0, Math.max(1, statisticMax)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  const fillColor = useCallback(\n    (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      let n;\n      if (district) n = getTotalStatistic(districtData, statistic);\n      else n = getTotalStatistic(stateData, statistic);\n      const color = n === 0 ? '#ffffff00' : mapScale(n);\n      return color;\n    },\n    [data, mapScale, statistic]\n  );\n\n  const strokeColor = useCallback(\n    (alpha) => {\n      return STATISTIC_CONFIGS[statistic].color + alpha;\n    },\n    [statistic]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap =\n      mapView === MAP_VIEWS.STATES\n        ? topojson.feature(geoData, geoData.objects.states).features\n        : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\n        ? [\n            ...topojson.feature(geoData, geoData.objects.states).features,\n            ...topojson.feature(geoData, geoData.objects.districts).features,\n          ]\n        : topojson.feature(geoData, geoData.objects.districts).features;\n\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, mapView, mapViz, mapMeta]);\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz === MAP_VIZS.CHOROPLETH) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getTotalStatistic(districtData, statistic);\n          else n = getTotalStatistic(stateData, statistic);\n          return (\n            formatNumber(100 * (n / (statisticTotal || 0.001))) +\n            '% from ' +\n            toTitleCase(district ? district : state)\n          );\n        }\n      });\n    },\n    [mapViz, data, statistic, statisticTotal]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (d) => {\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('touchstart', (d) => {\n        if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = d;\n      })\n      .on('click', (d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    populateTexts,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  // Bubble\n  useEffect(() => {\n    if (!features) return;\n\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (mapView === MAP_VIEWS.STATES) {\n            feature.value = getTotalStatistic(stateData, statistic);\n          } else if (mapView === MAP_VIEWS.DISTRICTS) {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName)\n              feature.value = getTotalStatistic(districtData, statistic);\n            else\n              feature.value = getTotalStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\n                statistic\n              );\n          }\n\n          return feature;\n        })\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (feature) => feature.id)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all'),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (feature) => {\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName:\n            mapView === MAP_VIEWS.STATES\n              ? null\n              : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('touchstart', (feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n      })\n      .on('click', (feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .transition(T)\n      .attr('fill', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('stroke', STATISTIC_CONFIGS[statistic].color + '70')\n      .attr('r', (feature) => mapScale(feature.value));\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    mapView,\n    data,\n    features,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    statistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [topojson.mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (mapView === MAP_VIEWS.DISTRICTS && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [topojson.mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    mapView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              mapView === MAP_VIEWS.STATES ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              mapView === MAP_VIEWS.STATES);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    mapView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getTotalStatistic(\n            data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY],\n            statistic\n          ) && (\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\n              <AlertIcon />\n              <span>\n                {t('District-wise data not available in state bulletin')}\n              </span>\n            </div>\n          )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, mapViz, mapScale, statistic}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default MapVisualizer;\n"]},"metadata":{},"sourceType":"module"}