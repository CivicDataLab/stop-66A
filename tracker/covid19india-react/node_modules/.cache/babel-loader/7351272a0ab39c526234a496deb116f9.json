{"ast":null,"code":"export const API_ROOT_URL = 'https://api.covid19india.org/v4/min';\nexport const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n  hindi: 'hi',\n  telugu: 'te',\n  kannada: 'en-US',\n  gujarati: 'gu',\n  marathi: 'en-US',\n  tamil: 'ta',\n  bengali: 'bn',\n  punjabi: 'en-US',\n  malayalam: 'en-US',\n  odiya: 'en-US'\n};\nexport const STATISTIC_DEFINITIONS = {\n  confirmed: {\n    displayName: 'confirmed',\n    color: '#ff073a',\n    format: 'int',\n    options: {\n      key: 'confirmed'\n    }\n  },\n  active: {\n    displayName: 'active',\n    color: '#007bff',\n    format: 'int',\n    options: {\n      key: 'active'\n    },\n    hideDelta: true\n  },\n  recovered: {\n    displayName: 'recovered',\n    color: '#28a745',\n    format: 'int',\n    options: {\n      key: 'recovered'\n    }\n  },\n  deceased: {\n    displayName: 'deceased',\n    color: '#6c757d',\n    format: 'int',\n    options: {\n      key: 'deceased'\n    }\n  },\n  other: {\n    displayName: 'other',\n    format: 'int',\n    options: {\n      key: 'other'\n    }\n  },\n  tested: {\n    displayName: 'tested',\n    color: '#4b1eaa',\n    format: 'short',\n    options: {\n      key: 'tested'\n    }\n  },\n  activeRatio: {\n    displayName: 'active ratio',\n    format: '%',\n    options: {\n      key: 'active',\n      normalizeByKey: 'confirmed',\n      multiplyFactor: 100\n    },\n    hideDelta: true\n  },\n  recoveryRatio: {\n    displayName: 'recovery ratio',\n    format: '%',\n    options: {\n      key: 'recovered',\n      normalizeByKey: 'confirmed',\n      multiplyFactor: 100\n    },\n    hideDelta: true\n  },\n  cfr: {\n    displayName: 'case fatality ratio',\n    format: '%',\n    options: {\n      key: 'deceased',\n      normalizeByKey: 'confirmed',\n      multiplyFactor: 100\n    },\n    hideDelta: true\n  },\n  tpr: {\n    displayName: 'test positivity ratio',\n    color: '#fd7e14',\n    format: '%',\n    options: {\n      key: 'confirmed',\n      normalizeByKey: 'tested',\n      multiplyFactor: 100\n    },\n    hideDelta: true\n  },\n  population: {\n    displayName: 'population',\n    format: 'short',\n    options: {\n      key: 'population'\n    },\n    hideDelta: true\n  }\n};\nconst definitions = Object.keys(STATISTIC_DEFINITIONS).reduce((acc, statistic) => {\n  const {\n    options,\n    ...config\n  } = STATISTIC_DEFINITIONS[statistic];\n  acc.options[statistic] = options;\n  acc.configs[statistic] = config;\n  return acc;\n}, {\n  options: {},\n  configs: {}\n});\nexport const STATISTIC_CONFIGS = definitions.configs;\nexport const STATISTIC_OPTIONS = definitions.options;\nexport const PER_MILLION_OPTIONS = {\n  normalizeByKey: 'population',\n  multiplyFactor: 1e6\n};\nexport const NAN_STATISTICS = ['tested', 'tpr', 'population'];\nexport const PRIMARY_STATISTICS = ['confirmed', 'active', 'recovered', 'deceased'];\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_DEFINITIONS);\nexport const TIMESERIES_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\nexport const UPDATES_COUNT = 5;\nexport const DISTRICT_TABLE_COUNT = 30;\nexport const D3_TRANSITION_DURATION = 300;\nexport const MINIGRAPH_LOOKBACK_DAYS = 20;\nexport const TESTED_LOOKBACK_DAYS = 7;\nexport const UNASSIGNED_STATE_CODE = 'UN';\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\nexport const SPRING_CONFIG_NUMBERS = {\n  clamp: true,\n  precision: 1\n};\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily'\n};\nexport const TIMESERIES_LOOKBACKS = {\n  BEGINNING: 'Beginning',\n  THREE_MONTHS: '3 Months',\n  MONTH: '1 Month'\n};\nexport const MAP_VIZS = {\n  CHOROPLETH: 0,\n  BUBBLES: 1\n};\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1\n};\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1\n};\nexport const MAPS_DIR = process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  CT: {\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  AN: {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY\n  }\n};\nexport const MAP_LEGEND_HEIGHT = 50;\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'India',\n  [UNASSIGNED_STATE_CODE]: 'Unassigned'\n};\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({\n    code: key,\n    name: STATE_NAMES[key]\n  });\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/constants.js"],"names":["API_ROOT_URL","LOCALE_SHORTHANDS","english","hindi","telugu","kannada","gujarati","marathi","tamil","bengali","punjabi","malayalam","odiya","STATISTIC_DEFINITIONS","confirmed","displayName","color","format","options","key","active","hideDelta","recovered","deceased","other","tested","activeRatio","normalizeByKey","multiplyFactor","recoveryRatio","cfr","tpr","population","definitions","Object","keys","reduce","acc","statistic","config","configs","STATISTIC_CONFIGS","STATISTIC_OPTIONS","PER_MILLION_OPTIONS","NAN_STATISTICS","PRIMARY_STATISTICS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","TIMESERIES_STATISTICS","UPDATES_COUNT","DISTRICT_TABLE_COUNT","D3_TRANSITION_DURATION","MINIGRAPH_LOOKBACK_DAYS","TESTED_LOOKBACK_DAYS","UNASSIGNED_STATE_CODE","UNKNOWN_DISTRICT_KEY","ISO_DATE_REGEX","INDIA_ISO_SUFFIX","SPRING_CONFIG_NUMBERS","clamp","precision","TIMESERIES_CHART_TYPES","total","delta","TIMESERIES_LOOKBACKS","BEGINNING","THREE_MONTHS","MONTH","MAP_VIZS","CHOROPLETH","BUBBLES","MAP_VIEWS","STATES","DISTRICTS","MAP_TYPES","COUNTRY","STATE","MAPS_DIR","process","env","NODE_ENV","MAP_META","AP","geoDataFile","mapType","AR","AS","BR","CT","GA","GJ","HR","HP","JK","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","LA","LD","PY","TT","MAP_LEGEND_HEIGHT","STATE_NAMES","stateCodes","stateCodesMap","map","index","push","code","name","STATE_CODES","STATE_CODES_ARRAY"],"mappings":"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","sourcesContent":["export const API_ROOT_URL = 'https://api.covid19india.org/v4/min';\n\nexport const LOCALE_SHORTHANDS = {\n  english: 'en-US',\n  hindi: 'hi',\n  telugu: 'te',\n  kannada: 'en-US',\n  gujarati: 'gu',\n  marathi: 'en-US',\n  tamil: 'ta',\n  bengali: 'bn',\n  punjabi: 'en-US',\n  malayalam: 'en-US',\n  odiya: 'en-US',\n};\n\nexport const STATISTIC_DEFINITIONS = {\n  confirmed: {\n    displayName: 'confirmed',\n    color: '#ff073a',\n    format: 'int',\n    options: {key: 'confirmed'},\n  },\n  active: {\n    displayName: 'active',\n    color: '#007bff',\n    format: 'int',\n    options: {key: 'active'},\n    hideDelta: true,\n  },\n  recovered: {\n    displayName: 'recovered',\n    color: '#28a745',\n    format: 'int',\n    options: {key: 'recovered'},\n  },\n  deceased: {\n    displayName: 'deceased',\n    color: '#6c757d',\n    format: 'int',\n    options: {key: 'deceased'},\n  },\n  other: {\n    displayName: 'other',\n    format: 'int',\n    options: {key: 'other'},\n  },\n  tested: {\n    displayName: 'tested',\n    color: '#4b1eaa',\n    format: 'short',\n    options: {key: 'tested'},\n  },\n  activeRatio: {\n    displayName: 'active ratio',\n    format: '%',\n    options: {\n      key: 'active',\n      normalizeByKey: 'confirmed',\n      multiplyFactor: 100,\n    },\n    hideDelta: true,\n  },\n  recoveryRatio: {\n    displayName: 'recovery ratio',\n    format: '%',\n    options: {\n      key: 'recovered',\n      normalizeByKey: 'confirmed',\n      multiplyFactor: 100,\n    },\n    hideDelta: true,\n  },\n  cfr: {\n    displayName: 'case fatality ratio',\n    format: '%',\n    options: {\n      key: 'deceased',\n      normalizeByKey: 'confirmed',\n      multiplyFactor: 100,\n    },\n    hideDelta: true,\n  },\n  tpr: {\n    displayName: 'test positivity ratio',\n    color: '#fd7e14',\n    format: '%',\n    options: {\n      key: 'confirmed',\n      normalizeByKey: 'tested',\n      multiplyFactor: 100,\n    },\n    hideDelta: true,\n  },\n  population: {\n    displayName: 'population',\n    format: 'short',\n    options: {key: 'population'},\n    hideDelta: true,\n  },\n};\n\nconst definitions = Object.keys(STATISTIC_DEFINITIONS).reduce(\n  (acc, statistic) => {\n    const {options, ...config} = STATISTIC_DEFINITIONS[statistic];\n    acc.options[statistic] = options;\n    acc.configs[statistic] = config;\n    return acc;\n  },\n  {options: {}, configs: {}}\n);\n\nexport const STATISTIC_CONFIGS = definitions.configs;\nexport const STATISTIC_OPTIONS = definitions.options;\n\nexport const PER_MILLION_OPTIONS = {\n  normalizeByKey: 'population',\n  multiplyFactor: 1e6,\n};\n\nexport const NAN_STATISTICS = ['tested', 'tpr', 'population'];\n\nexport const PRIMARY_STATISTICS = [\n  'confirmed',\n  'active',\n  'recovered',\n  'deceased',\n];\n\nexport const TABLE_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const TABLE_STATISTICS_EXPANDED = Object.keys(STATISTIC_DEFINITIONS);\n\nexport const TIMESERIES_STATISTICS = [...PRIMARY_STATISTICS, 'tested'];\n\nexport const UPDATES_COUNT = 5;\n\nexport const DISTRICT_TABLE_COUNT = 30;\n\nexport const D3_TRANSITION_DURATION = 300;\n\nexport const MINIGRAPH_LOOKBACK_DAYS = 20;\n\nexport const TESTED_LOOKBACK_DAYS = 7;\n\nexport const UNASSIGNED_STATE_CODE = 'UN';\n\nexport const UNKNOWN_DISTRICT_KEY = 'Unknown';\n\nexport const ISO_DATE_REGEX = /^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])$/g;\n\nexport const INDIA_ISO_SUFFIX = 'T00:00:00+05:30';\n\nexport const SPRING_CONFIG_NUMBERS = {clamp: true, precision: 1};\n\nexport const TIMESERIES_CHART_TYPES = {\n  total: 'Cumulative',\n  delta: 'Daily',\n};\n\nexport const TIMESERIES_LOOKBACKS = {\n  BEGINNING: 'Beginning',\n  THREE_MONTHS: '3 Months',\n  MONTH: '1 Month',\n};\n\nexport const MAP_VIZS = {\n  CHOROPLETH: 0,\n  BUBBLES: 1,\n};\n\nexport const MAP_VIEWS = {\n  STATES: 0,\n  DISTRICTS: 1,\n};\n\nexport const MAP_TYPES = {\n  COUNTRY: 0,\n  STATE: 1,\n};\n\nexport const MAPS_DIR =\n  process.env.NODE_ENV === 'production' ? '/mini_maps' : '/projected_maps';\n\nexport const MAP_META = {\n  AP: {\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AR: {\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AS: {\n    geoDataFile: `${MAPS_DIR}/assam.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  BR: {\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CT: {\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GA: {\n    geoDataFile: `${MAPS_DIR}/goa.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  GJ: {\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HR: {\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  HP: {\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JK: {\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  JH: {\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KA: {\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  KL: {\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MP: {\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MH: {\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MN: {\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  ML: {\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  MZ: {\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  NL: {\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  OR: {\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PB: {\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  RJ: {\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  SK: {\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TN: {\n    geoDataFile: `${MAPS_DIR}/tamilnadu.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TG: {\n    geoDataFile: `${MAPS_DIR}/telangana.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TR: {\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UT: {\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  UP: {\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  WB: {\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  AN: {\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  CH: {\n    geoDataFile: `${MAPS_DIR}/chandigarh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DN: {\n    geoDataFile: `${MAPS_DIR}/dnh-and-dd.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  DL: {\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LA: {\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  LD: {\n    geoDataFile: `${MAPS_DIR}/lakshadweep.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  PY: {\n    geoDataFile: `${MAPS_DIR}/puducherry.json`,\n    mapType: MAP_TYPES.STATE,\n  },\n  TT: {\n    geoDataFile: `${MAPS_DIR}/india.json`,\n    mapType: MAP_TYPES.COUNTRY,\n  },\n};\n\nexport const MAP_LEGEND_HEIGHT = 50;\n\nexport const STATE_NAMES = {\n  AP: 'Andhra Pradesh',\n  AR: 'Arunachal Pradesh',\n  AS: 'Assam',\n  BR: 'Bihar',\n  CT: 'Chhattisgarh',\n  GA: 'Goa',\n  GJ: 'Gujarat',\n  HR: 'Haryana',\n  HP: 'Himachal Pradesh',\n  JH: 'Jharkhand',\n  KA: 'Karnataka',\n  KL: 'Kerala',\n  MP: 'Madhya Pradesh',\n  MH: 'Maharashtra',\n  MN: 'Manipur',\n  ML: 'Meghalaya',\n  MZ: 'Mizoram',\n  NL: 'Nagaland',\n  OR: 'Odisha',\n  PB: 'Punjab',\n  RJ: 'Rajasthan',\n  SK: 'Sikkim',\n  TN: 'Tamil Nadu',\n  TG: 'Telangana',\n  TR: 'Tripura',\n  UT: 'Uttarakhand',\n  UP: 'Uttar Pradesh',\n  WB: 'West Bengal',\n  AN: 'Andaman and Nicobar Islands',\n  CH: 'Chandigarh',\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\n  DL: 'Delhi',\n  JK: 'Jammu and Kashmir',\n  LA: 'Ladakh',\n  LD: 'Lakshadweep',\n  PY: 'Puducherry',\n  TT: 'India',\n  [UNASSIGNED_STATE_CODE]: 'Unassigned',\n};\n\nconst stateCodes = [];\nconst stateCodesMap = {};\nObject.keys(STATE_NAMES).map((key, index) => {\n  stateCodesMap[STATE_NAMES[key]] = key;\n  stateCodes.push({code: key, name: STATE_NAMES[key]});\n  return null;\n});\nexport const STATE_CODES = stateCodesMap;\nexport const STATE_CODES_ARRAY = stateCodes;\n"]},"metadata":{},"sourceType":"module"}