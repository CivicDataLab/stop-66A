{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/StateHeader.js\";\nimport StateDropdown from './StateDropdown';\nimport { SPRING_CONFIG_NUMBERS } from '../constants.js';\nimport { formatDate, formatNumber, getStatistic } from '../utils/commonFunctions';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { animated, useSpring } from 'react-spring';\n\nfunction StateHeader({\n  data,\n  stateCode\n}) {\n  var _data$meta, _data$meta2, _data$meta2$tested, _data$meta3, _data$meta3$tested;\n\n  const {\n    t\n  } = useTranslation();\n  const trail = useMemo(() => {\n    const styles = [];\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'tested'),\n    config: SPRING_CONFIG_NUMBERS\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"StateHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StateDropdown, Object.assign({\n    stateCode\n  }, {\n    hyperlink: false,\n    trail: trail[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), (data === null || data === void 0 ? void 0 : (_data$meta = data.meta) === null || _data$meta === void 0 ? void 0 : _data$meta['last_updated']) && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fadeInUp\",\n    style: trail[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, `Last Updated on ${formatDate(data.meta.last_updated, 'dd MMM, p')} IST`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-right fadeInUp\",\n    style: trail[2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, t('Tested')), /*#__PURE__*/React.createElement(animated.h2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, spring.total.interpolate(total => formatNumber(Math.floor(total)))), (data === null || data === void 0 ? void 0 : (_data$meta2 = data.meta) === null || _data$meta2 === void 0 ? void 0 : (_data$meta2$tested = _data$meta2.tested) === null || _data$meta2$tested === void 0 ? void 0 : _data$meta2$tested['last_updated']) && /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"timestamp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, `As of ${formatDate(data.meta.tested.last_updated, 'dd MMMM')}`), (data === null || data === void 0 ? void 0 : (_data$meta3 = data.meta) === null || _data$meta3 === void 0 ? void 0 : (_data$meta3$tested = _data$meta3.tested) === null || _data$meta3$tested === void 0 ? void 0 : _data$meta3$tested.source) && /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, 'per ', /*#__PURE__*/React.createElement(\"a\", {\n    href: data.meta.tested.source,\n    target: \"_noblank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"source\"))));\n}\n\nexport default React.memo(StateHeader);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/StateHeader.js"],"names":["StateDropdown","SPRING_CONFIG_NUMBERS","formatDate","formatNumber","getStatistic","React","useMemo","useTranslation","animated","useSpring","StateHeader","data","stateCode","t","trail","styles","map","element","index","push","animationDelay","spring","total","config","meta","last_updated","interpolate","Math","floor","tested","source","memo"],"mappings":"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","sourcesContent":["import StateDropdown from './StateDropdown';\n\nimport {SPRING_CONFIG_NUMBERS} from '../constants.js';\nimport {formatDate, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport React, {useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction StateHeader({data, stateCode}) {\n  const {t} = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const spring = useSpring({\n    total: getStatistic(data, 'total', 'tested'),\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  return (\n    <div className=\"StateHeader\">\n      <div className=\"header-left\">\n        <StateDropdown {...{stateCode}} hyperlink={false} trail={trail[0]} />\n        {data?.meta?.['last_updated'] && (\n          <h5 className=\"fadeInUp\" style={trail[1]}>\n            {`Last Updated on ${formatDate(\n              data.meta.last_updated,\n              'dd MMM, p'\n            )} IST`}\n          </h5>\n        )}\n      </div>\n\n      <div className=\"header-right fadeInUp\" style={trail[2]}>\n        <h5>{t('Tested')}</h5>\n        <animated.h2>\n          {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n        </animated.h2>\n        {data?.meta?.tested?.['last_updated'] && (\n          <h5 className=\"timestamp\">\n            {`As of ${formatDate(data.meta.tested.last_updated, 'dd MMMM')}`}\n          </h5>\n        )}\n        {data?.meta?.tested?.source && (\n          <h5>\n            {'per '}\n            <a href={data.meta.tested.source} target=\"_noblank\">\n              source\n            </a>\n          </h5>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(StateHeader);\n"]},"metadata":{},"sourceType":"module"}