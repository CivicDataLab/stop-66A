{"ast":null,"code":"import _defineProperty from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import Tooltip from'./Tooltip';import{STATISTIC_CONFIGS}from'../constants';import{toTitleCase}from'../utils/commonFunctions';import{FilterIcon,InfoIcon}from'@primer/octicons-v2-react';import classnames from'classnames';import equal from'fast-deep-equal';import produce from'immer';import React from'react';import{useTranslation}from'react-i18next';import{useLongPress}from'react-use';function StateHeaderCell(_ref){var handleSort=_ref.handleSort,sortData=_ref.sortData,setSortData=_ref.setSortData,statistic=_ref.statistic;var _useTranslation=useTranslation(),t=_useTranslation.t;var onLongPress=function onLongPress(){if(sortData.sortColumn===statistic){setSortData(produce(sortData,function(sortDataDraft){sortDataDraft.delta=!sortData.delta;}));}};var longPressEvent=useLongPress(onLongPress,{isPreventDefault:false});return/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"cell heading\",onClick:handleSort.bind(this,statistic)},longPressEvent),sortData.sortColumn===statistic&&/*#__PURE__*/React.createElement(\"div\",{className:classnames('sort-icon',_defineProperty({invert:sortData.isAscending},\"is-\".concat(statistic),sortData.delta))},/*#__PURE__*/React.createElement(FilterIcon,{size:10})),/*#__PURE__*/React.createElement(\"div\",null,t(toTitleCase(STATISTIC_CONFIGS[statistic].displayName))),statistic==='other'&&/*#__PURE__*/React.createElement(Tooltip,{data:'Migrated cases or non-COVID deaths'},/*#__PURE__*/React.createElement(InfoIcon,{size:14})));}var isStateHeaderCellEqual=function isStateHeaderCellEqual(prevProps,currProps){if(!equal(prevProps.sortData,currProps.sortData)){return false;}else{return true;}};export default React.memo(StateHeaderCell,isStateHeaderCellEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/HeaderCell.js"],"names":["Tooltip","STATISTIC_CONFIGS","toTitleCase","FilterIcon","InfoIcon","classnames","equal","produce","React","useTranslation","useLongPress","StateHeaderCell","handleSort","sortData","setSortData","statistic","t","onLongPress","sortColumn","sortDataDraft","delta","longPressEvent","isPreventDefault","bind","invert","isAscending","displayName","isStateHeaderCellEqual","prevProps","currProps","memo"],"mappings":"6KAAA,MAAOA,CAAAA,OAAP,KAAoB,WAApB,CAEA,OAAQC,iBAAR,KAAgC,cAAhC,CACA,OAAQC,WAAR,KAA0B,0BAA1B,CAEA,OAAQC,UAAR,CAAoBC,QAApB,KAAmC,2BAAnC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,OAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,cAAR,KAA6B,eAA7B,CACA,OAAQC,YAAR,KAA2B,WAA3B,CAEA,QAASC,CAAAA,eAAT,MAAyE,IAA/CC,CAAAA,UAA+C,MAA/CA,UAA+C,CAAnCC,QAAmC,MAAnCA,QAAmC,CAAzBC,WAAyB,MAAzBA,WAAyB,CAAZC,SAAY,MAAZA,SAAY,qBAC3DN,cAAc,EAD6C,CAChEO,CADgE,iBAChEA,CADgE,CAGvE,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIJ,QAAQ,CAACK,UAAT,GAAwBH,SAA5B,CAAuC,CACrCD,WAAW,CACTP,OAAO,CAACM,QAAD,CAAW,SAACM,aAAD,CAAmB,CACnCA,aAAa,CAACC,KAAd,CAAsB,CAACP,QAAQ,CAACO,KAAhC,CACD,CAFM,CADE,CAAX,CAKD,CACF,CARD,CASA,GAAMC,CAAAA,cAAc,CAAGX,YAAY,CAACO,WAAD,CAAc,CAACK,gBAAgB,CAAE,KAAnB,CAAd,CAAnC,CAEA,mBACE,yCACE,SAAS,CAAC,cADZ,CAEE,OAAO,CAAEV,UAAU,CAACW,IAAX,CAAgB,IAAhB,CAAsBR,SAAtB,CAFX,EAGMM,cAHN,EAKGR,QAAQ,CAACK,UAAT,GAAwBH,SAAxB,eACC,2BACE,SAAS,CAAEV,UAAU,CAAC,WAAD,kBACnBmB,MAAM,CAAEX,QAAQ,CAACY,WADE,eAEZV,SAFY,EAEEF,QAAQ,CAACO,KAFX,EADvB,eAME,oBAAC,UAAD,EAAY,IAAI,CAAE,EAAlB,EANF,CANJ,cAeE,+BAAMJ,CAAC,CAACd,WAAW,CAACD,iBAAiB,CAACc,SAAD,CAAjB,CAA6BW,WAA9B,CAAZ,CAAP,CAfF,CAgBGX,SAAS,GAAK,OAAd,eACC,oBAAC,OAAD,EAAS,IAAI,CAAE,oCAAf,eACE,oBAAC,QAAD,EAAU,IAAI,CAAE,EAAhB,EADF,CAjBJ,CADF,CAwBD,CAED,GAAMY,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACvD,GAAI,CAACvB,KAAK,CAACsB,SAAS,CAACf,QAAX,CAAqBgB,SAAS,CAAChB,QAA/B,CAAV,CAAoD,CAClD,MAAO,MAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAND,CAQA,cAAeL,CAAAA,KAAK,CAACsB,IAAN,CAAWnB,eAAX,CAA4BgB,sBAA5B,CAAf","sourcesContent":["import Tooltip from './Tooltip';\n\nimport {STATISTIC_CONFIGS} from '../constants';\nimport {toTitleCase} from '../utils/commonFunctions';\n\nimport {FilterIcon, InfoIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLongPress} from 'react-use';\n\nfunction StateHeaderCell({handleSort, sortData, setSortData, statistic}) {\n  const {t} = useTranslation();\n\n  const onLongPress = () => {\n    if (sortData.sortColumn === statistic) {\n      setSortData(\n        produce(sortData, (sortDataDraft) => {\n          sortDataDraft.delta = !sortData.delta;\n        })\n      );\n    }\n  };\n  const longPressEvent = useLongPress(onLongPress, {isPreventDefault: false});\n\n  return (\n    <div\n      className=\"cell heading\"\n      onClick={handleSort.bind(this, statistic)}\n      {...longPressEvent}\n    >\n      {sortData.sortColumn === statistic && (\n        <div\n          className={classnames('sort-icon', {\n            invert: sortData.isAscending,\n            [`is-${statistic}`]: sortData.delta,\n          })}\n        >\n          <FilterIcon size={10} />\n        </div>\n      )}\n      <div>{t(toTitleCase(STATISTIC_CONFIGS[statistic].displayName))}</div>\n      {statistic === 'other' && (\n        <Tooltip data={'Migrated cases or non-COVID deaths'}>\n          <InfoIcon size={14} />\n        </Tooltip>\n      )}\n    </div>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default React.memo(StateHeaderCell, isStateHeaderCellEqual);\n"]},"metadata":{},"sourceType":"module"}