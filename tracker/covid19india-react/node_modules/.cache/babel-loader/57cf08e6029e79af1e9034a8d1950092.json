{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapLegend.js\";\nimport { D3_TRANSITION_DURATION, MAP_LEGEND_HEIGHT, MAP_VIZS } from '../constants';\nimport { useResizeObserver } from '../hooks/useResizeObserver';\nimport { capitalize, formatNumber } from '../utils/commonFunctions';\nimport { range, quantile } from 'd3-array';\nimport { axisRight, axisBottom } from 'd3-axis';\nimport { format } from 'd3-format';\nimport { interpolate, interpolateRound, quantize } from 'd3-interpolate';\nimport { scaleLinear, scaleOrdinal, scaleBand } from 'd3-scale';\nimport { select } from 'd3-selection';\nimport React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nfunction MapLegend({\n  data,\n  mapViz,\n  mapScale,\n  statistic\n}) {\n  const {\n    t\n  } = useTranslation();\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    let {\n      width,\n      height\n    } = dimensions || wrapperRef.current.getBoundingClientRect();\n    if (!width || !height) ({\n      width,\n      height\n    } = wrapperRef.current.getBoundingClientRect());\n    if (!width || !height) return;\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg.select('.ramp').transition(t).attr('opacity', 0).attr('xlink:href', null);\n      svg.select('.bars').selectAll('rect').transition(t).attr('opacity', 0).remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n      const domainMax = mapScale.domain()[1];\n      const legend = svg.select('.circles').attr('transform', `translate(48,40)`).attr('text-anchor', 'middle');\n      legend.selectAll('circle').data([domainMax / 10, domainMax * 2 / 5, domainMax]).join('circle').attr('fill', 'none').attr('stroke', '#ccc').transition(t).attr('cy', d => -mapScale(d)).attr('r', mapScale);\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n      svg.select('.circleAxis').attr('transform', `translate(48,50)`).transition(t).call(axisRight(yScale).tickSize(0).tickPadding(0).tickValues([domainMax / 10, domainMax * 2 / 5, domainMax]).tickFormat(num => formatNumber(num, 'short'))).selectAll('.tick text').style('text-anchor', 'middle');\n      svg.select('.circleAxis').call(g => g.select('.domain').remove());\n    } else {\n      svg.call(() => legend({\n        svg: svg,\n        color: mapScale,\n        title: `${t(capitalize(statistic))} ${t('cases')}`,\n        width: width,\n        height: height,\n        ticks: 5,\n        tickFormat: function (d, i, n) {\n          if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) return;\n          if (i === n.length - 1) return formatNumber(d) + '+';\n          return formatNumber(d);\n        },\n        marginLeft: 2,\n        marginRight: 0\n      }));\n    }\n  }, [t, dimensions, mapScale, mapViz, statistic]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svg-parent maplegend\",\n    style: {\n      height: MAP_LEGEND_HEIGHT\n    },\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    id: \"legend\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"image\", {\n    className: \"ramp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"bars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"circles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"circleAxis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"axis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    className: \"axistext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"color-scale\",\n    style: {\n      position: 'absolute',\n      height: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = g => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height); // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n\n  let x; // Continuous\n\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n    x = color.copy().rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n    svg.select('.ramp').attr('class', 'ramp').attr('x', marginLeft).attr('y', marginTop).attr('width', width - marginLeft - marginRight).attr('height', height - marginTop - marginBottom).attr('preserveAspectRatio', 'none').attr('xlink:href', ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL());\n  } // Sequential\n  else if (color.interpolator) {\n      svg.select('.bars').selectAll('rect').transition(t).attr('opacity', 0).remove();\n      x = Object.assign(color.copy().interpolator(interpolateRound(marginLeft, width - marginRight)), {\n        range() {\n          return [marginLeft, width - marginRight];\n        }\n\n      });\n      svg.select('.ramp').attr('class', 'ramp').attr('x', marginLeft).attr('y', marginTop).attr('width', width - marginLeft - marginRight).attr('height', height - marginTop - marginBottom).attr('preserveAspectRatio', 'none').attr('xlink:href', ramp(color.interpolator()).toDataURL()).transition(t).attr('opacity', 1); // scaleSequentialQuantile doesnâ€™t implement ticks or tickFormat.\n\n      if (!x.ticks) {\n        if (tickValues === undefined) {\n          const n = Math.round(ticks + 1);\n          tickValues = range(n).map(i => quantile(color.domain(), i / (n - 1)));\n        }\n\n        if (typeof tickFormat !== 'function') {\n          tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n        }\n      }\n    } // Threshold\n    else if (color.invertExtent) {\n        const thresholds = color.thresholds ? color.thresholds() // scaleQuantize\n        : color.quantiles ? color.quantiles() // scaleQuantile\n        : color.domain(); // scaleThreshold\n\n        const thresholdFormat = tickFormat === undefined ? d => d : typeof tickFormat === 'string' ? format(tickFormat) : tickFormat;\n        x = scaleLinear().domain([-1, color.range().length - 1]).rangeRound([marginLeft, width - marginRight]);\n        svg.append('g').selectAll('rect').data(color.range()).join('rect').attr('x', (d, i) => x(i - 1)).attr('y', marginTop).attr('width', (d, i) => x(i) - x(i - 1)).attr('height', height - marginTop - marginBottom).attr('fill', d => d);\n        tickValues = range(-1, thresholds.length);\n\n        tickFormat = i => {\n          if (i === -1) return thresholdFormat(1);else if (i === thresholds.length - 1) return;else if (i === thresholds.length - 2) return thresholdFormat(thresholds[i] + '+', i);\n          return thresholdFormat(thresholds[i], i);\n        };\n      } // Ordinal\n      else {\n          svg.select('.ramp').transition(t).attr('opacity', 0).attr('xlink:href', null);\n\n          if (!ordinalWeights) {\n            x = scaleBand().domain(color.domain()).rangeRound([marginLeft, width - marginRight]);\n            svg.selectAll('rect').data(color.domain()).join('rect').attr('x', x).attr('y', marginTop).attr('width', Math.max(0, x.bandwidth() - 1)).attr('height', height - marginTop - marginBottom).attr('fill', color);\n          } else {\n            const widthScale = scaleLinear().domain([0, ordinalWeights.reduce((a, b) => a + b)]).rangeRound([0, width - marginLeft - marginRight]);\n            const xPos = ordinalWeights.map((w, i) => ordinalWeights.slice(0, i).reduce((acc, w) => acc + widthScale(w), marginLeft));\n            x = scaleOrdinal().domain(color.domain()).range(xPos);\n            svg.select('.bars').selectAll('rect').data(color.domain()).join(enter => enter.append('rect').attr('x', x).attr('width', (d, i) => widthScale(ordinalWeights[i]))).attr('y', marginTop).attr('height', height - marginTop - marginBottom).attr('fill', color).transition(t).attr('x', x).attr('width', (d, i) => widthScale(ordinalWeights[i])).attr('opacity', 1);\n          }\n\n          tickAdjust = () => {};\n        }\n\n  svg.select('.axis').attr('transform', `translate(0,${height - marginBottom})`).transition(t).attr('class', 'axis').call(axisBottom(x).ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined).tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined).tickSize(tickSize).tickValues(tickValues)).on('start', () => {\n    svg.call(tickAdjust).call(svg => svg.select('.domain').remove());\n  }).call(g => g.select('.axistext').attr('class', 'axistext').attr('x', marginLeft).attr('y', marginTop + marginBottom - height - 6).attr('fill', 'currentColor').attr('text-anchor', 'start').attr('font-weight', 'bold').text(title));\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = select('.color-scale').node();\n  const context = (canvas.width = n, canvas.height = 1, canvas).getContext('2d');\n\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n\n  return canvas;\n}","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/MapLegend.js"],"names":["D3_TRANSITION_DURATION","MAP_LEGEND_HEIGHT","MAP_VIZS","useResizeObserver","capitalize","formatNumber","range","quantile","axisRight","axisBottom","format","interpolate","interpolateRound","quantize","scaleLinear","scaleOrdinal","scaleBand","select","React","useEffect","useRef","useTranslation","MapLegend","data","mapViz","mapScale","statistic","t","svgRef","wrapperRef","dimensions","svg","current","width","height","getBoundingClientRect","BUBBLES","transition","duration","attr","selectAll","remove","text","domainMax","domain","legend","join","d","yScale","copy","call","tickSize","tickPadding","tickValues","tickFormat","num","style","g","color","title","ticks","i","n","CHOROPLETH","Number","isInteger","length","marginLeft","marginRight","position","marginTop","marginBottom","ordinalWeights","tickAdjust","x","Math","min","rangeRound","ramp","toDataURL","interpolator","Object","assign","undefined","round","map","invertExtent","thresholds","quantiles","thresholdFormat","append","max","bandwidth","widthScale","reduce","a","b","xPos","w","slice","acc","enter","on","node","canvas","context","getContext","fillStyle","fillRect"],"mappings":"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","sourcesContent":["import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_VIZS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useResizeObserver';\nimport {capitalize, formatNumber} from '../utils/commonFunctions';\n\nimport {range, quantile} from 'd3-array';\nimport {axisRight, axisBottom} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport React, {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction MapLegend({data, mapViz, mapScale, statistic}) {\n  const {t} = useTranslation();\n\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    let {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (!width || !height)\n      ({width, height} = wrapperRef.current.getBoundingClientRect());\n\n    if (!width || !height) return;\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat((num) => formatNumber(num, 'short'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          title: `${t(capitalize(statistic))} ${t('cases')}`,\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 0,\n        })\n      );\n    }\n  }, [t, dimensions, mapScale, mapViz, statistic]);\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{height: MAP_LEGEND_HEIGHT}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesnâ€™t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? format(tickFormat)\n        : tickFormat;\n\n    x = scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n"]},"metadata":{},"sourceType":"module"}