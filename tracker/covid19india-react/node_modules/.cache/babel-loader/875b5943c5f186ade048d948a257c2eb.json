{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Actions.js\";\nimport ActionsPanel from './ActionsPanel';\nimport { fetcher } from '../utils/commonFunctions';\nimport React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport useSWR from 'swr';\nconst Updates = lazy(() => import('./Updates'));\n\nconst Actions = ({\n  setDate,\n  dates\n}) => {\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', 0);\n  const [isTimelineMode, setIsTimelineMode] = useState(false);\n  const {\n    data: updates\n  } = useSWR('https://api.covid19india.org/updatelog/log.json', fetcher, {\n    revalidateOnFocus: true\n  });\n  useEffect(() => {\n    if (updates !== undefined) {\n      const lastTimestamp = updates.slice().reverse()[0].timestamp * 1000;\n\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }\n  }, [lastViewedLog, updates, setLastViewedLog, setNewUpdate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionsPanel, Object.assign({\n    lastViewedLog,\n    newUpdate,\n    isTimelineMode,\n    setIsTimelineMode,\n    showUpdates,\n    setDate,\n    dates,\n    setNewUpdate,\n    setShowUpdates\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), showUpdates && /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Updates, Object.assign({\n    updates\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst isEqual = (prevProps, currProps) => {\n  return true;\n};\n\nexport default React.memo(Actions, isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Actions.js"],"names":["ActionsPanel","fetcher","React","useState","useEffect","lazy","Suspense","useLocalStorage","useSWR","Updates","Actions","setDate","dates","showUpdates","setShowUpdates","newUpdate","setNewUpdate","lastViewedLog","setLastViewedLog","isTimelineMode","setIsTimelineMode","data","updates","revalidateOnFocus","undefined","lastTimestamp","slice","reverse","timestamp","isEqual","prevProps","currProps","memo"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,SAAQC,OAAR,QAAsB,0BAAtB;AAEA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,IAApC,EAA0CC,QAA1C,QAAyD,OAAzD;AACA,SAAQC,eAAR,QAA8B,WAA9B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,MAAMC,OAAO,GAAGJ,IAAI,CAAC,MAAM,OAAO,WAAP,CAAP,CAApB;;AAEA,MAAMK,OAAO,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BT,eAAe,CAAC,WAAD,EAAc,KAAd,CAAjD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,eAAe,CAAC,eAAD,EAAkB,CAAlB,CAAzD;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM;AAACkB,IAAAA,IAAI,EAAEC;AAAP,MAAkBd,MAAM,CAC5B,iDAD4B,EAE5BP,OAF4B,EAG5B;AACEsB,IAAAA,iBAAiB,EAAE;AADrB,GAH4B,CAA9B;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,OAAO,KAAKE,SAAhB,EAA2B;AACzB,YAAMC,aAAa,GAAGH,OAAO,CAACI,KAAR,GAAgBC,OAAhB,GAA0B,CAA1B,EAA6BC,SAA7B,GAAyC,IAA/D;;AACA,UAAIH,aAAa,KAAKR,aAAtB,EAAqC;AACnCD,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,gBAAgB,CAACO,aAAD,CAAhB;AACD;AACF;AACF,GARQ,EAQN,CAACR,aAAD,EAAgBK,OAAhB,EAAyBJ,gBAAzB,EAA2CF,YAA3C,CARM,CAAT;AAUA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD,gBACM;AACFC,IAAAA,aADE;AAEFF,IAAAA,SAFE;AAGFI,IAAAA,cAHE;AAIFC,IAAAA,iBAJE;AAKFP,IAAAA,WALE;AAMFF,IAAAA,OANE;AAOFC,IAAAA,KAPE;AAQFI,IAAAA,YARE;AASFF,IAAAA;AATE,GADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAeGD,WAAW,iBACV,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,gBAAa;AAACS,IAAAA;AAAD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAhBJ,CADF;AAuBD,CA/CD;;AAiDA,MAAMO,OAAO,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACxC,SAAO,IAAP;AACD,CAFD;;AAIA,eAAe7B,KAAK,CAAC8B,IAAN,CAAWtB,OAAX,EAAoBmB,OAApB,CAAf","sourcesContent":["import ActionsPanel from './ActionsPanel';\n\nimport {fetcher} from '../utils/commonFunctions';\n\nimport React, {useState, useEffect, lazy, Suspense} from 'react';\nimport {useLocalStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst Updates = lazy(() => import('./Updates'));\n\nconst Actions = ({setDate, dates}) => {\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', 0);\n  const [isTimelineMode, setIsTimelineMode] = useState(false);\n\n  const {data: updates} = useSWR(\n    'https://api.covid19india.org/updatelog/log.json',\n    fetcher,\n    {\n      revalidateOnFocus: true,\n    }\n  );\n\n  useEffect(() => {\n    if (updates !== undefined) {\n      const lastTimestamp = updates.slice().reverse()[0].timestamp * 1000;\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }\n  }, [lastViewedLog, updates, setLastViewedLog, setNewUpdate]);\n\n  return (\n    <React.Fragment>\n      <ActionsPanel\n        {...{\n          lastViewedLog,\n          newUpdate,\n          isTimelineMode,\n          setIsTimelineMode,\n          showUpdates,\n          setDate,\n          dates,\n          setNewUpdate,\n          setShowUpdates,\n        }}\n      />\n\n      {showUpdates && (\n        <Suspense fallback={<div />}>\n          <Updates {...{updates}} />\n        </Suspense>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  return true;\n};\n\nexport default React.memo(Actions, isEqual);\n"]},"metadata":{},"sourceType":"module"}