{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/ubuntu/myprojectdir/tracker/covid19india-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import DeltaBarGraph from'./DeltaBarGraph';import Footer from'./Footer';import Level from'./Level';import MapSwitcher from'./MapSwitcher';import StateHeader from'./StateHeader';import StateMeta from'./StateMeta';import{API_ROOT_URL,STATE_NAMES}from'../constants';import useIsVisible from'../hooks/useIsVisible';import{fetcher,formatNumber,getStatistic}from'../utils/commonFunctions';import classnames from'classnames';import React,{useMemo,useState,useEffect,lazy,Suspense,useRef}from'react';import{Smile}from'react-feather';import{Helmet}from'react-helmet';import{useTranslation}from'react-i18next';import{useParams}from'react-router-dom';import{useSessionStorage}from'react-use';import useSWR from'swr';var TimeseriesExplorer=lazy(function(){return import('./TimeseriesExplorer');});var MapExplorer=lazy(function(){return import('./MapExplorer');});var Minigraphs=lazy(function(){return import('./Minigraphs');});function State(){var _timeseries$stateCode,_timeseries$stateCode2,_data$stateCode2,_timeseries$stateCode3,_timeseries$stateCode4,_data$stateCode3;var _useTranslation=useTranslation(),t=_useTranslation.t;var stateCode=useParams().stateCode.toUpperCase();var _useSessionStorage=useSessionStorage('mapStatistic','active'),_useSessionStorage2=_slicedToArray(_useSessionStorage,2),mapStatistic=_useSessionStorage2[0],setMapStatistic=_useSessionStorage2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAllDistricts=_useState2[0],setShowAllDistricts=_useState2[1];var _useState3=useState({stateCode:stateCode,districtName:null}),_useState4=_slicedToArray(_useState3,2),regionHighlighted=_useState4[0],setRegionHighlighted=_useState4[1];useEffect(function(){if(regionHighlighted.stateCode!==stateCode){setRegionHighlighted({stateCode:stateCode,districtName:null});setShowAllDistricts(false);}},[regionHighlighted.stateCode,stateCode]);var _useSWR=useSWR(\"\".concat(API_ROOT_URL,\"/timeseries-\").concat(stateCode,\".min.json\"),fetcher,{revalidateOnMount:true,refreshInterval:100000}),timeseries=_useSWR.data,timeseriesResponseError=_useSWR.error;var _useSWR2=useSWR(\"\".concat(API_ROOT_URL,\"/data.min.json\"),fetcher,{revalidateOnMount:true,refreshInterval:100000}),data=_useSWR2.data;var toggleShowAllDistricts=function toggleShowAllDistricts(){setShowAllDistricts(!showAllDistricts);};var handleSort=function handleSort(districtNameA,districtNameB){var districtA=data[stateCode].districts[districtNameA];var districtB=data[stateCode].districts[districtNameB];return getStatistic(districtB,'total',mapStatistic)-getStatistic(districtA,'total',mapStatistic);};var gridRowCount=useMemo(function(){var _data$stateCode;if(!data)return;var gridColumnCount=window.innerWidth>=540?3:2;var districtCount=((_data$stateCode=data[stateCode])===null||_data$stateCode===void 0?void 0:_data$stateCode.districts)?Object.keys(data[stateCode].districts).filter(function(districtName){return districtName!=='Unknown';}).length:0;var gridRowCount=Math.ceil(districtCount/gridColumnCount);return gridRowCount;},[data,stateCode]);var stateMetaElement=useRef();var isStateMetaVisible=useIsVisible(stateMetaElement,{once:true});var trail=useMemo(function(){var styles=[];[0,0,0,0].map(function(element,index){styles.push({animationDelay:\"\".concat(index*250,\"ms\")});return null;});return styles;},[]);var lookback=showAllDistricts?window.innerWidth>=540?10:8:6;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,\"Coronavirus Outbreak in \",STATE_NAMES[stateCode],\" - covid19india.org\"),/*#__PURE__*/React.createElement(\"meta\",{name:\"title\",content:\"Coronavirus Outbreak in \".concat(STATE_NAMES[stateCode],\": Latest Map and Case Count\")})),/*#__PURE__*/React.createElement(\"div\",{className:\"State\"},/*#__PURE__*/React.createElement(\"div\",{className:\"state-left\"},/*#__PURE__*/React.createElement(StateHeader,{data:data===null||data===void 0?void 0:data[stateCode],stateCode:stateCode}),/*#__PURE__*/React.createElement(\"div\",{style:{position:'relative'}},/*#__PURE__*/React.createElement(MapSwitcher,{mapStatistic:mapStatistic,setMapStatistic:setMapStatistic}),/*#__PURE__*/React.createElement(Level,{data:data===null||data===void 0?void 0:data[stateCode]}),/*#__PURE__*/React.createElement(Minigraphs,Object.assign({timeseries:timeseries===null||timeseries===void 0?void 0:(_timeseries$stateCode=timeseries[stateCode])===null||_timeseries$stateCode===void 0?void 0:_timeseries$stateCode.dates},{stateCode:stateCode},{forceRender:!!timeseriesResponseError}))),data&&/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",{style:{minHeight:'50rem'}})},/*#__PURE__*/React.createElement(MapExplorer,{stateCode:stateCode,data:data,regionHighlighted:regionHighlighted,setRegionHighlighted:setRegionHighlighted,mapStatistic:mapStatistic,setMapStatistic:setMapStatistic})),/*#__PURE__*/React.createElement(\"span\",{ref:stateMetaElement}),data&&isStateMetaVisible&&/*#__PURE__*/React.createElement(StateMeta,Object.assign({stateCode:stateCode,data:data},{timeseries:timeseries===null||timeseries===void 0?void 0:(_timeseries$stateCode2=timeseries[stateCode])===null||_timeseries$stateCode2===void 0?void 0:_timeseries$stateCode2.dates}))),/*#__PURE__*/React.createElement(\"div\",{className:\"state-right\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar\",style:!showAllDistricts?{display:'flex'}:{}},/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar-top\"},/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar-left\"},/*#__PURE__*/React.createElement(\"h2\",{className:classnames(mapStatistic,'fadeInUp'),style:trail[0]},\"Top districts\"),/*#__PURE__*/React.createElement(\"div\",{className:\"districts fadeInUp \".concat(showAllDistricts?'is-grid':''),style:showAllDistricts?_objectSpread({gridTemplateRows:\"repeat(\".concat(gridRowCount,\", 2rem)\")},trail[1]):trail[1]},Object.keys((data===null||data===void 0?void 0:(_data$stateCode2=data[stateCode])===null||_data$stateCode2===void 0?void 0:_data$stateCode2.districts)||{}).filter(function(districtName){return districtName!=='Unknown';}).sort(function(a,b){return handleSort(a,b);}).slice(0,showAllDistricts?undefined:5).map(function(districtName){var total=getStatistic(data[stateCode].districts[districtName],'total',mapStatistic);var delta=getStatistic(data[stateCode].districts[districtName],'delta',mapStatistic);return/*#__PURE__*/React.createElement(\"div\",{key:districtName,className:\"district\"},/*#__PURE__*/React.createElement(\"h2\",null,formatNumber(total)),/*#__PURE__*/React.createElement(\"h5\",null,t(districtName)),mapStatistic!=='active'&&/*#__PURE__*/React.createElement(\"div\",{className:\"delta\"},/*#__PURE__*/React.createElement(\"h6\",{className:mapStatistic},delta>0?\"\\u2191\"+formatNumber(delta):'')));}))),/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar-right fadeInUp\",style:trail[2]},timeseries&&(mapStatistic==='confirmed'||mapStatistic==='deceased')&&/*#__PURE__*/React.createElement(\"div\",{className:\"happy-sign\"},Object.keys(((_timeseries$stateCode3=timeseries[stateCode])===null||_timeseries$stateCode3===void 0?void 0:_timeseries$stateCode3.dates)||{}).slice(-lookback).every(function(date){return getStatistic(timeseries[stateCode].dates[date],'delta',mapStatistic)===0;})&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert \".concat(mapStatistic==='confirmed'?'is-green':'')},/*#__PURE__*/React.createElement(Smile,null),/*#__PURE__*/React.createElement(\"div\",{className:\"alert-right\"},\"No new \",mapStatistic,\" cases in the past five days\"))),/*#__PURE__*/React.createElement(DeltaBarGraph,Object.assign({timeseries:timeseries===null||timeseries===void 0?void 0:(_timeseries$stateCode4=timeseries[stateCode])===null||_timeseries$stateCode4===void 0?void 0:_timeseries$stateCode4.dates,statistic:mapStatistic},{stateCode:stateCode,lookback:lookback},{forceRender:!!timeseriesResponseError})))),/*#__PURE__*/React.createElement(\"div\",{className:\"district-bar-bottom\"},Object.keys((data===null||data===void 0?void 0:(_data$stateCode3=data[stateCode])===null||_data$stateCode3===void 0?void 0:_data$stateCode3.districts)||{}).length>5?/*#__PURE__*/React.createElement(\"button\",{className:\"button fadeInUp\",onClick:toggleShowAllDistricts,style:trail[3]},/*#__PURE__*/React.createElement(\"span\",null,showAllDistricts?\"View less\":\"View all\")):/*#__PURE__*/React.createElement(\"div\",{style:{height:'3.75rem',flexBasis:'15%'}}))),/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",null)},/*#__PURE__*/React.createElement(TimeseriesExplorer,Object.assign({stateCode:stateCode,timeseries:timeseries,regionHighlighted:regionHighlighted,setRegionHighlighted:setRegionHighlighted},{forceRender:!!timeseriesResponseError})))))),/*#__PURE__*/React.createElement(Footer,null));}export default React.memo(State);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/State.js"],"names":["DeltaBarGraph","Footer","Level","MapSwitcher","StateHeader","StateMeta","API_ROOT_URL","STATE_NAMES","useIsVisible","fetcher","formatNumber","getStatistic","classnames","React","useMemo","useState","useEffect","lazy","Suspense","useRef","Smile","Helmet","useTranslation","useParams","useSessionStorage","useSWR","TimeseriesExplorer","MapExplorer","Minigraphs","State","t","stateCode","toUpperCase","mapStatistic","setMapStatistic","showAllDistricts","setShowAllDistricts","districtName","regionHighlighted","setRegionHighlighted","revalidateOnMount","refreshInterval","timeseries","data","timeseriesResponseError","error","toggleShowAllDistricts","handleSort","districtNameA","districtNameB","districtA","districts","districtB","gridRowCount","gridColumnCount","window","innerWidth","districtCount","Object","keys","filter","length","Math","ceil","stateMetaElement","isStateMetaVisible","once","trail","styles","map","element","index","push","animationDelay","lookback","position","dates","minHeight","display","gridTemplateRows","sort","a","b","slice","undefined","total","delta","every","date","height","flexBasis","memo"],"mappings":"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","sourcesContent":["import DeltaBarGraph from './DeltaBarGraph';\nimport Footer from './Footer';\nimport Level from './Level';\nimport MapSwitcher from './MapSwitcher';\nimport StateHeader from './StateHeader';\nimport StateMeta from './StateMeta';\n\nimport {API_ROOT_URL, STATE_NAMES} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {fetcher, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport React, {\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport {Smile} from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst TimeseriesExplorer = lazy(() => import('./TimeseriesExplorer'));\nconst MapExplorer = lazy(() => import('./MapExplorer'));\nconst Minigraphs = lazy(() => import('./Minigraphs'));\n\nfunction State() {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n  }, [regionHighlighted.stateCode, stateCode]);\n\n  const {data: timeseries, error: timeseriesResponseError} = useSWR(\n    `${API_ROOT_URL}/timeseries-${stateCode}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n  const {data} = useSWR(`${API_ROOT_URL}/data.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000,\n  });\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = data[stateCode].districts[districtNameA];\n    const districtB = data[stateCode].districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!data) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = data[stateCode]?.districts\n      ? Object.keys(data[stateCode].districts).filter(\n          (districtName) => districtName !== 'Unknown'\n        ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [data, stateCode]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement, {once: true});\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={data?.[stateCode]} stateCode={stateCode} />\n\n          <div style={{position: 'relative'}}>\n            <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n            <Level data={data?.[stateCode]} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{stateCode}}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {data && (\n            <Suspense fallback={<div style={{minHeight: '50rem'}} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {data && isStateMetaVisible && (\n            <StateMeta\n              {...{\n                stateCode,\n                data,\n              }}\n              timeseries={timeseries?.[stateCode]?.dates}\n            />\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <React.Fragment>\n            <div\n              className=\"district-bar\"\n              style={!showAllDistricts ? {display: 'flex'} : {}}\n            >\n              <div className=\"district-bar-top\">\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(mapStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    Top districts\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${\n                      showAllDistricts ? 'is-grid' : ''\n                    }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                            gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                            ...trail[1],\n                          }\n                        : trail[1]\n                    }\n                  >\n                    {Object.keys(data?.[stateCode]?.districts || {})\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'total',\n                          mapStatistic\n                        );\n                        const delta = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'delta',\n                          mapStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {mapStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={mapStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (mapStatistic === 'confirmed' ||\n                      mapStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                mapStatistic\n                              ) === 0\n                          ) && (\n                          <div\n                            className={`alert ${\n                              mapStatistic === 'confirmed' ? 'is-green' : ''\n                            }`}\n                          >\n                            <Smile />\n                            <div className=\"alert-right\">\n                              No new {mapStatistic} cases in the past five days\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={mapStatistic}\n                    {...{stateCode, lookback}}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {Object.keys(data?.[stateCode]?.districts || {}).length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>{showAllDistricts ? `View less` : `View all`}</span>\n                  </button>\n                ) : (\n                  <div style={{height: '3.75rem', flexBasis: '15%'}} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n            </Suspense>\n          </React.Fragment>\n        </div>\n      </div>\n\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(State);\n"]},"metadata":{},"sourceType":"module"}