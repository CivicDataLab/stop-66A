{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Table.js\";\nimport HeaderCell from './HeaderCell';\nimport TableLoader from './loaders/Table';\nimport TableDeltaHelper from './snippets/TableDeltaHelper';\nimport { TABLE_FADE_IN, TABLE_FADE_OUT } from '../animations';\nimport { DISTRICT_TABLE_COUNT, STATE_NAMES, STATISTIC_CONFIGS, TABLE_STATISTICS, TABLE_STATISTICS_EXPANDED, UNASSIGNED_STATE_CODE } from '../constants';\nimport { getTableStatistic, parseIndiaDate } from '../utils/commonFunctions';\nimport { FilterIcon, FoldDownIcon, InfoIcon, OrganizationIcon, QuestionIcon } from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport { max } from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, { useCallback, useEffect, useMemo, useState, lazy } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { useTrail, useTransition, animated, config } from 'react-spring';\nimport { useSessionStorage } from 'react-use'; // eslint-disable-next-line\n\nimport worker from 'workerize-loader!../workers/getDistricts';\nconst Row = lazy(() => import('./Row'));\n\nfunction Table({\n  data: states,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  setExpandTable\n}) {\n  const {\n    t\n  } = useTranslation();\n  const [sortData, setSortData] = useSessionStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false\n  });\n  const handleSortClick = useCallback(statistic => {\n    if (sortData.sortColumn !== statistic) {\n      setSortData(produce(sortData, draftSortData => {\n        draftSortData.sortColumn = statistic;\n      }));\n    } else {\n      setSortData(produce(sortData, draftSortData => {\n        draftSortData.isAscending = !sortData.isAscending;\n      }));\n    }\n  }, [sortData, setSortData]);\n  const trail = useTrail(3, {\n    from: {\n      transform: 'translate3d(0, 10px, 0)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translate3d(0, 0px, 0)',\n      opacity: 1\n    },\n    config: config.wobbly\n  });\n  const [districts, setDistricts] = useState();\n  const [tableOption, setTableOption] = useState('States');\n  const [isPerMillion, setIsPerMillion] = useState(false);\n  const [isInfoVisible, setIsInfoVisible] = useState(false);\n  const lastUpdatedTT = useMemo(() => {\n    var _states$TT, _states$TT$meta, _states$TT2, _states$TT2$meta, _states$TT2$meta$test;\n\n    const updatedDates = [((_states$TT = states['TT']) === null || _states$TT === void 0 ? void 0 : (_states$TT$meta = _states$TT.meta) === null || _states$TT$meta === void 0 ? void 0 : _states$TT$meta['last_updated']) || timelineDate, (_states$TT2 = states['TT']) === null || _states$TT2 === void 0 ? void 0 : (_states$TT2$meta = _states$TT2.meta) === null || _states$TT2$meta === void 0 ? void 0 : (_states$TT2$meta$test = _states$TT2$meta.tested) === null || _states$TT2$meta$test === void 0 ? void 0 : _states$TT2$meta$test['last_updated']];\n    return max(updatedDates.filter(date => date).map(date => parseIndiaDate(date)));\n  }, [states, timelineDate]);\n  const sortingFunction = useCallback((regionKeyA, regionKeyB) => {\n    if (sortData.sortColumn !== 'regionName') {\n      const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n      const dataType = sortData.delta && !statisticConfig.hideDelta ? 'delta' : 'total';\n      const statisticA = getTableStatistic((districts === null || districts === void 0 ? void 0 : districts[regionKeyA]) || states[regionKeyA], sortData.sortColumn, isPerMillion, lastUpdatedTT)[dataType];\n      const statisticB = getTableStatistic((districts === null || districts === void 0 ? void 0 : districts[regionKeyB]) || states[regionKeyB], sortData.sortColumn, isPerMillion, lastUpdatedTT)[dataType];\n      return sortData.isAscending ? statisticA - statisticB : statisticB - statisticA;\n    } else {\n      var _districts$regionKeyA, _districts$regionKeyB;\n\n      const regionNameA = (districts === null || districts === void 0 ? void 0 : (_districts$regionKeyA = districts[regionKeyA]) === null || _districts$regionKeyA === void 0 ? void 0 : _districts$regionKeyA.districtName) || STATE_NAMES[regionKeyA];\n      const regionNameB = (districts === null || districts === void 0 ? void 0 : (_districts$regionKeyB = districts[regionKeyB]) === null || _districts$regionKeyB === void 0 ? void 0 : _districts$regionKeyB.districtName) || STATE_NAMES[regionKeyB];\n      return sortData.isAscending ? regionNameA.localeCompare(regionNameB) : regionNameB.localeCompare(regionNameA);\n    }\n  }, [districts, isPerMillion, lastUpdatedTT, sortData.delta, sortData.isAscending, sortData.sortColumn, states]);\n\n  const _setTableOption = useCallback(() => {\n    setTableOption(prevTableOption => prevTableOption === 'States' ? 'Districts' : 'States');\n  }, []);\n\n  useEffect(() => {\n    const workerInstance = worker();\n    workerInstance.getDistricts(states);\n    workerInstance.addEventListener('message', message => {\n      if (message.data.type !== 'RPC') {\n        setDistricts(message.data);\n        workerInstance.terminate();\n      }\n    });\n  }, [tableOption, states]);\n  const transition = useTransition(isInfoVisible, null, {\n    from: TABLE_FADE_OUT,\n    enter: TABLE_FADE_IN,\n    leave: TABLE_FADE_OUT\n  });\n  const tableStatistics = expandTable ? TABLE_STATISTICS_EXPANDED : TABLE_STATISTICS;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: classnames('option-toggle', {\n      'is-highlighted': tableOption === 'Districts'\n    }),\n    onClick: _setTableOption,\n    style: trail[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OrganizationIcon, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(animated.div, {\n    className: classnames('million-toggle', {\n      'is-highlighted': isPerMillion\n    }),\n    onClick: setIsPerMillion.bind(this, !isPerMillion),\n    style: trail[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"10L\")), /*#__PURE__*/React.createElement(animated.div, {\n    className: classnames('info-toggle', {\n      'is-highlighted': isInfoVisible\n    }),\n    onClick: setIsInfoVisible.bind(this, !isInfoVisible),\n    style: trail[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionIcon, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(animated.div, {\n    className: classnames('expand-table-toggle', {\n      'is-highlighted': expandTable\n    }),\n    style: trail[1],\n    onClick: setExpandTable.bind(this, !expandTable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FoldDownIcon, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }))), transition.map(({\n    item,\n    key,\n    props\n  }) => item ? /*#__PURE__*/React.createElement(animated.div, {\n    key: key,\n    className: \"table-helper\",\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helper-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helper-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(OrganizationIcon, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, `Toggle between States/Districts`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, \"10L\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, \"Per Ten Lakh People\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FilterIcon, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, \"Sort by Descending\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item sort invert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FilterIcon, {\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, \"Sort by Ascending\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableDeltaHelper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    size: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, \"Notes\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"helper-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, \"Units\")), Object.entries({\n    '1K': 3,\n    '1L': 5,\n    '1Cr': 7\n  }).map(([abbr, exp]) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    key: abbr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 23\n    }\n  }, abbr), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 23\n    }\n  }, \"10\", /*#__PURE__*/React.createElement(\"sup\", {\n    style: {\n      verticalAlign: 'baseline',\n      position: 'relative',\n      top: '-.4em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, exp)))))), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, t('Compiled from State Govt. numbers'), \",\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, t('know more'), \"!\"))) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table fadeInUp\",\n    style: {\n      gridTemplateColumns: `repeat(${tableStatistics.length + 1}, auto)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cell heading\",\n    onClick: handleSortClick.bind(this, 'regionName'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, t(tableOption === 'States' ? 'State/UT' : 'District')), sortData.sortColumn === 'regionName' && /*#__PURE__*/React.createElement(\"div\", {\n    className: classnames('sort-icon', {\n      invert: sortData.isAscending\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FilterIcon, {\n    size: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  }))), tableStatistics.map(statistic => /*#__PURE__*/React.createElement(HeaderCell, Object.assign({\n    key: statistic\n  }, {\n    statistic,\n    sortData,\n    setSortData\n  }, {\n    handleSort: handleSortClick.bind(this, statistic),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  })))), tableOption === 'States' && Object.keys(states).filter(stateCode => stateCode !== 'TT' && !(stateCode === UNASSIGNED_STATE_CODE && isPerMillion)).sort((a, b) => sortingFunction(a, b)).map(stateCode => {\n    return /*#__PURE__*/React.createElement(Row, Object.assign({\n      key: stateCode,\n      data: states[stateCode]\n    }, {\n      stateCode,\n      isPerMillion,\n      regionHighlighted,\n      setRegionHighlighted,\n      expandTable,\n      lastUpdatedTT\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }));\n  }), tableOption === 'Districts' && !districts && /*#__PURE__*/React.createElement(TableLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 57\n    }\n  }), tableOption === 'Districts' && districts && Object.keys(districts).sort((a, b) => sortingFunction(a, b)).slice(0, DISTRICT_TABLE_COUNT).map(districtKey => {\n    return /*#__PURE__*/React.createElement(Row, Object.assign({\n      key: districtKey,\n      data: districts[districtKey],\n      districtName: districts[districtKey].districtName\n    }, {\n      isPerMillion,\n      regionHighlighted,\n      setRegionHighlighted,\n      expandTable,\n      lastUpdatedTT\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Row, Object.assign({\n    key: 'TT',\n    data: states['TT'],\n    stateCode: 'TT'\n  }, {\n    isPerMillion,\n    regionHighlighted,\n    setRegionHighlighted,\n    expandTable,\n    lastUpdatedTT\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  })))));\n}\n\nconst isEqual = (prevProps, currProps) => {\n  var _prevProps$regionHigh, _currProps$regionHigh, _prevProps$regionHigh2, _currProps$regionHigh2;\n\n  if (!equal((_prevProps$regionHigh = prevProps.regionHighlighted) === null || _prevProps$regionHigh === void 0 ? void 0 : _prevProps$regionHigh.districtName, (_currProps$regionHigh = currProps.regionHighlighted) === null || _currProps$regionHigh === void 0 ? void 0 : _currProps$regionHigh.districtName)) {\n    return false;\n  } else if (!equal((_prevProps$regionHigh2 = prevProps.regionHighlighted) === null || _prevProps$regionHigh2 === void 0 ? void 0 : _prevProps$regionHigh2.stateCode, (_currProps$regionHigh2 = currProps.regionHighlighted) === null || _currProps$regionHigh2 === void 0 ? void 0 : _currProps$regionHigh2.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.date, currProps.date)) {\n    return false;\n  } else if (!equal(prevProps.data['TT'].total.confirmed, currProps.data['TT'].total.confirmed)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Table, isEqual);","map":{"version":3,"sources":["/home/ubuntu/myprojectdir/tracker/covid19india-react/src/components/Table.js"],"names":["HeaderCell","TableLoader","TableDeltaHelper","TABLE_FADE_IN","TABLE_FADE_OUT","DISTRICT_TABLE_COUNT","STATE_NAMES","STATISTIC_CONFIGS","TABLE_STATISTICS","TABLE_STATISTICS_EXPANDED","UNASSIGNED_STATE_CODE","getTableStatistic","parseIndiaDate","FilterIcon","FoldDownIcon","InfoIcon","OrganizationIcon","QuestionIcon","classnames","max","equal","produce","React","useCallback","useEffect","useMemo","useState","lazy","useTranslation","Link","useTrail","useTransition","animated","config","useSessionStorage","worker","Row","Table","data","states","date","timelineDate","regionHighlighted","setRegionHighlighted","expandTable","setExpandTable","t","sortData","setSortData","sortColumn","isAscending","delta","handleSortClick","statistic","draftSortData","trail","from","transform","opacity","to","wobbly","districts","setDistricts","tableOption","setTableOption","isPerMillion","setIsPerMillion","isInfoVisible","setIsInfoVisible","lastUpdatedTT","updatedDates","meta","tested","filter","map","sortingFunction","regionKeyA","regionKeyB","statisticConfig","dataType","hideDelta","statisticA","statisticB","regionNameA","districtName","regionNameB","localeCompare","_setTableOption","prevTableOption","workerInstance","getDistricts","addEventListener","message","type","terminate","transition","enter","leave","tableStatistics","bind","item","key","props","Object","entries","abbr","exp","verticalAlign","position","top","gridTemplateColumns","length","invert","keys","stateCode","sort","a","b","slice","districtKey","isEqual","prevProps","currProps","total","confirmed","memo"],"mappings":"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","sourcesContent":["import HeaderCell from './HeaderCell';\nimport TableLoader from './loaders/Table';\nimport TableDeltaHelper from './snippets/TableDeltaHelper';\n\nimport {TABLE_FADE_IN, TABLE_FADE_OUT} from '../animations';\nimport {\n  DISTRICT_TABLE_COUNT,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  TABLE_STATISTICS,\n  TABLE_STATISTICS_EXPANDED,\n  UNASSIGNED_STATE_CODE,\n} from '../constants';\nimport {getTableStatistic, parseIndiaDate} from '../utils/commonFunctions';\n\nimport {\n  FilterIcon,\n  FoldDownIcon,\n  InfoIcon,\n  OrganizationIcon,\n  QuestionIcon,\n} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {max} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useCallback, useEffect, useMemo, useState, lazy} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, useTransition, animated, config} from 'react-spring';\nimport {useSessionStorage} from 'react-use';\n// eslint-disable-next-line\nimport worker from 'workerize-loader!../workers/getDistricts';\n\nconst Row = lazy(() => import('./Row'));\n\nfunction Table({\n  data: states,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  expandTable,\n  setExpandTable,\n}) {\n  const {t} = useTranslation();\n  const [sortData, setSortData] = useSessionStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n    delta: false,\n  });\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      if (sortData.sortColumn !== statistic) {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            draftSortData.sortColumn = statistic;\n          })\n        );\n      } else {\n        setSortData(\n          produce(sortData, (draftSortData) => {\n            draftSortData.isAscending = !sortData.isAscending;\n          })\n        );\n      }\n    },\n    [sortData, setSortData]\n  );\n\n  const trail = useTrail(3, {\n    from: {transform: 'translate3d(0, 10px, 0)', opacity: 0},\n    to: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\n    config: config.wobbly,\n  });\n\n  const [districts, setDistricts] = useState();\n\n  const [tableOption, setTableOption] = useState('States');\n  const [isPerMillion, setIsPerMillion] = useState(false);\n  const [isInfoVisible, setIsInfoVisible] = useState(false);\n\n  const lastUpdatedTT = useMemo(() => {\n    const updatedDates = [\n      states['TT']?.meta?.['last_updated'] || timelineDate,\n      states['TT']?.meta?.tested?.['last_updated'],\n    ];\n    return max(\n      updatedDates.filter((date) => date).map((date) => parseIndiaDate(date))\n    );\n  }, [states, timelineDate]);\n\n  const sortingFunction = useCallback(\n    (regionKeyA, regionKeyB) => {\n      if (sortData.sortColumn !== 'regionName') {\n        const statisticConfig = STATISTIC_CONFIGS[sortData.sortColumn];\n        const dataType =\n          sortData.delta && !statisticConfig.hideDelta ? 'delta' : 'total';\n\n        const statisticA = getTableStatistic(\n          districts?.[regionKeyA] || states[regionKeyA],\n          sortData.sortColumn,\n          isPerMillion,\n          lastUpdatedTT\n        )[dataType];\n        const statisticB = getTableStatistic(\n          districts?.[regionKeyB] || states[regionKeyB],\n          sortData.sortColumn,\n          isPerMillion,\n          lastUpdatedTT\n        )[dataType];\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        const regionNameA =\n          districts?.[regionKeyA]?.districtName || STATE_NAMES[regionKeyA];\n        const regionNameB =\n          districts?.[regionKeyB]?.districtName || STATE_NAMES[regionKeyB];\n        return sortData.isAscending\n          ? regionNameA.localeCompare(regionNameB)\n          : regionNameB.localeCompare(regionNameA);\n      }\n    },\n    [\n      districts,\n      isPerMillion,\n      lastUpdatedTT,\n      sortData.delta,\n      sortData.isAscending,\n      sortData.sortColumn,\n      states,\n    ]\n  );\n\n  const _setTableOption = useCallback(() => {\n    setTableOption((prevTableOption) =>\n      prevTableOption === 'States' ? 'Districts' : 'States'\n    );\n  }, []);\n\n  useEffect(() => {\n    const workerInstance = worker();\n    workerInstance.getDistricts(states);\n    workerInstance.addEventListener('message', (message) => {\n      if (message.data.type !== 'RPC') {\n        setDistricts(message.data);\n        workerInstance.terminate();\n      }\n    });\n  }, [tableOption, states]);\n\n  const transition = useTransition(isInfoVisible, null, {\n    from: TABLE_FADE_OUT,\n    enter: TABLE_FADE_IN,\n    leave: TABLE_FADE_OUT,\n  });\n\n  const tableStatistics = expandTable\n    ? TABLE_STATISTICS_EXPANDED\n    : TABLE_STATISTICS;\n\n  return (\n    <React.Fragment>\n      <div className=\"table-top\">\n        <animated.div\n          className={classnames('option-toggle', {\n            'is-highlighted': tableOption === 'Districts',\n          })}\n          onClick={_setTableOption}\n          style={trail[0]}\n        >\n          <OrganizationIcon size={14} />\n        </animated.div>\n\n        <animated.div\n          className={classnames('million-toggle', {\n            'is-highlighted': isPerMillion,\n          })}\n          onClick={setIsPerMillion.bind(this, !isPerMillion)}\n          style={trail[0]}\n        >\n          <span>10L</span>\n        </animated.div>\n\n        <animated.div\n          className={classnames('info-toggle', {\n            'is-highlighted': isInfoVisible,\n          })}\n          onClick={setIsInfoVisible.bind(this, !isInfoVisible)}\n          style={trail[0]}\n        >\n          <QuestionIcon size={14} />\n        </animated.div>\n\n        <animated.div\n          className={classnames('expand-table-toggle', {\n            'is-highlighted': expandTable,\n          })}\n          style={trail[1]}\n          onClick={setExpandTable.bind(this, !expandTable)}\n        >\n          <FoldDownIcon size={16} />\n        </animated.div>\n      </div>\n\n      {transition.map(({item, key, props}) =>\n        item ? (\n          <animated.div key={key} className=\"table-helper\" style={props}>\n            <div className=\"helper-top\">\n              <div className=\"helper-left\">\n                <div className=\"info-item\">\n                  <span>\n                    <OrganizationIcon size={14} />\n                  </span>\n                  <p>{`Toggle between States/Districts`}</p>\n                </div>\n\n                <div className=\"info-item\">\n                  <h5>10L</h5>\n                  <p>Per Ten Lakh People</p>\n                </div>\n\n                <div className=\"info-item sort\">\n                  <span>\n                    <FilterIcon size={14} />\n                  </span>\n                  <p>Sort by Descending</p>\n                </div>\n\n                <div className=\"info-item sort invert\">\n                  <span>\n                    <FilterIcon size={14} />\n                  </span>\n                  <p>Sort by Ascending</p>\n                </div>\n\n                <div className=\"info-item sort\">\n                  <TableDeltaHelper />\n                </div>\n\n                <div className=\"info-item notes\">\n                  <span>\n                    <InfoIcon size={15} />\n                  </span>\n                  <p>Notes</p>\n                </div>\n              </div>\n              <div className=\"helper-right\">\n                <div className=\"info-item\">\n                  <p>Units</p>\n                </div>\n                {Object.entries({'1K': 3, '1L': 5, '1Cr': 7}).map(\n                  ([abbr, exp]) => (\n                    <div className=\"info-item\" key={abbr}>\n                      <h5>{abbr}</h5>\n                      <p>\n                        10\n                        <sup\n                          style={{\n                            verticalAlign: 'baseline',\n                            position: 'relative',\n                            top: '-.4em',\n                          }}\n                        >\n                          {exp}\n                        </sup>\n                      </p>\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n\n            <h5 className=\"text\">\n              {t('Compiled from State Govt. numbers')},{' '}\n              <Link to=\"/about\">{t('know more')}!</Link>\n            </h5>\n          </animated.div>\n        ) : null\n      )}\n\n      <div className=\"table-container\">\n        <div\n          className=\"table fadeInUp\"\n          style={{\n            gridTemplateColumns: `repeat(${tableStatistics.length + 1}, auto)`,\n          }}\n        >\n          <div className=\"row heading\">\n            <div\n              className=\"cell heading\"\n              onClick={handleSortClick.bind(this, 'regionName')}\n            >\n              <div>{t(tableOption === 'States' ? 'State/UT' : 'District')}</div>\n              {sortData.sortColumn === 'regionName' && (\n                <div\n                  className={classnames('sort-icon', {\n                    invert: sortData.isAscending,\n                  })}\n                >\n                  <FilterIcon size={10} />\n                </div>\n              )}\n            </div>\n\n            {tableStatistics.map((statistic) => (\n              <HeaderCell\n                key={statistic}\n                {...{statistic, sortData, setSortData}}\n                handleSort={handleSortClick.bind(this, statistic)}\n              />\n            ))}\n          </div>\n\n          {tableOption === 'States' &&\n            Object.keys(states)\n              .filter(\n                (stateCode) =>\n                  stateCode !== 'TT' &&\n                  !(stateCode === UNASSIGNED_STATE_CODE && isPerMillion)\n              )\n              .sort((a, b) => sortingFunction(a, b))\n              .map((stateCode) => {\n                return (\n                  <Row\n                    key={stateCode}\n                    data={states[stateCode]}\n                    {...{\n                      stateCode,\n                      isPerMillion,\n                      regionHighlighted,\n                      setRegionHighlighted,\n                      expandTable,\n                      lastUpdatedTT,\n                    }}\n                  />\n                );\n              })}\n\n          {tableOption === 'Districts' && !districts && <TableLoader />}\n\n          {tableOption === 'Districts' &&\n            districts &&\n            Object.keys(districts)\n              .sort((a, b) => sortingFunction(a, b))\n              .slice(0, DISTRICT_TABLE_COUNT)\n              .map((districtKey) => {\n                return (\n                  <Row\n                    key={districtKey}\n                    data={districts[districtKey]}\n                    districtName={districts[districtKey].districtName}\n                    {...{\n                      isPerMillion,\n                      regionHighlighted,\n                      setRegionHighlighted,\n                      expandTable,\n                      lastUpdatedTT,\n                    }}\n                  />\n                );\n              })}\n\n          <Row\n            key={'TT'}\n            data={states['TT']}\n            stateCode={'TT'}\n            {...{\n              isPerMillion,\n              regionHighlighted,\n              setRegionHighlighted,\n              expandTable,\n              lastUpdatedTT,\n            }}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted?.districtName,\n      currProps.regionHighlighted?.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted?.stateCode,\n      currProps.regionHighlighted?.stateCode\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.date, currProps.date)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Table, isEqual);\n"]},"metadata":{},"sourceType":"module"}