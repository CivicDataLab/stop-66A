{"version":3,"sources":["components/Periodpicker.js"],"names":["React","memo","data","setData","message","setMessage","useState","expandpicker","setExpandpicker","startDate","Date","endDate","addDays","key","state","setState","style","textAlign","marginBottom","className","onClick","includes","background","color","minWidth","borderRadius","toDateString","onChange","item","selection","url","getDate","getMonth","getFullYear","$","ajax","dataType","async","success","error","xhr","status","alert","minDate","maxDate","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","scroll","enabled"],"mappings":"qMA6EeA,cAAMC,MAnErB,YAA4D,EAArCC,KAAsC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAAa,EAEhBC,oBAAS,GAFO,mBAEjDC,EAFiD,KAEnCC,EAFmC,OAQ9BF,mBAAS,CACpC,CACEG,UAAW,IAAIC,KACfC,QAASC,YAAQ,IAAIF,KAAQ,GAC7BG,IAAK,eAZkD,mBAQjDC,EARiD,KAQ1CC,EAR0C,KA4CvD,OACG,6BACN,yBAAKC,MAAO,CAACC,UAAU,SAAUC,aAAc,SAC/B,4BAAQC,UAAU,oBAAoBC,QA5C/B,WACnBZ,GAAiBD,IA2CwDS,MAAOZ,EAAQiB,SAAS,SAAW,CAACC,WAAW,QAASC,MAAM,QAASC,SAAS,QAASC,aAAa,QAAU,CAACD,SAAS,QAASC,aAAa,SAA7M,IAAwNrB,EAAQiB,SAAS,SAAWP,EAAM,GAAGL,UAAUiB,eAAiB,MAAQZ,EAAM,GAAGH,QAAQe,eAAkB,gBAGnVnB,EACA,kBAAC,kBAAD,CACEoB,SApCmB,SAACC,GAEfb,EAAS,CAACa,EAAKC,YACf,IAEMC,EAAM,6CAFMF,EAAKC,UAAcpB,UAAUsB,UAAY,KAAQH,EAAKC,UAAcpB,UAAUuB,WAAW,GAAK,IAAOJ,EAAKC,UAAcpB,UAAUwB,eAE/E,KADrDL,EAAKC,UAAclB,QAAQoB,UAAY,KAAQH,EAAKC,UAAclB,QAAQqB,WAAW,GAAK,IAAOJ,EAAKC,UAAclB,QAAQsB,eACxD,IACpFC,IAAEC,KAAK,CACAL,IAAKA,EACLM,SAAU,OACxBC,OAAO,EACOC,QAAS,SAASpC,GAE7BC,EAAQD,IAEXqC,MAAO,SAASC,EAAKC,EAAQF,GAC3BG,MAAM,cAKDrC,EADQ,SAAXD,EACc,SAIP,UAaTuC,QAAS/B,YAAQ,IAAIF,KAAK,KAAM,EAAG,GAAI,GACvCkC,QAAShC,YAAQ,IAAIF,KAAK,KAAM,GAAI,IAAK,GACzCmC,sBAAsB,EACtBC,2BAA2B,EAC3BC,OAAQ,EACRC,OAAQlC,EACRmC,UAAU,WACVC,OAAQ,CAAEC,SAAS,KAChB","file":"static/js/47.24c2be8d.chunk.js","sourcesContent":["import 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport React, {useMemo} from 'react';\nimport { addDays } from 'date-fns';\nimport { useState } from 'react';\nimport $ from 'jquery';\n\nimport { DateRangePicker } from 'react-date-range';\n \n\nfunction Periodpicker({data, setData, message, setMessage}) {\n\n    const [expandpicker, setExpandpicker] = useState(false);\n    const togglepicker = () => {\n      setExpandpicker(!expandpicker);\n    }\n\n\n    const [state, setState] = useState([\n\t  {\n\t    startDate: new Date(),\n\t    endDate: addDays(new Date(), 7),\n\t    key: 'selection'\n\t  }\n\t]);\n\n    const datepicked = (item) => {\n\n         setState([item.selection]);\n         const fromdate = [item.selection][0].startDate.getDate() + '-' + ([item.selection][0].startDate.getMonth()+1) + '-' + [item.selection][0].startDate.getFullYear()\n         const todate = [item.selection][0].endDate.getDate() + '-' + ([item.selection][0].endDate.getMonth()+1) + '-' + [item.selection][0].endDate.getFullYear();\n         const url = 'http://35.154.207.72/main/data_66a_cases/' + fromdate + '/' + todate + '/'; \n         $.ajax({\n                url: url,\n                dataType: 'json',\n\t\tasync: false,\n                success: function(data){\n\t\t\t\t\t// alert('data fetched');\n\t\t\t\t\tsetData(data);\n                                       },\n\t\terror: function(xhr, status, error) { \n\t\t\t\talert('No Data'); \n\t\t\t\t}\n\t\t\t\t\n                 });\n \tif (message == \"other\"){\n        \tsetMessage(\"other1\");  \n\t}\n\telse\n\t    {\n\t\tsetMessage(\"other\");\n\t}   \n}\n\n     return (\n        <div> \n\t\t<div style={{textAlign:'center', marginBottom: '1rem'}}>  \n                  <button className=\"btn btn-secondary\" onClick={togglepicker} style={message.includes(\"other\") ? {background:'black', color:'white', minWidth:'11rem', borderRadius:'20px'} : {minWidth:'11rem', borderRadius:'20px'}}> {message.includes(\"other\") ? state[0].startDate.toDateString() + \" ~ \" + state[0].endDate.toDateString()  : \"Date Picker\" }</button>\n                </div>\n\t\t{\n\t\texpandpicker ?\n\t\t<DateRangePicker\n\t\t  onChange={datepicked}\n\t\t  minDate={addDays(new Date(2006, 1, 1), 0)}\n\t\t  maxDate={addDays(new Date(2020, 12, 31), 0)}\n\t\t  showSelectionPreview={true}\n\t\t  moveRangeOnFirstSelection={false}\n\t\t  months={1}\n\t\t  ranges={state}\n\t\t  direction=\"vertical\"\n\t\t  scroll={{ enabled: true }}\n\t\t/> : <div></div>\n\t       } \n       </div>\n    )\n}\n\nexport default React.memo(Periodpicker);\n"],"sourceRoot":""}